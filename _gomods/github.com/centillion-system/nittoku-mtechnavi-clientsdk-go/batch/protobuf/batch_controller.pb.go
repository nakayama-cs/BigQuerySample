// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: batch_controller.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateBatchTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 実行タスク
	// required service
	// required method
	// required reqeust_json
	BatchTask *BatchTask `protobuf:"bytes,1,opt,name=batch_task,json=batchTask,proto3" json:"batch_task,omitempty"`
}

func (x *CreateBatchTaskRequest) Reset() {
	*x = CreateBatchTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_batch_controller_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBatchTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchTaskRequest) ProtoMessage() {}

func (x *CreateBatchTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_batch_controller_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateBatchTaskRequest) Descriptor() ([]byte, []int) {
	return file_batch_controller_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBatchTaskRequest) GetBatchTask() *BatchTask {
	if x != nil {
		return x.BatchTask
	}
	return nil
}

type CreateBatchTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBatchTaskResponse) Reset() {
	*x = CreateBatchTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_batch_controller_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBatchTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchTaskResponse) ProtoMessage() {}

func (x *CreateBatchTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_batch_controller_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateBatchTaskResponse) Descriptor() ([]byte, []int) {
	return file_batch_controller_proto_rawDescGZIP(), []int{1}
}

type CreateBatchScheduleTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBatchScheduleTaskRequest) Reset() {
	*x = CreateBatchScheduleTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_batch_controller_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBatchScheduleTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchScheduleTaskRequest) ProtoMessage() {}

func (x *CreateBatchScheduleTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_batch_controller_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchScheduleTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateBatchScheduleTaskRequest) Descriptor() ([]byte, []int) {
	return file_batch_controller_proto_rawDescGZIP(), []int{2}
}

type CreateBatchScheduleTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBatchScheduleTaskResponse) Reset() {
	*x = CreateBatchScheduleTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_batch_controller_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBatchScheduleTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchScheduleTaskResponse) ProtoMessage() {}

func (x *CreateBatchScheduleTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_batch_controller_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchScheduleTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateBatchScheduleTaskResponse) Descriptor() ([]byte, []int) {
	return file_batch_controller_proto_rawDescGZIP(), []int{3}
}

var File_batch_controller_proto protoreflect.FileDescriptor

var file_batch_controller_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x10, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x57, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8d, 0x02, 0x0a, 0x16, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2b, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x84, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x33, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_batch_controller_proto_rawDescOnce sync.Once
	file_batch_controller_proto_rawDescData = file_batch_controller_proto_rawDesc
)

func file_batch_controller_proto_rawDescGZIP() []byte {
	file_batch_controller_proto_rawDescOnce.Do(func() {
		file_batch_controller_proto_rawDescData = protoimpl.X.CompressGZIP(file_batch_controller_proto_rawDescData)
	})
	return file_batch_controller_proto_rawDescData
}

var file_batch_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_batch_controller_proto_goTypes = []interface{}{
	(*CreateBatchTaskRequest)(nil),          // 0: mtechnavi.api.batch.CreateBatchTaskRequest
	(*CreateBatchTaskResponse)(nil),         // 1: mtechnavi.api.batch.CreateBatchTaskResponse
	(*CreateBatchScheduleTaskRequest)(nil),  // 2: mtechnavi.api.batch.CreateBatchScheduleTaskRequest
	(*CreateBatchScheduleTaskResponse)(nil), // 3: mtechnavi.api.batch.CreateBatchScheduleTaskResponse
	(*BatchTask)(nil),                       // 4: mtechnavi.api.batch.BatchTask
}
var file_batch_controller_proto_depIdxs = []int32{
	4, // 0: mtechnavi.api.batch.CreateBatchTaskRequest.batch_task:type_name -> mtechnavi.api.batch.BatchTask
	0, // 1: mtechnavi.api.batch.BatchControllerService.CreateBatchTask:input_type -> mtechnavi.api.batch.CreateBatchTaskRequest
	2, // 2: mtechnavi.api.batch.BatchControllerService.CreateBatchScheduleTask:input_type -> mtechnavi.api.batch.CreateBatchScheduleTaskRequest
	1, // 3: mtechnavi.api.batch.BatchControllerService.CreateBatchTask:output_type -> mtechnavi.api.batch.CreateBatchTaskResponse
	3, // 4: mtechnavi.api.batch.BatchControllerService.CreateBatchScheduleTask:output_type -> mtechnavi.api.batch.CreateBatchScheduleTaskResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_batch_controller_proto_init() }
func file_batch_controller_proto_init() {
	if File_batch_controller_proto != nil {
		return
	}
	file_batch_task_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_batch_controller_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBatchTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_batch_controller_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBatchTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_batch_controller_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBatchScheduleTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_batch_controller_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBatchScheduleTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_batch_controller_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_batch_controller_proto_goTypes,
		DependencyIndexes: file_batch_controller_proto_depIdxs,
		MessageInfos:      file_batch_controller_proto_msgTypes,
	}.Build()
	File_batch_controller_proto = out.File
	file_batch_controller_proto_rawDesc = nil
	file_batch_controller_proto_goTypes = nil
	file_batch_controller_proto_depIdxs = nil
}
