// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: estimaterequest.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protobuf1 "mtechnavi/blueprint/protobuf"
	protobuf2 "mtechnavi/company/protobuf"
	protobuf "mtechnavi/sharelib/protobuf"
	_ "mtechnavi/sharelib/protobuf/mtn"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 見積依頼
type EstimateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstimateRequestId string `protobuf:"bytes,1,opt,name=estimate_request_id,json=estimateRequestId,proto3" json:"estimate_request_id,omitempty"`
	// 見積依頼番号
	EstimateRequestCode string `protobuf:"bytes,2,opt,name=estimate_request_code,json=estimateRequestCode,proto3" json:"estimate_request_code,omitempty"`
	// outputonly 見積依頼ステータス
	Status *EstimateRequestStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// outputonly 回答件数
	EstimateResultSummary *EstimateRequest_EstimateResultSummary `protobuf:"bytes,4,opt,name=estimate_result_summary,json=estimateResultSummary,proto3" json:"estimate_result_summary,omitempty"`
	// 見積依頼件名
	DisplayName string `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// 内部指図書番号
	TrackingCode string `protobuf:"bytes,6,opt,name=tracking_code,json=trackingCode,proto3" json:"tracking_code,omitempty"`
	// 数量 / 単位
	Quantity *protobuf.QuantityAmount `protobuf:"bytes,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// 希望納期
	// Accuracy.DAY
	DesiredReciveDt *protobuf.Datetime `protobuf:"bytes,8,opt,name=desired_recive_dt,json=desiredReciveDt,proto3" json:"desired_recive_dt,omitempty"`
	// 優先事項
	// 名称マスタにおける種別 A0000012 (優先事項) を参照
	TopPriorityContent *protobuf.NameOption `protobuf:"bytes,9,opt,name=top_priority_content,json=topPriorityContent,proto3" json:"top_priority_content,omitempty"`
	// 発注目的
	// 名称マスタにおける種別 A0000013 (発注目的) を参照
	Purpose *protobuf.NameOption `protobuf:"bytes,10,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// 見積期日
	// Accuracy.DAY
	EstimateDeadlineDt *protobuf.Datetime `protobuf:"bytes,11,opt,name=estimate_deadline_dt,json=estimateDeadlineDt,proto3" json:"estimate_deadline_dt,omitempty"`
	// 発注予定日
	// Accuracy.DAY
	OrderPlanDt *protobuf.Datetime `protobuf:"bytes,12,opt,name=order_plan_dt,json=orderPlanDt,proto3" json:"order_plan_dt,omitempty"`
	// 発注予定日（何日後）
	OrderSite int32 `protobuf:"varint,13,opt,name=order_site,json=orderSite,proto3" json:"order_site,omitempty"`
	// お知らせ事項
	Notice string `protobuf:"bytes,14,opt,name=notice,proto3" json:"notice,omitempty"`
	// 納入先情報
	DeliveryProperties *EstimateRequest_DeliveryProperties `protobuf:"bytes,15,opt,name=delivery_properties,json=deliveryProperties,proto3" json:"delivery_properties,omitempty"`
	// 問い合わせ先情報
	ContactProperties *EstimateRequest_ContactProperties `protobuf:"bytes,16,opt,name=contact_properties,json=contactProperties,proto3" json:"contact_properties,omitempty"`
	// 要求元情報
	RequesterProperties *RequesterProperties `protobuf:"bytes,17,opt,name=requester_properties,json=requesterProperties,proto3" json:"requester_properties,omitempty"`
	// outputonly 見積先情報（ShareTo先）
	EstimateUnits []*EstimateUnit `protobuf:"bytes,18,rep,name=estimate_units,json=estimateUnits,proto3" json:"estimate_units,omitempty"`
	// 明細情報
	EstimateRequestDetails []*EstimateRequestDetail `protobuf:"bytes,19,rep,name=estimate_request_details,json=estimateRequestDetails,proto3" json:"estimate_request_details,omitempty"`
	// SAP連携項目
	SapProperties *EstimateRequestSAPProperties `protobuf:"bytes,20,opt,name=sap_properties,json=sapProperties,proto3" json:"sap_properties,omitempty"`
	// 社内備考
	Remarks string `protobuf:"bytes,21,opt,name=remarks,proto3" json:"remarks,omitempty"`
	// 見積依頼登録者情報
	Issuer *Issuer `protobuf:"bytes,22,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// 添付情報
	Attachments []*Attachment `protobuf:"bytes,23,rep,name=attachments,proto3" json:"attachments,omitempty"`
	// 見積依頼予定
	SourceEstimateRequestPlans []*EstimateRequest_SourceEstimateRequestPlan `protobuf:"bytes,24,rep,name=source_estimate_request_plans,json=sourceEstimateRequestPlans,proto3" json:"source_estimate_request_plans,omitempty"`
	// outputonly 締切
	Closed bool `protobuf:"varint,25,opt,name=closed,proto3" json:"closed,omitempty"`
	// readonly 公開依頼
	ApprovalRequestProperties *ApprovalRequestProperties `protobuf:"bytes,26,opt,name=approval_request_properties,json=approvalRequestProperties,proto3" json:"approval_request_properties,omitempty"`
	// readonly 公開承認
	ApprovalProperties *ApprovalProperties `protobuf:"bytes,27,opt,name=approval_properties,json=approvalProperties,proto3" json:"approval_properties,omitempty"`
	// readonly 改訂日
	// 公開承認がされた日付(最新)
	RevisedAt int64 `protobuf:"varint,42,opt,name=revised_at,json=revisedAt,proto3" json:"revised_at,omitempty"`
	// outputonly 完了
	Completed bool `protobuf:"varint,28,opt,name=completed,proto3" json:"completed,omitempty"`
	// outputonly 破棄
	Discarded bool `protobuf:"varint,29,opt,name=discarded,proto3" json:"discarded,omitempty"`
	// outputonly 品目
	// estimate_request_detailsの各要素が持つtransaction_unitを、重複を排除し、総和したもの
	// transaction_unit_codeの辞書順にソートされている
	AggregatedTransactionUnits []*protobuf1.TransactionUnit `protobuf:"bytes,41,rep,name=aggregated_transaction_units,json=aggregatedTransactionUnits,proto3" json:"aggregated_transaction_units,omitempty"`
	// outputonly 工程
	// 名称マスタにおける種別 A0000006 (工程) を参照
	// estimate_request_detailsの各要素が持つprocesssを、重複を排除し、総和したもの
	// NameOption.codeの辞書順にソートされている
	AggregatedProcesss []*protobuf.NameOption `protobuf:"bytes,30,rep,name=aggregated_processs,json=aggregatedProcesss,proto3" json:"aggregated_processs,omitempty"`
	// outputonly 型式
	// estimate_request_details.catalog_referenceの各要素が持つmodel_numberを、重複を排除し、総和したもの
	// model_numberの値でソートされている
	AggregatedModelNumbers []string `protobuf:"bytes,31,rep,name=aggregated_model_numbers,json=aggregatedModelNumbers,proto3" json:"aggregated_model_numbers,omitempty"`
	// outputonly 図番
	// estimate_request_details.blueprint_share_propertiesの各要素が持つ
	// "{blueprint_number}-{branch_number}"を、重複を排除し、総和したもの
	// "{blueprint_number}-{branch_number}"の値でソートされている
	AggregatedBlueprintNumberAndBranchNumbers []string `protobuf:"bytes,32,rep,name=aggregated_blueprint_number_and_branch_numbers,json=aggregatedBlueprintNumberAndBranchNumbers,proto3" json:"aggregated_blueprint_number_and_branch_numbers,omitempty"`
	// outputonly メーカー
	// estimate_request_details.catalog_referenceの各要素が持つmanufactureを、重複を排除し、総和したもの
	// manufactureの値でソートされている
	AggregatedManufactures []string `protobuf:"bytes,33,rep,name=aggregated_manufactures,json=aggregatedManufactures,proto3" json:"aggregated_manufactures,omitempty"`
	// readonly タグ（テナント単位で共有）
	Tags []string `protobuf:"bytes,34,rep,name=tags,proto3" json:"tags,omitempty"`
	// outputonly 見積依頼元
	// shared_properties.shared_byに紐づく企業情報
	IssuerCompany *protobuf2.Company `protobuf:"bytes,35,opt,name=issuer_company,json=issuerCompany,proto3" json:"issuer_company,omitempty"`
	// readonly 共有情報
	SharedProperties *protobuf.EmbeddedSharedProperties `protobuf:"bytes,36,opt,name=shared_properties,json=sharedProperties,proto3" json:"shared_properties,omitempty"`
	// outputonly 確定
	Locked bool `protobuf:"varint,37,opt,name=locked,proto3" json:"locked,omitempty"`
	// 共有項目xxx_atのscopeはidと同様
	DeletedAt int64 `protobuf:"varint,38,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt int64 `protobuf:"varint,39,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64 `protobuf:"varint,40,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *EstimateRequest) Reset() {
	*x = EstimateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequest) ProtoMessage() {}

func (x *EstimateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequest.ProtoReflect.Descriptor instead.
func (*EstimateRequest) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{0}
}

func (x *EstimateRequest) GetEstimateRequestId() string {
	if x != nil {
		return x.EstimateRequestId
	}
	return ""
}

func (x *EstimateRequest) GetEstimateRequestCode() string {
	if x != nil {
		return x.EstimateRequestCode
	}
	return ""
}

func (x *EstimateRequest) GetStatus() *EstimateRequestStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *EstimateRequest) GetEstimateResultSummary() *EstimateRequest_EstimateResultSummary {
	if x != nil {
		return x.EstimateResultSummary
	}
	return nil
}

func (x *EstimateRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *EstimateRequest) GetTrackingCode() string {
	if x != nil {
		return x.TrackingCode
	}
	return ""
}

func (x *EstimateRequest) GetQuantity() *protobuf.QuantityAmount {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *EstimateRequest) GetDesiredReciveDt() *protobuf.Datetime {
	if x != nil {
		return x.DesiredReciveDt
	}
	return nil
}

func (x *EstimateRequest) GetTopPriorityContent() *protobuf.NameOption {
	if x != nil {
		return x.TopPriorityContent
	}
	return nil
}

func (x *EstimateRequest) GetPurpose() *protobuf.NameOption {
	if x != nil {
		return x.Purpose
	}
	return nil
}

func (x *EstimateRequest) GetEstimateDeadlineDt() *protobuf.Datetime {
	if x != nil {
		return x.EstimateDeadlineDt
	}
	return nil
}

func (x *EstimateRequest) GetOrderPlanDt() *protobuf.Datetime {
	if x != nil {
		return x.OrderPlanDt
	}
	return nil
}

func (x *EstimateRequest) GetOrderSite() int32 {
	if x != nil {
		return x.OrderSite
	}
	return 0
}

func (x *EstimateRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *EstimateRequest) GetDeliveryProperties() *EstimateRequest_DeliveryProperties {
	if x != nil {
		return x.DeliveryProperties
	}
	return nil
}

func (x *EstimateRequest) GetContactProperties() *EstimateRequest_ContactProperties {
	if x != nil {
		return x.ContactProperties
	}
	return nil
}

func (x *EstimateRequest) GetRequesterProperties() *RequesterProperties {
	if x != nil {
		return x.RequesterProperties
	}
	return nil
}

func (x *EstimateRequest) GetEstimateUnits() []*EstimateUnit {
	if x != nil {
		return x.EstimateUnits
	}
	return nil
}

func (x *EstimateRequest) GetEstimateRequestDetails() []*EstimateRequestDetail {
	if x != nil {
		return x.EstimateRequestDetails
	}
	return nil
}

func (x *EstimateRequest) GetSapProperties() *EstimateRequestSAPProperties {
	if x != nil {
		return x.SapProperties
	}
	return nil
}

func (x *EstimateRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *EstimateRequest) GetIssuer() *Issuer {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *EstimateRequest) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *EstimateRequest) GetSourceEstimateRequestPlans() []*EstimateRequest_SourceEstimateRequestPlan {
	if x != nil {
		return x.SourceEstimateRequestPlans
	}
	return nil
}

func (x *EstimateRequest) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *EstimateRequest) GetApprovalRequestProperties() *ApprovalRequestProperties {
	if x != nil {
		return x.ApprovalRequestProperties
	}
	return nil
}

func (x *EstimateRequest) GetApprovalProperties() *ApprovalProperties {
	if x != nil {
		return x.ApprovalProperties
	}
	return nil
}

func (x *EstimateRequest) GetRevisedAt() int64 {
	if x != nil {
		return x.RevisedAt
	}
	return 0
}

func (x *EstimateRequest) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *EstimateRequest) GetDiscarded() bool {
	if x != nil {
		return x.Discarded
	}
	return false
}

func (x *EstimateRequest) GetAggregatedTransactionUnits() []*protobuf1.TransactionUnit {
	if x != nil {
		return x.AggregatedTransactionUnits
	}
	return nil
}

func (x *EstimateRequest) GetAggregatedProcesss() []*protobuf.NameOption {
	if x != nil {
		return x.AggregatedProcesss
	}
	return nil
}

func (x *EstimateRequest) GetAggregatedModelNumbers() []string {
	if x != nil {
		return x.AggregatedModelNumbers
	}
	return nil
}

func (x *EstimateRequest) GetAggregatedBlueprintNumberAndBranchNumbers() []string {
	if x != nil {
		return x.AggregatedBlueprintNumberAndBranchNumbers
	}
	return nil
}

func (x *EstimateRequest) GetAggregatedManufactures() []string {
	if x != nil {
		return x.AggregatedManufactures
	}
	return nil
}

func (x *EstimateRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EstimateRequest) GetIssuerCompany() *protobuf2.Company {
	if x != nil {
		return x.IssuerCompany
	}
	return nil
}

func (x *EstimateRequest) GetSharedProperties() *protobuf.EmbeddedSharedProperties {
	if x != nil {
		return x.SharedProperties
	}
	return nil
}

func (x *EstimateRequest) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *EstimateRequest) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *EstimateRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *EstimateRequest) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 見積依頼明細情報
type EstimateRequestDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 明細番号
	DetailName string `protobuf:"bytes,1,opt,name=detail_name,json=detailName,proto3" json:"detail_name,omitempty"`
	// 品目名（件名）
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// 品目(埋め込み)
	TransactionUnit *protobuf1.TransactionUnit `protobuf:"bytes,3,opt,name=transaction_unit,json=transactionUnit,proto3" json:"transaction_unit,omitempty"`
	// readonly 品目(共有用)
	// transaction_unit から共有用の情報を集めたもの
	//
	// Implementation Note::
	//
	//	埋め込まれたtransaction_unitから取得して保存する
	TransactionUnitShareProperties *EstimateRequestDetail_TransactionUnitShareProperties `protobuf:"bytes,4,opt,name=transaction_unit_share_properties,json=transactionUnitShareProperties,proto3" json:"transaction_unit_share_properties,omitempty"`
	// 図面
	BlueprintId string `protobuf:"bytes,5,opt,name=blueprint_id,json=blueprintId,proto3" json:"blueprint_id,omitempty"`
	// readonly 図面(共有用)
	// blueprint_id から共有用の情報を集めたもの
	//
	// Implementation Note::
	//
	//	EstimateRequestDetail.blueprint_id から図面マスタ情報を取得して保存する
	BlueprintShareProperties *EstimateRequestDetail_BlueprintShareProperties `protobuf:"bytes,6,opt,name=blueprint_share_properties,json=blueprintShareProperties,proto3" json:"blueprint_share_properties,omitempty"`
	// 見積依頼数量 / 見積依頼数量単位
	Quantity *protobuf.QuantityAmount `protobuf:"bytes,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// 工程
	// 名称マスタにおける種別 A0000006 (工程) を参照
	// 複数の工程を設定可能とする
	Processs []*protobuf.NameOption `protobuf:"bytes,8,rep,name=processs,proto3" json:"processs,omitempty"`
	// カタログ品情報
	CatalogReference *EstimateRequestDetail_CatalogReference `protobuf:"bytes,9,opt,name=catalog_reference,json=catalogReference,proto3" json:"catalog_reference,omitempty"`
	// 型式/図番
	// outputonly 型式/図番
	// 図番-枝番か型式のどちらかが出る（図番優先）
	// "{blueprint_share_properties.blueprint_number}-{blueprint_share_properties.branch_number}"
	// "{catalog_reference.model_number}"
	TransactionUnitNumber string `protobuf:"bytes,10,opt,name=transaction_unit_number,json=transactionUnitNumber,proto3" json:"transaction_unit_number,omitempty"`
	// 連絡事項
	ContactMatter string `protobuf:"bytes,11,opt,name=contact_matter,json=contactMatter,proto3" json:"contact_matter,omitempty"`
	// 支給品有り
	SuppliedParts bool `protobuf:"varint,12,opt,name=supplied_parts,json=suppliedParts,proto3" json:"supplied_parts,omitempty"`
	// 支給日
	// Accuracy.DAY
	SuppliesDt *protobuf.Datetime `protobuf:"bytes,13,opt,name=supplies_dt,json=suppliesDt,proto3" json:"supplies_dt,omitempty"`
	// 支給方法/場所
	SuppliesRemarks string `protobuf:"bytes,14,opt,name=supplies_remarks,json=suppliesRemarks,proto3" json:"supplies_remarks,omitempty"`
	// 検査証必要
	Inspection bool `protobuf:"varint,15,opt,name=inspection,proto3" json:"inspection,omitempty"`
}

func (x *EstimateRequestDetail) Reset() {
	*x = EstimateRequestDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequestDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequestDetail) ProtoMessage() {}

func (x *EstimateRequestDetail) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequestDetail.ProtoReflect.Descriptor instead.
func (*EstimateRequestDetail) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{1}
}

func (x *EstimateRequestDetail) GetDetailName() string {
	if x != nil {
		return x.DetailName
	}
	return ""
}

func (x *EstimateRequestDetail) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *EstimateRequestDetail) GetTransactionUnit() *protobuf1.TransactionUnit {
	if x != nil {
		return x.TransactionUnit
	}
	return nil
}

func (x *EstimateRequestDetail) GetTransactionUnitShareProperties() *EstimateRequestDetail_TransactionUnitShareProperties {
	if x != nil {
		return x.TransactionUnitShareProperties
	}
	return nil
}

func (x *EstimateRequestDetail) GetBlueprintId() string {
	if x != nil {
		return x.BlueprintId
	}
	return ""
}

func (x *EstimateRequestDetail) GetBlueprintShareProperties() *EstimateRequestDetail_BlueprintShareProperties {
	if x != nil {
		return x.BlueprintShareProperties
	}
	return nil
}

func (x *EstimateRequestDetail) GetQuantity() *protobuf.QuantityAmount {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *EstimateRequestDetail) GetProcesss() []*protobuf.NameOption {
	if x != nil {
		return x.Processs
	}
	return nil
}

func (x *EstimateRequestDetail) GetCatalogReference() *EstimateRequestDetail_CatalogReference {
	if x != nil {
		return x.CatalogReference
	}
	return nil
}

func (x *EstimateRequestDetail) GetTransactionUnitNumber() string {
	if x != nil {
		return x.TransactionUnitNumber
	}
	return ""
}

func (x *EstimateRequestDetail) GetContactMatter() string {
	if x != nil {
		return x.ContactMatter
	}
	return ""
}

func (x *EstimateRequestDetail) GetSuppliedParts() bool {
	if x != nil {
		return x.SuppliedParts
	}
	return false
}

func (x *EstimateRequestDetail) GetSuppliesDt() *protobuf.Datetime {
	if x != nil {
		return x.SuppliesDt
	}
	return nil
}

func (x *EstimateRequestDetail) GetSuppliesRemarks() string {
	if x != nil {
		return x.SuppliesRemarks
	}
	return ""
}

func (x *EstimateRequestDetail) GetInspection() bool {
	if x != nil {
		return x.Inspection
	}
	return false
}

type EstimateUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Implementation Note:
	//
	//	estimate_request_id + company_id(見積先企業ID) と同じ粒度
	//	EstimateRequestの更新と同一トランザクションで更新される
	EstimateUnitId string `protobuf:"bytes,1,opt,name=estimate_unit_id,json=estimateUnitId,proto3" json:"estimate_unit_id,omitempty"`
	// 見積依頼
	EstimateRequestId string `protobuf:"bytes,2,opt,name=estimate_request_id,json=estimateRequestId,proto3" json:"estimate_request_id,omitempty"`
	// 見積先
	// shareto先
	CompanyId string `protobuf:"bytes,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 見積先（取引窓口）
	// component_unit_id
	PostUnitId string `protobuf:"bytes,4,opt,name=post_unit_id,json=postUnitId,proto3" json:"post_unit_id,omitempty"`
	// readonly 依頼日
	// 公開承認がされた日付(初回)
	RequestedAt int64 `protobuf:"varint,5,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	// readonly 改訂日
	// 公開承認がされた日付(最新)
	RevisedAt int64 `protobuf:"varint,10,opt,name=revised_at,json=revisedAt,proto3" json:"revised_at,omitempty"`
	// readonly 共有情報
	SharedProperties *protobuf.EmbeddedSharedProperties `protobuf:"bytes,6,opt,name=shared_properties,json=sharedProperties,proto3" json:"shared_properties,omitempty"`
	// 共有項目xxx_atのscopeはidと同様
	DeletedAt int64 `protobuf:"varint,7,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt int64 `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64 `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *EstimateUnit) Reset() {
	*x = EstimateUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateUnit) ProtoMessage() {}

func (x *EstimateUnit) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateUnit.ProtoReflect.Descriptor instead.
func (*EstimateUnit) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{2}
}

func (x *EstimateUnit) GetEstimateUnitId() string {
	if x != nil {
		return x.EstimateUnitId
	}
	return ""
}

func (x *EstimateUnit) GetEstimateRequestId() string {
	if x != nil {
		return x.EstimateRequestId
	}
	return ""
}

func (x *EstimateUnit) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *EstimateUnit) GetPostUnitId() string {
	if x != nil {
		return x.PostUnitId
	}
	return ""
}

func (x *EstimateUnit) GetRequestedAt() int64 {
	if x != nil {
		return x.RequestedAt
	}
	return 0
}

func (x *EstimateUnit) GetRevisedAt() int64 {
	if x != nil {
		return x.RevisedAt
	}
	return 0
}

func (x *EstimateUnit) GetSharedProperties() *protobuf.EmbeddedSharedProperties {
	if x != nil {
		return x.SharedProperties
	}
	return nil
}

func (x *EstimateUnit) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *EstimateUnit) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *EstimateUnit) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type EstimateRequestSAPProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 受付部門情報
	ReceiverProperties *SAPReceiverProperties `protobuf:"bytes,1,opt,name=receiver_properties,json=receiverProperties,proto3" json:"receiver_properties,omitempty"`
	// 会社
	Company *SAPCodeItem `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	// 要求元原価センタ
	CostCenter *CostCenter `protobuf:"bytes,3,opt,name=cost_center,json=costCenter,proto3" json:"cost_center,omitempty"`
	// 作業分類
	// 名称マスタにおける種別 A0000014 (作業分類) を参照
	WorkCategory *protobuf.NameOption `protobuf:"bytes,4,opt,name=work_category,json=workCategory,proto3" json:"work_category,omitempty"`
	// 作業用途
	// 名称マスタにおける種別 A0000015 (作業用途) を参照
	WorkUsage *protobuf.NameOption `protobuf:"bytes,5,opt,name=work_usage,json=workUsage,proto3" json:"work_usage,omitempty"`
}

func (x *EstimateRequestSAPProperties) Reset() {
	*x = EstimateRequestSAPProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequestSAPProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequestSAPProperties) ProtoMessage() {}

func (x *EstimateRequestSAPProperties) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequestSAPProperties.ProtoReflect.Descriptor instead.
func (*EstimateRequestSAPProperties) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{3}
}

func (x *EstimateRequestSAPProperties) GetReceiverProperties() *SAPReceiverProperties {
	if x != nil {
		return x.ReceiverProperties
	}
	return nil
}

func (x *EstimateRequestSAPProperties) GetCompany() *SAPCodeItem {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *EstimateRequestSAPProperties) GetCostCenter() *CostCenter {
	if x != nil {
		return x.CostCenter
	}
	return nil
}

func (x *EstimateRequestSAPProperties) GetWorkCategory() *protobuf.NameOption {
	if x != nil {
		return x.WorkCategory
	}
	return nil
}

func (x *EstimateRequestSAPProperties) GetWorkUsage() *protobuf.NameOption {
	if x != nil {
		return x.WorkUsage
	}
	return nil
}

type EstimateRequest_EstimateResultSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 見積依頼先の件数
	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 見積結果の件数（辞退を含む）
	Done int32 `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	// 見積結果の件数（辞退を含む） / 見積依頼先の件数
	// e.g.
	// ３件に相見積もりを出して、1件辞退、1件結果が返ってきている場合
	//
	//	"2/3"
	Ratio string `protobuf:"bytes,3,opt,name=ratio,proto3" json:"ratio,omitempty"`
	// 回答完了
	// 見積結果の件数（辞退を含む）と 見積依頼先の件数 が一致する場合 true
	Completed bool `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *EstimateRequest_EstimateResultSummary) Reset() {
	*x = EstimateRequest_EstimateResultSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequest_EstimateResultSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequest_EstimateResultSummary) ProtoMessage() {}

func (x *EstimateRequest_EstimateResultSummary) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequest_EstimateResultSummary.ProtoReflect.Descriptor instead.
func (*EstimateRequest_EstimateResultSummary) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{0, 0}
}

func (x *EstimateRequest_EstimateResultSummary) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EstimateRequest_EstimateResultSummary) GetDone() int32 {
	if x != nil {
		return x.Done
	}
	return 0
}

func (x *EstimateRequest_EstimateResultSummary) GetRatio() string {
	if x != nil {
		return x.Ratio
	}
	return ""
}

func (x *EstimateRequest_EstimateResultSummary) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type EstimateRequest_SourceEstimateRequestPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstimateRequestPlanId string `protobuf:"bytes,1,opt,name=estimate_request_plan_id,json=estimateRequestPlanId,proto3" json:"estimate_request_plan_id,omitempty"`
	// 展開
	Used bool `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
}

func (x *EstimateRequest_SourceEstimateRequestPlan) Reset() {
	*x = EstimateRequest_SourceEstimateRequestPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequest_SourceEstimateRequestPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequest_SourceEstimateRequestPlan) ProtoMessage() {}

func (x *EstimateRequest_SourceEstimateRequestPlan) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequest_SourceEstimateRequestPlan.ProtoReflect.Descriptor instead.
func (*EstimateRequest_SourceEstimateRequestPlan) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{0, 1}
}

func (x *EstimateRequest_SourceEstimateRequestPlan) GetEstimateRequestPlanId() string {
	if x != nil {
		return x.EstimateRequestPlanId
	}
	return ""
}

func (x *EstimateRequest_SourceEstimateRequestPlan) GetUsed() bool {
	if x != nil {
		return x.Used
	}
	return false
}

type EstimateRequest_DeliveryProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 納入先/直送先
	DeliveryPoint *protobuf.ComponentUnitReference `protobuf:"bytes,1,opt,name=delivery_point,json=deliveryPoint,proto3" json:"delivery_point,omitempty"`
	// 納入先住所
	Address *protobuf.Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// readonly 連携項目
	LinkageItems []string `protobuf:"bytes,3,rep,name=linkage_items,json=linkageItems,proto3" json:"linkage_items,omitempty"`
	// 場所情報
	PlaceProperties *EstimateRequest_DeliveryProperties_PlaceProperties `protobuf:"bytes,4,opt,name=place_properties,json=placeProperties,proto3" json:"place_properties,omitempty"`
}

func (x *EstimateRequest_DeliveryProperties) Reset() {
	*x = EstimateRequest_DeliveryProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequest_DeliveryProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequest_DeliveryProperties) ProtoMessage() {}

func (x *EstimateRequest_DeliveryProperties) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequest_DeliveryProperties.ProtoReflect.Descriptor instead.
func (*EstimateRequest_DeliveryProperties) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{0, 2}
}

func (x *EstimateRequest_DeliveryProperties) GetDeliveryPoint() *protobuf.ComponentUnitReference {
	if x != nil {
		return x.DeliveryPoint
	}
	return nil
}

func (x *EstimateRequest_DeliveryProperties) GetAddress() *protobuf.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *EstimateRequest_DeliveryProperties) GetLinkageItems() []string {
	if x != nil {
		return x.LinkageItems
	}
	return nil
}

func (x *EstimateRequest_DeliveryProperties) GetPlaceProperties() *EstimateRequest_DeliveryProperties_PlaceProperties {
	if x != nil {
		return x.PlaceProperties
	}
	return nil
}

type EstimateRequest_ContactProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 問い合わせ部門
	OrganizationUnit *protobuf.ComponentUnitReference `protobuf:"bytes,1,opt,name=organization_unit,json=organizationUnit,proto3" json:"organization_unit,omitempty"`
	// 問い合わせ担当者
	Staff *protobuf.StaffReference `protobuf:"bytes,2,opt,name=staff,proto3" json:"staff,omitempty"`
	// 問い合わせ連絡先（部門）
	PhoneNumber1 string `protobuf:"bytes,3,opt,name=phone_number1,json=phoneNumber1,proto3" json:"phone_number1,omitempty"`
	// 問い合わせ連絡先（担当者）
	PhoneNumber2 string `protobuf:"bytes,4,opt,name=phone_number2,json=phoneNumber2,proto3" json:"phone_number2,omitempty"`
}

func (x *EstimateRequest_ContactProperties) Reset() {
	*x = EstimateRequest_ContactProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequest_ContactProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequest_ContactProperties) ProtoMessage() {}

func (x *EstimateRequest_ContactProperties) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequest_ContactProperties.ProtoReflect.Descriptor instead.
func (*EstimateRequest_ContactProperties) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{0, 3}
}

func (x *EstimateRequest_ContactProperties) GetOrganizationUnit() *protobuf.ComponentUnitReference {
	if x != nil {
		return x.OrganizationUnit
	}
	return nil
}

func (x *EstimateRequest_ContactProperties) GetStaff() *protobuf.StaffReference {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *EstimateRequest_ContactProperties) GetPhoneNumber1() string {
	if x != nil {
		return x.PhoneNumber1
	}
	return ""
}

func (x *EstimateRequest_ContactProperties) GetPhoneNumber2() string {
	if x != nil {
		return x.PhoneNumber2
	}
	return ""
}

type EstimateRequest_DeliveryProperties_PlaceProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 納入場所
	DisplayNameLang map[string]string `protobuf:"bytes,1,rep,name=display_name_lang,json=displayNameLang,proto3" json:"display_name_lang,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 納入場所（地図）
	Image *ImageFile `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *EstimateRequest_DeliveryProperties_PlaceProperties) Reset() {
	*x = EstimateRequest_DeliveryProperties_PlaceProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequest_DeliveryProperties_PlaceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequest_DeliveryProperties_PlaceProperties) ProtoMessage() {}

func (x *EstimateRequest_DeliveryProperties_PlaceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequest_DeliveryProperties_PlaceProperties.ProtoReflect.Descriptor instead.
func (*EstimateRequest_DeliveryProperties_PlaceProperties) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *EstimateRequest_DeliveryProperties_PlaceProperties) GetDisplayNameLang() map[string]string {
	if x != nil {
		return x.DisplayNameLang
	}
	return nil
}

func (x *EstimateRequest_DeliveryProperties_PlaceProperties) GetImage() *ImageFile {
	if x != nil {
		return x.Image
	}
	return nil
}

type EstimateRequestDetail_TransactionUnitShareProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionUnitId string `protobuf:"bytes,1,opt,name=transaction_unit_id,json=transactionUnitId,proto3" json:"transaction_unit_id,omitempty"`
	// 項目名
	// ja:日本語名
	DisplayNameLang map[string]string `protobuf:"bytes,2,rep,name=display_name_lang,json=displayNameLang,proto3" json:"display_name_lang,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EstimateRequestDetail_TransactionUnitShareProperties) Reset() {
	*x = EstimateRequestDetail_TransactionUnitShareProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequestDetail_TransactionUnitShareProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequestDetail_TransactionUnitShareProperties) ProtoMessage() {}

func (x *EstimateRequestDetail_TransactionUnitShareProperties) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequestDetail_TransactionUnitShareProperties.ProtoReflect.Descriptor instead.
func (*EstimateRequestDetail_TransactionUnitShareProperties) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{1, 0}
}

func (x *EstimateRequestDetail_TransactionUnitShareProperties) GetTransactionUnitId() string {
	if x != nil {
		return x.TransactionUnitId
	}
	return ""
}

func (x *EstimateRequestDetail_TransactionUnitShareProperties) GetDisplayNameLang() map[string]string {
	if x != nil {
		return x.DisplayNameLang
	}
	return nil
}

type EstimateRequestDetail_BlueprintShareProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlueprintId string `protobuf:"bytes,1,opt,name=blueprint_id,json=blueprintId,proto3" json:"blueprint_id,omitempty"`
	// 図番
	BlueprintNumber string `protobuf:"bytes,2,opt,name=blueprint_number,json=blueprintNumber,proto3" json:"blueprint_number,omitempty"`
	// 枝番
	BranchNumber string `protobuf:"bytes,3,opt,name=branch_number,json=branchNumber,proto3" json:"branch_number,omitempty"`
	// 改訂番号
	Revision int32 `protobuf:"varint,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// 図面ファイル
	AssetId string `protobuf:"bytes,5,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *EstimateRequestDetail_BlueprintShareProperties) Reset() {
	*x = EstimateRequestDetail_BlueprintShareProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequestDetail_BlueprintShareProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequestDetail_BlueprintShareProperties) ProtoMessage() {}

func (x *EstimateRequestDetail_BlueprintShareProperties) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequestDetail_BlueprintShareProperties.ProtoReflect.Descriptor instead.
func (*EstimateRequestDetail_BlueprintShareProperties) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{1, 1}
}

func (x *EstimateRequestDetail_BlueprintShareProperties) GetBlueprintId() string {
	if x != nil {
		return x.BlueprintId
	}
	return ""
}

func (x *EstimateRequestDetail_BlueprintShareProperties) GetBlueprintNumber() string {
	if x != nil {
		return x.BlueprintNumber
	}
	return ""
}

func (x *EstimateRequestDetail_BlueprintShareProperties) GetBranchNumber() string {
	if x != nil {
		return x.BranchNumber
	}
	return ""
}

func (x *EstimateRequestDetail_BlueprintShareProperties) GetRevision() int32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *EstimateRequestDetail_BlueprintShareProperties) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type EstimateRequestDetail_CatalogReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 型式
	ModelNumber string `protobuf:"bytes,1,opt,name=model_number,json=modelNumber,proto3" json:"model_number,omitempty"`
	// メーカー
	Manufacture string `protobuf:"bytes,2,opt,name=manufacture,proto3" json:"manufacture,omitempty"`
}

func (x *EstimateRequestDetail_CatalogReference) Reset() {
	*x = EstimateRequestDetail_CatalogReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estimaterequest_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateRequestDetail_CatalogReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequestDetail_CatalogReference) ProtoMessage() {}

func (x *EstimateRequestDetail_CatalogReference) ProtoReflect() protoreflect.Message {
	mi := &file_estimaterequest_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequestDetail_CatalogReference.ProtoReflect.Descriptor instead.
func (*EstimateRequestDetail_CatalogReference) Descriptor() ([]byte, []int) {
	return file_estimaterequest_proto_rawDescGZIP(), []int{1, 2}
}

func (x *EstimateRequestDetail_CatalogReference) GetModelNumber() string {
	if x != nil {
		return x.ModelNumber
	}
	return ""
}

func (x *EstimateRequestDetail_CatalogReference) GetManufacture() string {
	if x != nil {
		return x.Manufacture
	}
	return ""
}

var File_estimaterequest_proto protoreflect.FileDescriptor

var file_estimaterequest_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x14, 0x6d, 0x74, 0x6e, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x6d, 0x74, 0x6e, 0x2f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x62, 0x61, 0x73, 0x69, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec,
	0x1e, 0x0a, 0x0f, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x3a, 0x0a, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x13, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x47,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x77, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x29, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x11, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0f, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x63, 0x69, 0x76, 0x65, 0x44, 0x74, 0x12, 0x4e,
	0x0a, 0x14, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x12, 0x74, 0x6f, 0x70, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x07, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01,
	0x52, 0x12, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x64, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x6e, 0x44, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02,
	0x02, 0x08, 0x01, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x13, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x12,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x72, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x06, 0xc2, 0xb8, 0x02,
	0x02, 0x08, 0x01, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x13, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x4d, 0x0a, 0x0e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x0d, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12,
	0x71, 0x0a, 0x18, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x16, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x5d, 0x0a, 0x0e, 0x73, 0x61, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x41, 0x50, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x0d, 0x73, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x1d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x1a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x73, 0x0a, 0x1b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x19, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x13, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x12, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x1c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x1a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x45, 0x0a, 0x13, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x61, 0x0a, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28, 0x09, 0x52, 0x29, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x17, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x21, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x22, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x0d, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x4f, 0x0a, 0x11, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a,
	0x75, 0x0a, 0x15, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x6f,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x1a, 0x68, 0x0a, 0x19, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64,
	0x1a, 0xfb, 0x04, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x6c, 0x69, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x06, 0xc2, 0xb8,
	0x02, 0x02, 0x08, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a,
	0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0c, 0x6c, 0x69,
	0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x7f, 0x0a, 0x10, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0xb0, 0x02, 0x0a, 0x0f,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x95, 0x01, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x06,
	0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x06, 0xc2, 0xb8, 0x02,
	0x02, 0x08, 0x03, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x42, 0x0a, 0x14, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xfc,
	0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x12, 0x2b, 0x0a, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02,
	0x08, 0x03, 0x52, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31,
	0x12, 0x2b, 0x0a, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x22, 0xc6, 0x0d,
	0x0a, 0x15, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8,
	0x02, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0xa1, 0x01, 0x0a, 0x21, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x06, 0xc2, 0xb8,
	0x02, 0x02, 0x08, 0x01, 0x52, 0x1e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x8e, 0x01, 0x0a, 0x1a, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x6c,
	0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x18,
	0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06,
	0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x73,
	0x12, 0x75, 0x0a, 0x11, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x06, 0xc2,
	0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x10, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x12, 0x2d,
	0x0a, 0x0e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0d,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0a,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x44, 0x74, 0x12, 0x31, 0x0a, 0x10, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0f, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x26, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb6, 0x02, 0x0a, 0x1e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x11, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64,
	0x12, 0x97, 0x01, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x63, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x1a, 0x42, 0x0a, 0x14, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xec,
	0x01, 0x0a, 0x18, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x0c, 0x62,
	0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x10, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x0d, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8,
	0x02, 0x02, 0x08, 0x03, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x67, 0x0a,
	0x10, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52,
	0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0b,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0xd4, 0x03, 0x0a, 0x0c, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x51, 0x0a, 0x13, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21,
	0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0xd2, 0xb8, 0x02, 0x17, 0x0a, 0x15, 0x0a, 0x13, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x52, 0x11, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08,
	0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x06, 0xc2, 0xb8, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xc2, 0xb8,
	0x02, 0x02, 0x08, 0x01, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x4f, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x10,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf8, 0x02,
	0x0a, 0x1c, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x41, 0x50, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x60,
	0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x41, 0x50, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x12, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x3f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x41, 0x50,
	0x43, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f,
	0x73, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c,
	0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_estimaterequest_proto_rawDescOnce sync.Once
	file_estimaterequest_proto_rawDescData = file_estimaterequest_proto_rawDesc
)

func file_estimaterequest_proto_rawDescGZIP() []byte {
	file_estimaterequest_proto_rawDescOnce.Do(func() {
		file_estimaterequest_proto_rawDescData = protoimpl.X.CompressGZIP(file_estimaterequest_proto_rawDescData)
	})
	return file_estimaterequest_proto_rawDescData
}

var file_estimaterequest_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_estimaterequest_proto_goTypes = []interface{}{
	(*EstimateRequest)(nil),                                    // 0: mtechnavi.api.estimation.EstimateRequest
	(*EstimateRequestDetail)(nil),                              // 1: mtechnavi.api.estimation.EstimateRequestDetail
	(*EstimateUnit)(nil),                                       // 2: mtechnavi.api.estimation.EstimateUnit
	(*EstimateRequestSAPProperties)(nil),                       // 3: mtechnavi.api.estimation.EstimateRequestSAPProperties
	(*EstimateRequest_EstimateResultSummary)(nil),              // 4: mtechnavi.api.estimation.EstimateRequest.EstimateResultSummary
	(*EstimateRequest_SourceEstimateRequestPlan)(nil),          // 5: mtechnavi.api.estimation.EstimateRequest.SourceEstimateRequestPlan
	(*EstimateRequest_DeliveryProperties)(nil),                 // 6: mtechnavi.api.estimation.EstimateRequest.DeliveryProperties
	(*EstimateRequest_ContactProperties)(nil),                  // 7: mtechnavi.api.estimation.EstimateRequest.ContactProperties
	(*EstimateRequest_DeliveryProperties_PlaceProperties)(nil), // 8: mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.PlaceProperties
	nil, // 9: mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.PlaceProperties.DisplayNameLangEntry
	(*EstimateRequestDetail_TransactionUnitShareProperties)(nil), // 10: mtechnavi.api.estimation.EstimateRequestDetail.TransactionUnitShareProperties
	(*EstimateRequestDetail_BlueprintShareProperties)(nil),       // 11: mtechnavi.api.estimation.EstimateRequestDetail.BlueprintShareProperties
	(*EstimateRequestDetail_CatalogReference)(nil),               // 12: mtechnavi.api.estimation.EstimateRequestDetail.CatalogReference
	nil,                                       // 13: mtechnavi.api.estimation.EstimateRequestDetail.TransactionUnitShareProperties.DisplayNameLangEntry
	(*EstimateRequestStatus)(nil),             // 14: mtechnavi.api.estimation.EstimateRequestStatus
	(*protobuf.QuantityAmount)(nil),           // 15: sharelib.QuantityAmount
	(*protobuf.Datetime)(nil),                 // 16: sharelib.Datetime
	(*protobuf.NameOption)(nil),               // 17: sharelib.NameOption
	(*RequesterProperties)(nil),               // 18: mtechnavi.api.estimation.RequesterProperties
	(*Issuer)(nil),                            // 19: mtechnavi.api.estimation.Issuer
	(*Attachment)(nil),                        // 20: mtechnavi.api.estimation.Attachment
	(*ApprovalRequestProperties)(nil),         // 21: mtechnavi.api.estimation.ApprovalRequestProperties
	(*ApprovalProperties)(nil),                // 22: mtechnavi.api.estimation.ApprovalProperties
	(*protobuf1.TransactionUnit)(nil),         // 23: mtechnavi.api.blueprint.TransactionUnit
	(*protobuf2.Company)(nil),                 // 24: mtechnavi.api.company.Company
	(*protobuf.EmbeddedSharedProperties)(nil), // 25: sharelib.EmbeddedSharedProperties
	(*SAPReceiverProperties)(nil),             // 26: mtechnavi.api.estimation.SAPReceiverProperties
	(*SAPCodeItem)(nil),                       // 27: mtechnavi.api.estimation.SAPCodeItem
	(*CostCenter)(nil),                        // 28: mtechnavi.api.estimation.CostCenter
	(*protobuf.ComponentUnitReference)(nil),   // 29: sharelib.ComponentUnitReference
	(*protobuf.Address)(nil),                  // 30: sharelib.Address
	(*protobuf.StaffReference)(nil),           // 31: sharelib.StaffReference
	(*ImageFile)(nil),                         // 32: mtechnavi.api.estimation.ImageFile
}
var file_estimaterequest_proto_depIdxs = []int32{
	14, // 0: mtechnavi.api.estimation.EstimateRequest.status:type_name -> mtechnavi.api.estimation.EstimateRequestStatus
	4,  // 1: mtechnavi.api.estimation.EstimateRequest.estimate_result_summary:type_name -> mtechnavi.api.estimation.EstimateRequest.EstimateResultSummary
	15, // 2: mtechnavi.api.estimation.EstimateRequest.quantity:type_name -> sharelib.QuantityAmount
	16, // 3: mtechnavi.api.estimation.EstimateRequest.desired_recive_dt:type_name -> sharelib.Datetime
	17, // 4: mtechnavi.api.estimation.EstimateRequest.top_priority_content:type_name -> sharelib.NameOption
	17, // 5: mtechnavi.api.estimation.EstimateRequest.purpose:type_name -> sharelib.NameOption
	16, // 6: mtechnavi.api.estimation.EstimateRequest.estimate_deadline_dt:type_name -> sharelib.Datetime
	16, // 7: mtechnavi.api.estimation.EstimateRequest.order_plan_dt:type_name -> sharelib.Datetime
	6,  // 8: mtechnavi.api.estimation.EstimateRequest.delivery_properties:type_name -> mtechnavi.api.estimation.EstimateRequest.DeliveryProperties
	7,  // 9: mtechnavi.api.estimation.EstimateRequest.contact_properties:type_name -> mtechnavi.api.estimation.EstimateRequest.ContactProperties
	18, // 10: mtechnavi.api.estimation.EstimateRequest.requester_properties:type_name -> mtechnavi.api.estimation.RequesterProperties
	2,  // 11: mtechnavi.api.estimation.EstimateRequest.estimate_units:type_name -> mtechnavi.api.estimation.EstimateUnit
	1,  // 12: mtechnavi.api.estimation.EstimateRequest.estimate_request_details:type_name -> mtechnavi.api.estimation.EstimateRequestDetail
	3,  // 13: mtechnavi.api.estimation.EstimateRequest.sap_properties:type_name -> mtechnavi.api.estimation.EstimateRequestSAPProperties
	19, // 14: mtechnavi.api.estimation.EstimateRequest.issuer:type_name -> mtechnavi.api.estimation.Issuer
	20, // 15: mtechnavi.api.estimation.EstimateRequest.attachments:type_name -> mtechnavi.api.estimation.Attachment
	5,  // 16: mtechnavi.api.estimation.EstimateRequest.source_estimate_request_plans:type_name -> mtechnavi.api.estimation.EstimateRequest.SourceEstimateRequestPlan
	21, // 17: mtechnavi.api.estimation.EstimateRequest.approval_request_properties:type_name -> mtechnavi.api.estimation.ApprovalRequestProperties
	22, // 18: mtechnavi.api.estimation.EstimateRequest.approval_properties:type_name -> mtechnavi.api.estimation.ApprovalProperties
	23, // 19: mtechnavi.api.estimation.EstimateRequest.aggregated_transaction_units:type_name -> mtechnavi.api.blueprint.TransactionUnit
	17, // 20: mtechnavi.api.estimation.EstimateRequest.aggregated_processs:type_name -> sharelib.NameOption
	24, // 21: mtechnavi.api.estimation.EstimateRequest.issuer_company:type_name -> mtechnavi.api.company.Company
	25, // 22: mtechnavi.api.estimation.EstimateRequest.shared_properties:type_name -> sharelib.EmbeddedSharedProperties
	23, // 23: mtechnavi.api.estimation.EstimateRequestDetail.transaction_unit:type_name -> mtechnavi.api.blueprint.TransactionUnit
	10, // 24: mtechnavi.api.estimation.EstimateRequestDetail.transaction_unit_share_properties:type_name -> mtechnavi.api.estimation.EstimateRequestDetail.TransactionUnitShareProperties
	11, // 25: mtechnavi.api.estimation.EstimateRequestDetail.blueprint_share_properties:type_name -> mtechnavi.api.estimation.EstimateRequestDetail.BlueprintShareProperties
	15, // 26: mtechnavi.api.estimation.EstimateRequestDetail.quantity:type_name -> sharelib.QuantityAmount
	17, // 27: mtechnavi.api.estimation.EstimateRequestDetail.processs:type_name -> sharelib.NameOption
	12, // 28: mtechnavi.api.estimation.EstimateRequestDetail.catalog_reference:type_name -> mtechnavi.api.estimation.EstimateRequestDetail.CatalogReference
	16, // 29: mtechnavi.api.estimation.EstimateRequestDetail.supplies_dt:type_name -> sharelib.Datetime
	25, // 30: mtechnavi.api.estimation.EstimateUnit.shared_properties:type_name -> sharelib.EmbeddedSharedProperties
	26, // 31: mtechnavi.api.estimation.EstimateRequestSAPProperties.receiver_properties:type_name -> mtechnavi.api.estimation.SAPReceiverProperties
	27, // 32: mtechnavi.api.estimation.EstimateRequestSAPProperties.company:type_name -> mtechnavi.api.estimation.SAPCodeItem
	28, // 33: mtechnavi.api.estimation.EstimateRequestSAPProperties.cost_center:type_name -> mtechnavi.api.estimation.CostCenter
	17, // 34: mtechnavi.api.estimation.EstimateRequestSAPProperties.work_category:type_name -> sharelib.NameOption
	17, // 35: mtechnavi.api.estimation.EstimateRequestSAPProperties.work_usage:type_name -> sharelib.NameOption
	29, // 36: mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.delivery_point:type_name -> sharelib.ComponentUnitReference
	30, // 37: mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.address:type_name -> sharelib.Address
	8,  // 38: mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.place_properties:type_name -> mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.PlaceProperties
	29, // 39: mtechnavi.api.estimation.EstimateRequest.ContactProperties.organization_unit:type_name -> sharelib.ComponentUnitReference
	31, // 40: mtechnavi.api.estimation.EstimateRequest.ContactProperties.staff:type_name -> sharelib.StaffReference
	9,  // 41: mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.PlaceProperties.display_name_lang:type_name -> mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.PlaceProperties.DisplayNameLangEntry
	32, // 42: mtechnavi.api.estimation.EstimateRequest.DeliveryProperties.PlaceProperties.image:type_name -> mtechnavi.api.estimation.ImageFile
	13, // 43: mtechnavi.api.estimation.EstimateRequestDetail.TransactionUnitShareProperties.display_name_lang:type_name -> mtechnavi.api.estimation.EstimateRequestDetail.TransactionUnitShareProperties.DisplayNameLangEntry
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_estimaterequest_proto_init() }
func file_estimaterequest_proto_init() {
	if File_estimaterequest_proto != nil {
		return
	}
	file_estimatebasictypes_proto_init()
	file_estimatestatus_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_estimaterequest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequestDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequestSAPProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequest_EstimateResultSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequest_SourceEstimateRequestPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequest_DeliveryProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequest_ContactProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequest_DeliveryProperties_PlaceProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequestDetail_TransactionUnitShareProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequestDetail_BlueprintShareProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estimaterequest_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateRequestDetail_CatalogReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_estimaterequest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_estimaterequest_proto_goTypes,
		DependencyIndexes: file_estimaterequest_proto_depIdxs,
		MessageInfos:      file_estimaterequest_proto_msgTypes,
	}.Build()
	File_estimaterequest_proto = out.File
	file_estimaterequest_proto_rawDesc = nil
	file_estimaterequest_proto_goTypes = nil
	file_estimaterequest_proto_depIdxs = nil
}
