// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: blueprint.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	protobuf1 "mtechnavi/assetinventory/protobuf"
	protobuf "mtechnavi/sharelib/protobuf"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 項目
type TransactionUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionUnitId string `protobuf:"bytes,1,opt,name=transaction_unit_id,json=transactionUnitId,proto3" json:"transaction_unit_id,omitempty"`
	// 項目コード
	TransactionUnitCode string `protobuf:"bytes,2,opt,name=transaction_unit_code,json=transactionUnitCode,proto3" json:"transaction_unit_code,omitempty"`
	// 項目名
	// ja:日本語名
	DisplayNameLang map[string]string `protobuf:"bytes,3,rep,name=display_name_lang,json=displayNameLang,proto3" json:"display_name_lang,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 依頼図面
	BlueprintReference *BlueprintReference `protobuf:"bytes,4,opt,name=blueprint_reference,json=blueprintReference,proto3" json:"blueprint_reference,omitempty"`
	// カタログ品情報
	CatalogReference *CatalogReference `protobuf:"bytes,5,opt,name=catalog_reference,json=catalogReference,proto3" json:"catalog_reference,omitempty"`
	// 数量単位
	// 名称マスタにおける種別 A0000005 (数量単位) を参照
	QuantityUnit *protobuf.NameOption `protobuf:"bytes,6,opt,name=quantity_unit,json=quantityUnit,proto3" json:"quantity_unit,omitempty"`
	// 工程
	// 名称マスタにおける種別 A0000006 (工程) を参照
	// 複数の工程を設定可能とする
	Processs []*protobuf.NameOption `protobuf:"bytes,7,rep,name=processs,proto3" json:"processs,omitempty"`
	// 大分類 名称マスタにおける種別 A0000007 (大分類（項目）) を参照
	Category1 *protobuf.NameOption `protobuf:"bytes,8,opt,name=category1,proto3" json:"category1,omitempty"`
	// 中分類 名称マスタにおける種別 A0000008 (中分類（項目）) を参照
	Category2 *protobuf.NameOption `protobuf:"bytes,9,opt,name=category2,proto3" json:"category2,omitempty"`
	// 小分類 名称マスタにおける種別 A0000009 (小分類（項目）) を参照
	Category3 *protobuf.NameOption `protobuf:"bytes,10,opt,name=category3,proto3" json:"category3,omitempty"`
	// 連絡事項
	ContactMatter string `protobuf:"bytes,11,opt,name=contact_matter,json=contactMatter,proto3" json:"contact_matter,omitempty"`
	// 使用
	// 名称マスタにおける種別 A0000001 (使用) を参照
	// 空の場合は、システムコード 1 (可) とする
	Usable *protobuf.NameOption `protobuf:"bytes,12,opt,name=usable,proto3" json:"usable,omitempty"`
	// readonly タグ（テナント単位で共有）
	Tags []string `protobuf:"bytes,16,rep,name=tags,proto3" json:"tags,omitempty"`
	// outputonly 型式/図番
	// 図番-枝番か型式のどちらかが出る（図番優先）
	// "{blueprint_share_properties.blueprint_number}-{blueprint_share_properties.branch_number}"
	// "{catalog_reference.model_number}"
	TransactionUnitNumber string `protobuf:"bytes,17,opt,name=transaction_unit_number,json=transactionUnitNumber,proto3" json:"transaction_unit_number,omitempty"`
	DeletedAt             int64  `protobuf:"varint,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt             int64  `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             int64  `protobuf:"varint,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TransactionUnit) Reset() {
	*x = TransactionUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionUnit) ProtoMessage() {}

func (x *TransactionUnit) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionUnit.ProtoReflect.Descriptor instead.
func (*TransactionUnit) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionUnit) GetTransactionUnitId() string {
	if x != nil {
		return x.TransactionUnitId
	}
	return ""
}

func (x *TransactionUnit) GetTransactionUnitCode() string {
	if x != nil {
		return x.TransactionUnitCode
	}
	return ""
}

func (x *TransactionUnit) GetDisplayNameLang() map[string]string {
	if x != nil {
		return x.DisplayNameLang
	}
	return nil
}

func (x *TransactionUnit) GetBlueprintReference() *BlueprintReference {
	if x != nil {
		return x.BlueprintReference
	}
	return nil
}

func (x *TransactionUnit) GetCatalogReference() *CatalogReference {
	if x != nil {
		return x.CatalogReference
	}
	return nil
}

func (x *TransactionUnit) GetQuantityUnit() *protobuf.NameOption {
	if x != nil {
		return x.QuantityUnit
	}
	return nil
}

func (x *TransactionUnit) GetProcesss() []*protobuf.NameOption {
	if x != nil {
		return x.Processs
	}
	return nil
}

func (x *TransactionUnit) GetCategory1() *protobuf.NameOption {
	if x != nil {
		return x.Category1
	}
	return nil
}

func (x *TransactionUnit) GetCategory2() *protobuf.NameOption {
	if x != nil {
		return x.Category2
	}
	return nil
}

func (x *TransactionUnit) GetCategory3() *protobuf.NameOption {
	if x != nil {
		return x.Category3
	}
	return nil
}

func (x *TransactionUnit) GetContactMatter() string {
	if x != nil {
		return x.ContactMatter
	}
	return ""
}

func (x *TransactionUnit) GetUsable() *protobuf.NameOption {
	if x != nil {
		return x.Usable
	}
	return nil
}

func (x *TransactionUnit) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TransactionUnit) GetTransactionUnitNumber() string {
	if x != nil {
		return x.TransactionUnitNumber
	}
	return ""
}

func (x *TransactionUnit) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *TransactionUnit) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TransactionUnit) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type BlueprintReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 図番
	BlueprintNumber string `protobuf:"bytes,1,opt,name=blueprint_number,json=blueprintNumber,proto3" json:"blueprint_number,omitempty"`
	// 枝番
	BranchNumber string `protobuf:"bytes,2,opt,name=branch_number,json=branchNumber,proto3" json:"branch_number,omitempty"`
	// 改訂番号
	//
	// 1以上を指定したとき、特定の改訂番号への参照となる。
	// 0を指定したとき、最新の改訂番号への参照となる。
	Revision int32 `protobuf:"varint,3,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *BlueprintReference) Reset() {
	*x = BlueprintReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueprintReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueprintReference) ProtoMessage() {}

func (x *BlueprintReference) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueprintReference.ProtoReflect.Descriptor instead.
func (*BlueprintReference) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{1}
}

func (x *BlueprintReference) GetBlueprintNumber() string {
	if x != nil {
		return x.BlueprintNumber
	}
	return ""
}

func (x *BlueprintReference) GetBranchNumber() string {
	if x != nil {
		return x.BranchNumber
	}
	return ""
}

func (x *BlueprintReference) GetRevision() int32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

type CatalogReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 型式/型番
	ModelNumber string `protobuf:"bytes,1,opt,name=model_number,json=modelNumber,proto3" json:"model_number,omitempty"`
	// メーカー
	Manufacture string `protobuf:"bytes,2,opt,name=manufacture,proto3" json:"manufacture,omitempty"`
}

func (x *CatalogReference) Reset() {
	*x = CatalogReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogReference) ProtoMessage() {}

func (x *CatalogReference) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogReference.ProtoReflect.Descriptor instead.
func (*CatalogReference) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{2}
}

func (x *CatalogReference) GetModelNumber() string {
	if x != nil {
		return x.ModelNumber
	}
	return ""
}

func (x *CatalogReference) GetManufacture() string {
	if x != nil {
		return x.Manufacture
	}
	return ""
}

// 図面
type Blueprint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlueprintId string `protobuf:"bytes,1,opt,name=blueprint_id,json=blueprintId,proto3" json:"blueprint_id,omitempty"`
	// 図番
	BlueprintNumber string `protobuf:"bytes,2,opt,name=blueprint_number,json=blueprintNumber,proto3" json:"blueprint_number,omitempty"`
	// 枝番
	BranchNumber string `protobuf:"bytes,3,opt,name=branch_number,json=branchNumber,proto3" json:"branch_number,omitempty"`
	// 改訂番号
	//
	// 図番-枝番ごとに1から開始され、図面の改訂都度インクリメントされる
	// 図番-枝番-改訂番号と図面IDは1:1となる
	Revision int32 `protobuf:"varint,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// 管理用名称
	DisplayNameLang map[string]string `protobuf:"bytes,5,rep,name=display_name_lang,json=displayNameLang,proto3" json:"display_name_lang,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 図面種類
	// 部品図 / 組図 のうち一つを選択する
	//
	// 製図用語（JIS Z 8114）に規定されている
	// "図面の名称に関する用語"のうち"内容による用語"で分類
	//
	// 名称マスタにおける種別 A0000010 (図面種類) を参照
	// システムコードによってblueprint_contentで渡る情報が異なる
	// システムコードが1の場合、部品図の情報
	// システムコードが2の場合、組立図の情報
	BlueprintContentType *protobuf.NameOption `protobuf:"bytes,6,opt,name=blueprint_content_type,json=blueprintContentType,proto3" json:"blueprint_content_type,omitempty"`
	// Types that are assignable to BlueprintContent:
	//
	//	*Blueprint_PartDrawingProperties
	//	*Blueprint_AssemblyDrawingProperties
	BlueprintContent isBlueprint_BlueprintContent `protobuf_oneof:"blueprint_content"`
	// 分類
	// 1: 図面分類 名称マスタにおける種別 A0000011 (図面分類) を参照
	//
	//	治工具 / 部品 を選択する
	Category *protobuf.NameOption `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	// 設計会社
	DesignCompany string `protobuf:"bytes,10,opt,name=design_company,json=designCompany,proto3" json:"design_company,omitempty"`
	// 機密レベル
	ConfidentialLevel string `protobuf:"bytes,11,opt,name=confidential_level,json=confidentialLevel,proto3" json:"confidential_level,omitempty"`
	// 備考
	Remarks string `protobuf:"bytes,12,opt,name=remarks,proto3" json:"remarks,omitempty"`
	// 改訂情報
	RevisionProperties *RevisionProperties `protobuf:"bytes,13,opt,name=revision_properties,json=revisionProperties,proto3" json:"revision_properties,omitempty"`
	// 図面ファイル
	BlueprintFile *BlueprintFile `protobuf:"bytes,14,opt,name=blueprint_file,json=blueprintFile,proto3" json:"blueprint_file,omitempty"`
	// 使用
	//
	//	名称マスタにおける種別 A0000001 (使用) を参照
	//	空の場合は、システムコード 1 (可) とする
	Usable *protobuf.NameOption `protobuf:"bytes,15,opt,name=usable,proto3" json:"usable,omitempty"`
	// readonly タグ（テナント単位で共有）
	Tags []string `protobuf:"bytes,19,rep,name=tags,proto3" json:"tags,omitempty"`
	// outputonly 図面登録ステータス
	BlueprintStatus *BlueprintStatus `protobuf:"bytes,20,opt,name=blueprint_status,json=blueprintStatus,proto3" json:"blueprint_status,omitempty"`
	DeletedAt       int64            `protobuf:"varint,16,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt       int64            `protobuf:"varint,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       int64            `protobuf:"varint,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Blueprint) Reset() {
	*x = Blueprint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blueprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blueprint) ProtoMessage() {}

func (x *Blueprint) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blueprint.ProtoReflect.Descriptor instead.
func (*Blueprint) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{3}
}

func (x *Blueprint) GetBlueprintId() string {
	if x != nil {
		return x.BlueprintId
	}
	return ""
}

func (x *Blueprint) GetBlueprintNumber() string {
	if x != nil {
		return x.BlueprintNumber
	}
	return ""
}

func (x *Blueprint) GetBranchNumber() string {
	if x != nil {
		return x.BranchNumber
	}
	return ""
}

func (x *Blueprint) GetRevision() int32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *Blueprint) GetDisplayNameLang() map[string]string {
	if x != nil {
		return x.DisplayNameLang
	}
	return nil
}

func (x *Blueprint) GetBlueprintContentType() *protobuf.NameOption {
	if x != nil {
		return x.BlueprintContentType
	}
	return nil
}

func (m *Blueprint) GetBlueprintContent() isBlueprint_BlueprintContent {
	if m != nil {
		return m.BlueprintContent
	}
	return nil
}

func (x *Blueprint) GetPartDrawingProperties() *PartDrawingProperties {
	if x, ok := x.GetBlueprintContent().(*Blueprint_PartDrawingProperties); ok {
		return x.PartDrawingProperties
	}
	return nil
}

func (x *Blueprint) GetAssemblyDrawingProperties() *AssemblyDrawingProperties {
	if x, ok := x.GetBlueprintContent().(*Blueprint_AssemblyDrawingProperties); ok {
		return x.AssemblyDrawingProperties
	}
	return nil
}

func (x *Blueprint) GetCategory() *protobuf.NameOption {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Blueprint) GetDesignCompany() string {
	if x != nil {
		return x.DesignCompany
	}
	return ""
}

func (x *Blueprint) GetConfidentialLevel() string {
	if x != nil {
		return x.ConfidentialLevel
	}
	return ""
}

func (x *Blueprint) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *Blueprint) GetRevisionProperties() *RevisionProperties {
	if x != nil {
		return x.RevisionProperties
	}
	return nil
}

func (x *Blueprint) GetBlueprintFile() *BlueprintFile {
	if x != nil {
		return x.BlueprintFile
	}
	return nil
}

func (x *Blueprint) GetUsable() *protobuf.NameOption {
	if x != nil {
		return x.Usable
	}
	return nil
}

func (x *Blueprint) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Blueprint) GetBlueprintStatus() *BlueprintStatus {
	if x != nil {
		return x.BlueprintStatus
	}
	return nil
}

func (x *Blueprint) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *Blueprint) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Blueprint) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type isBlueprint_BlueprintContent interface {
	isBlueprint_BlueprintContent()
}

type Blueprint_PartDrawingProperties struct {
	// 部品図
	PartDrawingProperties *PartDrawingProperties `protobuf:"bytes,7,opt,name=part_drawing_properties,json=partDrawingProperties,proto3,oneof"`
}

type Blueprint_AssemblyDrawingProperties struct {
	// 組立図
	AssemblyDrawingProperties *AssemblyDrawingProperties `protobuf:"bytes,8,opt,name=assembly_drawing_properties,json=assemblyDrawingProperties,proto3,oneof"`
}

func (*Blueprint_PartDrawingProperties) isBlueprint_BlueprintContent() {}

func (*Blueprint_AssemblyDrawingProperties) isBlueprint_BlueprintContent() {}

// 図面登録ステータス
type BlueprintStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ステータス
	// 状態（category）と状態の詳細（detail）の組み合わせを専用に表現したもの
	//
	// 名称マスタにおける種別 A0010004 (図面登録ステータス) を参照
	Status *protobuf.NameOption `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 状態
	// 名称マスタにおける種別 A0010005 (図面登録ステータス（状態）) を参照
	Category *protobuf.NameOption `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	// 状態の詳細
	// 名称マスタにおける種別 A0010006 (図面登録ステータス（状態の詳細）) を参照
	Detail *protobuf.NameOption `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *BlueprintStatus) Reset() {
	*x = BlueprintStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueprintStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueprintStatus) ProtoMessage() {}

func (x *BlueprintStatus) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueprintStatus.ProtoReflect.Descriptor instead.
func (*BlueprintStatus) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{4}
}

func (x *BlueprintStatus) GetStatus() *protobuf.NameOption {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BlueprintStatus) GetCategory() *protobuf.NameOption {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *BlueprintStatus) GetDetail() *protobuf.NameOption {
	if x != nil {
		return x.Detail
	}
	return nil
}

type PartDrawingProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分類１〜６（図面）
	Categorys []string `protobuf:"bytes,1,rep,name=categorys,proto3" json:"categorys,omitempty"`
	// 設備
	Equipment string `protobuf:"bytes,2,opt,name=equipment,proto3" json:"equipment,omitempty"`
	// 寸法
	Dimension *Dimension `protobuf:"bytes,3,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// サイズφ
	Diameter *protobuf.DistantAmount `protobuf:"bytes,4,opt,name=diameter,proto3" json:"diameter,omitempty"`
	// 形状
	Shape string `protobuf:"bytes,5,opt,name=shape,proto3" json:"shape,omitempty"`
	// 材種
	Material string `protobuf:"bytes,6,opt,name=material,proto3" json:"material,omitempty"`
	// 表面処理有無
	SurfaceTreatment bool `protobuf:"varint,7,opt,name=surface_treatment,json=surfaceTreatment,proto3" json:"surface_treatment,omitempty"`
	// 検査有無
	Inspection bool `protobuf:"varint,8,opt,name=inspection,proto3" json:"inspection,omitempty"`
	// 要求硬度
	RequestHardness string `protobuf:"bytes,9,opt,name=request_hardness,json=requestHardness,proto3" json:"request_hardness,omitempty"`
	// CADデータ有無
	HasCadData bool `protobuf:"varint,10,opt,name=has_cad_data,json=hasCadData,proto3" json:"has_cad_data,omitempty"`
}

func (x *PartDrawingProperties) Reset() {
	*x = PartDrawingProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartDrawingProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartDrawingProperties) ProtoMessage() {}

func (x *PartDrawingProperties) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartDrawingProperties.ProtoReflect.Descriptor instead.
func (*PartDrawingProperties) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{5}
}

func (x *PartDrawingProperties) GetCategorys() []string {
	if x != nil {
		return x.Categorys
	}
	return nil
}

func (x *PartDrawingProperties) GetEquipment() string {
	if x != nil {
		return x.Equipment
	}
	return ""
}

func (x *PartDrawingProperties) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *PartDrawingProperties) GetDiameter() *protobuf.DistantAmount {
	if x != nil {
		return x.Diameter
	}
	return nil
}

func (x *PartDrawingProperties) GetShape() string {
	if x != nil {
		return x.Shape
	}
	return ""
}

func (x *PartDrawingProperties) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *PartDrawingProperties) GetSurfaceTreatment() bool {
	if x != nil {
		return x.SurfaceTreatment
	}
	return false
}

func (x *PartDrawingProperties) GetInspection() bool {
	if x != nil {
		return x.Inspection
	}
	return false
}

func (x *PartDrawingProperties) GetRequestHardness() string {
	if x != nil {
		return x.RequestHardness
	}
	return ""
}

func (x *PartDrawingProperties) GetHasCadData() bool {
	if x != nil {
		return x.HasCadData
	}
	return false
}

type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// サイズX
	X *protobuf.DistantAmount `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	// サイズY
	Y *protobuf.DistantAmount `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	// サイズZ
	Z *protobuf.DistantAmount `protobuf:"bytes,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{6}
}

func (x *Dimension) GetX() *protobuf.DistantAmount {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *Dimension) GetY() *protobuf.DistantAmount {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *Dimension) GetZ() *protobuf.DistantAmount {
	if x != nil {
		return x.Z
	}
	return nil
}

type AssemblyDrawingProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssemblyDrawingProperties) Reset() {
	*x = AssemblyDrawingProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssemblyDrawingProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssemblyDrawingProperties) ProtoMessage() {}

func (x *AssemblyDrawingProperties) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssemblyDrawingProperties.ProtoReflect.Descriptor instead.
func (*AssemblyDrawingProperties) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{7}
}

type BlueprintFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId  string            `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BlueprintFile) Reset() {
	*x = BlueprintFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueprintFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueprintFile) ProtoMessage() {}

func (x *BlueprintFile) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueprintFile.ProtoReflect.Descriptor instead.
func (*BlueprintFile) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{8}
}

func (x *BlueprintFile) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *BlueprintFile) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RevisionProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 改訂前図面ID
	//
	// 改訂時に改訂前の最新（改訂番号が最大）の
	// 図面ID(blueprint_id)を格納する
	PreviousBlueprintId string `protobuf:"bytes,1,opt,name=previous_blueprint_id,json=previousBlueprintId,proto3" json:"previous_blueprint_id,omitempty"`
	// 改訂日時
	RevisedAt int64 `protobuf:"varint,2,opt,name=revised_at,json=revisedAt,proto3" json:"revised_at,omitempty"`
	// 改訂登録部門
	OrganizationUnit *protobuf.ComponentUnitReference `protobuf:"bytes,3,opt,name=organization_unit,json=organizationUnit,proto3" json:"organization_unit,omitempty"`
	// 改訂登録担当者
	Staff *protobuf.StaffReference `protobuf:"bytes,4,opt,name=staff,proto3" json:"staff,omitempty"`
	// 改訂コメント
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// 技連・通報番号
	ManagementNumber string `protobuf:"bytes,6,opt,name=management_number,json=managementNumber,proto3" json:"management_number,omitempty"`
}

func (x *RevisionProperties) Reset() {
	*x = RevisionProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevisionProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevisionProperties) ProtoMessage() {}

func (x *RevisionProperties) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevisionProperties.ProtoReflect.Descriptor instead.
func (*RevisionProperties) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{9}
}

func (x *RevisionProperties) GetPreviousBlueprintId() string {
	if x != nil {
		return x.PreviousBlueprintId
	}
	return ""
}

func (x *RevisionProperties) GetRevisedAt() int64 {
	if x != nil {
		return x.RevisedAt
	}
	return 0
}

func (x *RevisionProperties) GetOrganizationUnit() *protobuf.ComponentUnitReference {
	if x != nil {
		return x.OrganizationUnit
	}
	return nil
}

func (x *RevisionProperties) GetStaff() *protobuf.StaffReference {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *RevisionProperties) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RevisionProperties) GetManagementNumber() string {
	if x != nil {
		return x.ManagementNumber
	}
	return ""
}

type CreateTransactionUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionUnit *TransactionUnit `protobuf:"bytes,1,opt,name=transaction_unit,json=transactionUnit,proto3" json:"transaction_unit,omitempty"`
}

func (x *CreateTransactionUnitRequest) Reset() {
	*x = CreateTransactionUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionUnitRequest) ProtoMessage() {}

func (x *CreateTransactionUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionUnitRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionUnitRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTransactionUnitRequest) GetTransactionUnit() *TransactionUnit {
	if x != nil {
		return x.TransactionUnit
	}
	return nil
}

type ListTransactionUnitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTransactionUnitsRequest) Reset() {
	*x = ListTransactionUnitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransactionUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionUnitsRequest) ProtoMessage() {}

func (x *ListTransactionUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionUnitsRequest.ProtoReflect.Descriptor instead.
func (*ListTransactionUnitsRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{11}
}

type ListTransactionUnitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*TransactionUnit `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTransactionUnitsResponse) Reset() {
	*x = ListTransactionUnitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransactionUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionUnitsResponse) ProtoMessage() {}

func (x *ListTransactionUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionUnitsResponse.ProtoReflect.Descriptor instead.
func (*ListTransactionUnitsResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{12}
}

func (x *ListTransactionUnitsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTransactionUnitsResponse) GetItems() []*TransactionUnit {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetTransactionUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionUnitId string `protobuf:"bytes,1,opt,name=transaction_unit_id,json=transactionUnitId,proto3" json:"transaction_unit_id,omitempty"`
}

func (x *GetTransactionUnitRequest) Reset() {
	*x = GetTransactionUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionUnitRequest) ProtoMessage() {}

func (x *GetTransactionUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionUnitRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionUnitRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{13}
}

func (x *GetTransactionUnitRequest) GetTransactionUnitId() string {
	if x != nil {
		return x.TransactionUnitId
	}
	return ""
}

type UpdateTransactionUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionUnit *TransactionUnit `protobuf:"bytes,1,opt,name=transaction_unit,json=transactionUnit,proto3" json:"transaction_unit,omitempty"`
}

func (x *UpdateTransactionUnitRequest) Reset() {
	*x = UpdateTransactionUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransactionUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionUnitRequest) ProtoMessage() {}

func (x *UpdateTransactionUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionUnitRequest.ProtoReflect.Descriptor instead.
func (*UpdateTransactionUnitRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTransactionUnitRequest) GetTransactionUnit() *TransactionUnit {
	if x != nil {
		return x.TransactionUnit
	}
	return nil
}

type DeleteTransactionUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionUnit *TransactionUnit `protobuf:"bytes,1,opt,name=transaction_unit,json=transactionUnit,proto3" json:"transaction_unit,omitempty"`
}

func (x *DeleteTransactionUnitRequest) Reset() {
	*x = DeleteTransactionUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTransactionUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTransactionUnitRequest) ProtoMessage() {}

func (x *DeleteTransactionUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTransactionUnitRequest.ProtoReflect.Descriptor instead.
func (*DeleteTransactionUnitRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTransactionUnitRequest) GetTransactionUnit() *TransactionUnit {
	if x != nil {
		return x.TransactionUnit
	}
	return nil
}

type CreateBlueprintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blueprint *Blueprint `protobuf:"bytes,1,opt,name=blueprint,proto3" json:"blueprint,omitempty"`
}

func (x *CreateBlueprintRequest) Reset() {
	*x = CreateBlueprintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBlueprintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlueprintRequest) ProtoMessage() {}

func (x *CreateBlueprintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlueprintRequest.ProtoReflect.Descriptor instead.
func (*CreateBlueprintRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{16}
}

func (x *CreateBlueprintRequest) GetBlueprint() *Blueprint {
	if x != nil {
		return x.Blueprint
	}
	return nil
}

type ListBlueprintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBlueprintsRequest) Reset() {
	*x = ListBlueprintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlueprintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlueprintsRequest) ProtoMessage() {}

func (x *ListBlueprintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlueprintsRequest.ProtoReflect.Descriptor instead.
func (*ListBlueprintsRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{17}
}

type ListBlueprintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Blueprint `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListBlueprintsResponse) Reset() {
	*x = ListBlueprintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlueprintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlueprintsResponse) ProtoMessage() {}

func (x *ListBlueprintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlueprintsResponse.ProtoReflect.Descriptor instead.
func (*ListBlueprintsResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{18}
}

func (x *ListBlueprintsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListBlueprintsResponse) GetItems() []*Blueprint {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetBlueprintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlueprintId string `protobuf:"bytes,1,opt,name=blueprint_id,json=blueprintId,proto3" json:"blueprint_id,omitempty"`
}

func (x *GetBlueprintRequest) Reset() {
	*x = GetBlueprintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlueprintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlueprintRequest) ProtoMessage() {}

func (x *GetBlueprintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlueprintRequest.ProtoReflect.Descriptor instead.
func (*GetBlueprintRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{19}
}

func (x *GetBlueprintRequest) GetBlueprintId() string {
	if x != nil {
		return x.BlueprintId
	}
	return ""
}

type UpdateBlueprintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blueprint *Blueprint `protobuf:"bytes,1,opt,name=blueprint,proto3" json:"blueprint,omitempty"`
}

func (x *UpdateBlueprintRequest) Reset() {
	*x = UpdateBlueprintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlueprintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlueprintRequest) ProtoMessage() {}

func (x *UpdateBlueprintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlueprintRequest.ProtoReflect.Descriptor instead.
func (*UpdateBlueprintRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateBlueprintRequest) GetBlueprint() *Blueprint {
	if x != nil {
		return x.Blueprint
	}
	return nil
}

type DeleteBlueprintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blueprint *Blueprint `protobuf:"bytes,1,opt,name=blueprint,proto3" json:"blueprint,omitempty"`
}

func (x *DeleteBlueprintRequest) Reset() {
	*x = DeleteBlueprintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBlueprintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlueprintRequest) ProtoMessage() {}

func (x *DeleteBlueprintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlueprintRequest.ProtoReflect.Descriptor instead.
func (*DeleteBlueprintRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteBlueprintRequest) GetBlueprint() *Blueprint {
	if x != nil {
		return x.Blueprint
	}
	return nil
}

type ImportTransactionUnitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取込ファイルアップデート時の書き込みURL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
	// 処理（検査/取込）
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// エラーファイル出力
	// trueの場合、エラー内容をCSVで出力する
	ExportError bool `protobuf:"varint,4,opt,name=export_error,json=exportError,proto3" json:"export_error,omitempty"`
}

func (x *ImportTransactionUnitsRequest) Reset() {
	*x = ImportTransactionUnitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportTransactionUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTransactionUnitsRequest) ProtoMessage() {}

func (x *ImportTransactionUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTransactionUnitsRequest.ProtoReflect.Descriptor instead.
func (*ImportTransactionUnitsRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{22}
}

func (x *ImportTransactionUnitsRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImportTransactionUnitsRequest) GetFileFormat() *protobuf.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

func (x *ImportTransactionUnitsRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *ImportTransactionUnitsRequest) GetExportError() bool {
	if x != nil {
		return x.ExportError
	}
	return false
}

type ImportTransactionUnitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 処理まとめ
	Summary *protobuf.ImportSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// エラー内容
	Errors []*protobuf.ImportError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// エラーファイル
	AssetId string `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ImportTransactionUnitsResponse) Reset() {
	*x = ImportTransactionUnitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportTransactionUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTransactionUnitsResponse) ProtoMessage() {}

func (x *ImportTransactionUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTransactionUnitsResponse.ProtoReflect.Descriptor instead.
func (*ImportTransactionUnitsResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{23}
}

func (x *ImportTransactionUnitsResponse) GetSummary() *protobuf.ImportSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *ImportTransactionUnitsResponse) GetErrors() []*protobuf.ImportError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ImportTransactionUnitsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ExportTransactionUnitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// transaction_unit_ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
}

func (x *ExportTransactionUnitsRequest) Reset() {
	*x = ExportTransactionUnitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportTransactionUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTransactionUnitsRequest) ProtoMessage() {}

func (x *ExportTransactionUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTransactionUnitsRequest.ProtoReflect.Descriptor instead.
func (*ExportTransactionUnitsRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{24}
}

func (x *ExportTransactionUnitsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExportTransactionUnitsRequest) GetFileFormat() *protobuf.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

type ExportTransactionUnitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ExportTransactionUnitsResponse) Reset() {
	*x = ExportTransactionUnitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportTransactionUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTransactionUnitsResponse) ProtoMessage() {}

func (x *ExportTransactionUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTransactionUnitsResponse.ProtoReflect.Descriptor instead.
func (*ExportTransactionUnitsResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{25}
}

func (x *ExportTransactionUnitsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ImportBlueprintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取込ファイルアップデート時の書き込みURL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
	// 処理（検査/取込）
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// エラーファイル出力
	// trueの場合、エラー内容をCSVで出力する
	ExportError bool `protobuf:"varint,4,opt,name=export_error,json=exportError,proto3" json:"export_error,omitempty"`
}

func (x *ImportBlueprintsRequest) Reset() {
	*x = ImportBlueprintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportBlueprintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBlueprintsRequest) ProtoMessage() {}

func (x *ImportBlueprintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportBlueprintsRequest.ProtoReflect.Descriptor instead.
func (*ImportBlueprintsRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{26}
}

func (x *ImportBlueprintsRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImportBlueprintsRequest) GetFileFormat() *protobuf.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

func (x *ImportBlueprintsRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *ImportBlueprintsRequest) GetExportError() bool {
	if x != nil {
		return x.ExportError
	}
	return false
}

type ImportBlueprintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 処理まとめ
	Summary *protobuf.ImportSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// エラー内容
	Errors []*protobuf.ImportError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// エラーファイル
	AssetId string `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ImportBlueprintsResponse) Reset() {
	*x = ImportBlueprintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportBlueprintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBlueprintsResponse) ProtoMessage() {}

func (x *ImportBlueprintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportBlueprintsResponse.ProtoReflect.Descriptor instead.
func (*ImportBlueprintsResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{27}
}

func (x *ImportBlueprintsResponse) GetSummary() *protobuf.ImportSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *ImportBlueprintsResponse) GetErrors() []*protobuf.ImportError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ImportBlueprintsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ExportBlueprintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// transaction_unit_ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
}

func (x *ExportBlueprintsRequest) Reset() {
	*x = ExportBlueprintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportBlueprintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportBlueprintsRequest) ProtoMessage() {}

func (x *ExportBlueprintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportBlueprintsRequest.ProtoReflect.Descriptor instead.
func (*ExportBlueprintsRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{28}
}

func (x *ExportBlueprintsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExportBlueprintsRequest) GetFileFormat() *protobuf.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

type ExportBlueprintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ExportBlueprintsResponse) Reset() {
	*x = ExportBlueprintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportBlueprintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportBlueprintsResponse) ProtoMessage() {}

func (x *ExportBlueprintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportBlueprintsResponse.ProtoReflect.Descriptor instead.
func (*ExportBlueprintsResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{29}
}

func (x *ExportBlueprintsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ListTransactionUnitFormatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTransactionUnitFormatsRequest) Reset() {
	*x = ListTransactionUnitFormatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransactionUnitFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionUnitFormatsRequest) ProtoMessage() {}

func (x *ListTransactionUnitFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionUnitFormatsRequest.ProtoReflect.Descriptor instead.
func (*ListTransactionUnitFormatsRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{30}
}

type ListTransactionUnitFormatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// ファイルフォーマット
	Items []*protobuf.FileFormat `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTransactionUnitFormatsResponse) Reset() {
	*x = ListTransactionUnitFormatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransactionUnitFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionUnitFormatsResponse) ProtoMessage() {}

func (x *ListTransactionUnitFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionUnitFormatsResponse.ProtoReflect.Descriptor instead.
func (*ListTransactionUnitFormatsResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{31}
}

func (x *ListTransactionUnitFormatsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTransactionUnitFormatsResponse) GetItems() []*protobuf.FileFormat {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListBlueprintFormatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBlueprintFormatsRequest) Reset() {
	*x = ListBlueprintFormatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlueprintFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlueprintFormatsRequest) ProtoMessage() {}

func (x *ListBlueprintFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlueprintFormatsRequest.ProtoReflect.Descriptor instead.
func (*ListBlueprintFormatsRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{32}
}

type ListBlueprintFormatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// ファイルフォーマット
	Items []*protobuf.FileFormat `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListBlueprintFormatsResponse) Reset() {
	*x = ListBlueprintFormatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlueprintFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlueprintFormatsResponse) ProtoMessage() {}

func (x *ListBlueprintFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlueprintFormatsResponse.ProtoReflect.Descriptor instead.
func (*ListBlueprintFormatsResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{33}
}

func (x *ListBlueprintFormatsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListBlueprintFormatsResponse) GetItems() []*protobuf.FileFormat {
	if x != nil {
		return x.Items
	}
	return nil
}

// 図面紐付処理
type LinkAssetToBlueprintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListAssetsRequest *protobuf1.ListAssetsRequest `protobuf:"bytes,1,opt,name=list_assets_request,json=listAssetsRequest,proto3" json:"list_assets_request,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
	// 処理（検査/取込）
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// エラーファイル出力
	// trueの場合、エラー内容をCSVで出力する
	ExportError bool `protobuf:"varint,4,opt,name=export_error,json=exportError,proto3" json:"export_error,omitempty"`
}

func (x *LinkAssetToBlueprintRequest) Reset() {
	*x = LinkAssetToBlueprintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkAssetToBlueprintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkAssetToBlueprintRequest) ProtoMessage() {}

func (x *LinkAssetToBlueprintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkAssetToBlueprintRequest.ProtoReflect.Descriptor instead.
func (*LinkAssetToBlueprintRequest) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{34}
}

func (x *LinkAssetToBlueprintRequest) GetListAssetsRequest() *protobuf1.ListAssetsRequest {
	if x != nil {
		return x.ListAssetsRequest
	}
	return nil
}

func (x *LinkAssetToBlueprintRequest) GetFileFormat() *protobuf.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

func (x *LinkAssetToBlueprintRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *LinkAssetToBlueprintRequest) GetExportError() bool {
	if x != nil {
		return x.ExportError
	}
	return false
}

type LinkAssetToBlueprintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 処理まとめ
	Summary *protobuf.ImportSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// エラー内容
	Errors []*protobuf.ImportError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// エラーファイル
	AssetId string `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *LinkAssetToBlueprintResponse) Reset() {
	*x = LinkAssetToBlueprintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blueprint_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkAssetToBlueprintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkAssetToBlueprintResponse) ProtoMessage() {}

func (x *LinkAssetToBlueprintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkAssetToBlueprintResponse.ProtoReflect.Descriptor instead.
func (*LinkAssetToBlueprintResponse) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{35}
}

func (x *LinkAssetToBlueprintResponse) GetSummary() *protobuf.ImportSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *LinkAssetToBlueprintResponse) GetErrors() []*protobuf.ImportError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *LinkAssetToBlueprintResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

var File_blueprint_proto protoreflect.FileDescriptor

var file_blueprint_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x07, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x69, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12,
	0x5c, 0x0a, 0x13, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x62, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x56, 0x0a,
	0x11, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x10, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x30, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x31, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x31, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x32, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x75, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x42, 0x0a, 0x14,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x80, 0x01, 0x0a, 0x12, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0xc7, 0x09, 0x0a,
	0x09, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x10, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x11, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42,
	0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x4a,
	0x0a, 0x16, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x17, 0x70, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x44, 0x72, 0x61, 0x77, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x15, 0x70,
	0x61, 0x72, 0x74, 0x44, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x74, 0x0a, 0x1b, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79,
	0x5f, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x44, 0x72, 0x61, 0x77,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x19, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x44, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x5c, 0x0a, 0x13,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x12, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x62, 0x6c,
	0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x75, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x53, 0x0a, 0x10, 0x62,
	0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e,
	0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x42, 0x0a,
	0x14, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x13, 0x0a, 0x11, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x42, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x96, 0x03, 0x0a, 0x15, 0x50, 0x61, 0x72,
	0x74, 0x44, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x40,
	0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x69, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x72, 0x65, 0x61, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x68, 0x61, 0x72, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x72, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x20, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x80, 0x01, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x01, 0x78, 0x12, 0x25, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x01, 0x79, 0x12, 0x25, 0x0a,
	0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x6c, 0x69, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x01, 0x7a, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79,
	0x44, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x50,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xad, 0x02,
	0x0a, 0x12, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x42, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4d, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62,
	0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x73, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x74, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x73, 0x0a, 0x1c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x5a,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x09, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52,
	0x09, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x38, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42,
	0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a,
	0x09, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22,
	0xa4, 0x01, 0x0a, 0x1d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72,
	0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79,
	0x52, 0x75, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x1e, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x1d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x22, 0x3b, 0x0a, 0x1e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x9e, 0x01,
	0x0a, 0x17, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x97,
	0x01, 0x0a, 0x18, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2d,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x35, 0x0a, 0x18,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x60, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xf1, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54,
	0x6f, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5f, 0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x11, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c,
	0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79,
	0x5f, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52,
	0x75, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x54, 0x6f, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c,
	0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x32, 0x9e, 0x08, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x34, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x78, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x35, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x66, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x89, 0x01, 0x0a, 0x16, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12,
	0x36, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x89, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x36, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x95, 0x01, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x6e, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x3a, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x91, 0x08, 0x0a, 0x10, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c,
	0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x12, 0x71, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x66, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x5a,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x12, 0x2f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x77, 0x0a, 0x10, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x30,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42,
	0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x75,
	0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x34, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x54, 0x6f, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54,
	0x6f, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1e, 0x5a, 0x1c, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blueprint_proto_rawDescOnce sync.Once
	file_blueprint_proto_rawDescData = file_blueprint_proto_rawDesc
)

func file_blueprint_proto_rawDescGZIP() []byte {
	file_blueprint_proto_rawDescOnce.Do(func() {
		file_blueprint_proto_rawDescData = protoimpl.X.CompressGZIP(file_blueprint_proto_rawDescData)
	})
	return file_blueprint_proto_rawDescData
}

var file_blueprint_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_blueprint_proto_goTypes = []interface{}{
	(*TransactionUnit)(nil),                    // 0: mtechnavi.api.blueprint.TransactionUnit
	(*BlueprintReference)(nil),                 // 1: mtechnavi.api.blueprint.BlueprintReference
	(*CatalogReference)(nil),                   // 2: mtechnavi.api.blueprint.CatalogReference
	(*Blueprint)(nil),                          // 3: mtechnavi.api.blueprint.Blueprint
	(*BlueprintStatus)(nil),                    // 4: mtechnavi.api.blueprint.BlueprintStatus
	(*PartDrawingProperties)(nil),              // 5: mtechnavi.api.blueprint.PartDrawingProperties
	(*Dimension)(nil),                          // 6: mtechnavi.api.blueprint.Dimension
	(*AssemblyDrawingProperties)(nil),          // 7: mtechnavi.api.blueprint.AssemblyDrawingProperties
	(*BlueprintFile)(nil),                      // 8: mtechnavi.api.blueprint.BlueprintFile
	(*RevisionProperties)(nil),                 // 9: mtechnavi.api.blueprint.RevisionProperties
	(*CreateTransactionUnitRequest)(nil),       // 10: mtechnavi.api.blueprint.CreateTransactionUnitRequest
	(*ListTransactionUnitsRequest)(nil),        // 11: mtechnavi.api.blueprint.ListTransactionUnitsRequest
	(*ListTransactionUnitsResponse)(nil),       // 12: mtechnavi.api.blueprint.ListTransactionUnitsResponse
	(*GetTransactionUnitRequest)(nil),          // 13: mtechnavi.api.blueprint.GetTransactionUnitRequest
	(*UpdateTransactionUnitRequest)(nil),       // 14: mtechnavi.api.blueprint.UpdateTransactionUnitRequest
	(*DeleteTransactionUnitRequest)(nil),       // 15: mtechnavi.api.blueprint.DeleteTransactionUnitRequest
	(*CreateBlueprintRequest)(nil),             // 16: mtechnavi.api.blueprint.CreateBlueprintRequest
	(*ListBlueprintsRequest)(nil),              // 17: mtechnavi.api.blueprint.ListBlueprintsRequest
	(*ListBlueprintsResponse)(nil),             // 18: mtechnavi.api.blueprint.ListBlueprintsResponse
	(*GetBlueprintRequest)(nil),                // 19: mtechnavi.api.blueprint.GetBlueprintRequest
	(*UpdateBlueprintRequest)(nil),             // 20: mtechnavi.api.blueprint.UpdateBlueprintRequest
	(*DeleteBlueprintRequest)(nil),             // 21: mtechnavi.api.blueprint.DeleteBlueprintRequest
	(*ImportTransactionUnitsRequest)(nil),      // 22: mtechnavi.api.blueprint.ImportTransactionUnitsRequest
	(*ImportTransactionUnitsResponse)(nil),     // 23: mtechnavi.api.blueprint.ImportTransactionUnitsResponse
	(*ExportTransactionUnitsRequest)(nil),      // 24: mtechnavi.api.blueprint.ExportTransactionUnitsRequest
	(*ExportTransactionUnitsResponse)(nil),     // 25: mtechnavi.api.blueprint.ExportTransactionUnitsResponse
	(*ImportBlueprintsRequest)(nil),            // 26: mtechnavi.api.blueprint.ImportBlueprintsRequest
	(*ImportBlueprintsResponse)(nil),           // 27: mtechnavi.api.blueprint.ImportBlueprintsResponse
	(*ExportBlueprintsRequest)(nil),            // 28: mtechnavi.api.blueprint.ExportBlueprintsRequest
	(*ExportBlueprintsResponse)(nil),           // 29: mtechnavi.api.blueprint.ExportBlueprintsResponse
	(*ListTransactionUnitFormatsRequest)(nil),  // 30: mtechnavi.api.blueprint.ListTransactionUnitFormatsRequest
	(*ListTransactionUnitFormatsResponse)(nil), // 31: mtechnavi.api.blueprint.ListTransactionUnitFormatsResponse
	(*ListBlueprintFormatsRequest)(nil),        // 32: mtechnavi.api.blueprint.ListBlueprintFormatsRequest
	(*ListBlueprintFormatsResponse)(nil),       // 33: mtechnavi.api.blueprint.ListBlueprintFormatsResponse
	(*LinkAssetToBlueprintRequest)(nil),        // 34: mtechnavi.api.blueprint.LinkAssetToBlueprintRequest
	(*LinkAssetToBlueprintResponse)(nil),       // 35: mtechnavi.api.blueprint.LinkAssetToBlueprintResponse
	nil,                                        // 36: mtechnavi.api.blueprint.TransactionUnit.DisplayNameLangEntry
	nil,                                        // 37: mtechnavi.api.blueprint.Blueprint.DisplayNameLangEntry
	nil,                                        // 38: mtechnavi.api.blueprint.BlueprintFile.MetadataEntry
	(*protobuf.NameOption)(nil),                // 39: sharelib.NameOption
	(*protobuf.DistantAmount)(nil),             // 40: sharelib.DistantAmount
	(*protobuf.ComponentUnitReference)(nil),    // 41: sharelib.ComponentUnitReference
	(*protobuf.StaffReference)(nil),            // 42: sharelib.StaffReference
	(*protobuf.FileFormat)(nil),                // 43: sharelib.FileFormat
	(*protobuf.ImportSummary)(nil),             // 44: sharelib.ImportSummary
	(*protobuf.ImportError)(nil),               // 45: sharelib.ImportError
	(*protobuf1.ListAssetsRequest)(nil),        // 46: mtechnavi.api.assetinventory.ListAssetsRequest
	(*emptypb.Empty)(nil),                      // 47: google.protobuf.Empty
}
var file_blueprint_proto_depIdxs = []int32{
	36, // 0: mtechnavi.api.blueprint.TransactionUnit.display_name_lang:type_name -> mtechnavi.api.blueprint.TransactionUnit.DisplayNameLangEntry
	1,  // 1: mtechnavi.api.blueprint.TransactionUnit.blueprint_reference:type_name -> mtechnavi.api.blueprint.BlueprintReference
	2,  // 2: mtechnavi.api.blueprint.TransactionUnit.catalog_reference:type_name -> mtechnavi.api.blueprint.CatalogReference
	39, // 3: mtechnavi.api.blueprint.TransactionUnit.quantity_unit:type_name -> sharelib.NameOption
	39, // 4: mtechnavi.api.blueprint.TransactionUnit.processs:type_name -> sharelib.NameOption
	39, // 5: mtechnavi.api.blueprint.TransactionUnit.category1:type_name -> sharelib.NameOption
	39, // 6: mtechnavi.api.blueprint.TransactionUnit.category2:type_name -> sharelib.NameOption
	39, // 7: mtechnavi.api.blueprint.TransactionUnit.category3:type_name -> sharelib.NameOption
	39, // 8: mtechnavi.api.blueprint.TransactionUnit.usable:type_name -> sharelib.NameOption
	37, // 9: mtechnavi.api.blueprint.Blueprint.display_name_lang:type_name -> mtechnavi.api.blueprint.Blueprint.DisplayNameLangEntry
	39, // 10: mtechnavi.api.blueprint.Blueprint.blueprint_content_type:type_name -> sharelib.NameOption
	5,  // 11: mtechnavi.api.blueprint.Blueprint.part_drawing_properties:type_name -> mtechnavi.api.blueprint.PartDrawingProperties
	7,  // 12: mtechnavi.api.blueprint.Blueprint.assembly_drawing_properties:type_name -> mtechnavi.api.blueprint.AssemblyDrawingProperties
	39, // 13: mtechnavi.api.blueprint.Blueprint.category:type_name -> sharelib.NameOption
	9,  // 14: mtechnavi.api.blueprint.Blueprint.revision_properties:type_name -> mtechnavi.api.blueprint.RevisionProperties
	8,  // 15: mtechnavi.api.blueprint.Blueprint.blueprint_file:type_name -> mtechnavi.api.blueprint.BlueprintFile
	39, // 16: mtechnavi.api.blueprint.Blueprint.usable:type_name -> sharelib.NameOption
	4,  // 17: mtechnavi.api.blueprint.Blueprint.blueprint_status:type_name -> mtechnavi.api.blueprint.BlueprintStatus
	39, // 18: mtechnavi.api.blueprint.BlueprintStatus.status:type_name -> sharelib.NameOption
	39, // 19: mtechnavi.api.blueprint.BlueprintStatus.category:type_name -> sharelib.NameOption
	39, // 20: mtechnavi.api.blueprint.BlueprintStatus.detail:type_name -> sharelib.NameOption
	6,  // 21: mtechnavi.api.blueprint.PartDrawingProperties.dimension:type_name -> mtechnavi.api.blueprint.Dimension
	40, // 22: mtechnavi.api.blueprint.PartDrawingProperties.diameter:type_name -> sharelib.DistantAmount
	40, // 23: mtechnavi.api.blueprint.Dimension.x:type_name -> sharelib.DistantAmount
	40, // 24: mtechnavi.api.blueprint.Dimension.y:type_name -> sharelib.DistantAmount
	40, // 25: mtechnavi.api.blueprint.Dimension.z:type_name -> sharelib.DistantAmount
	38, // 26: mtechnavi.api.blueprint.BlueprintFile.metadata:type_name -> mtechnavi.api.blueprint.BlueprintFile.MetadataEntry
	41, // 27: mtechnavi.api.blueprint.RevisionProperties.organization_unit:type_name -> sharelib.ComponentUnitReference
	42, // 28: mtechnavi.api.blueprint.RevisionProperties.staff:type_name -> sharelib.StaffReference
	0,  // 29: mtechnavi.api.blueprint.CreateTransactionUnitRequest.transaction_unit:type_name -> mtechnavi.api.blueprint.TransactionUnit
	0,  // 30: mtechnavi.api.blueprint.ListTransactionUnitsResponse.items:type_name -> mtechnavi.api.blueprint.TransactionUnit
	0,  // 31: mtechnavi.api.blueprint.UpdateTransactionUnitRequest.transaction_unit:type_name -> mtechnavi.api.blueprint.TransactionUnit
	0,  // 32: mtechnavi.api.blueprint.DeleteTransactionUnitRequest.transaction_unit:type_name -> mtechnavi.api.blueprint.TransactionUnit
	3,  // 33: mtechnavi.api.blueprint.CreateBlueprintRequest.blueprint:type_name -> mtechnavi.api.blueprint.Blueprint
	3,  // 34: mtechnavi.api.blueprint.ListBlueprintsResponse.items:type_name -> mtechnavi.api.blueprint.Blueprint
	3,  // 35: mtechnavi.api.blueprint.UpdateBlueprintRequest.blueprint:type_name -> mtechnavi.api.blueprint.Blueprint
	3,  // 36: mtechnavi.api.blueprint.DeleteBlueprintRequest.blueprint:type_name -> mtechnavi.api.blueprint.Blueprint
	43, // 37: mtechnavi.api.blueprint.ImportTransactionUnitsRequest.file_format:type_name -> sharelib.FileFormat
	44, // 38: mtechnavi.api.blueprint.ImportTransactionUnitsResponse.summary:type_name -> sharelib.ImportSummary
	45, // 39: mtechnavi.api.blueprint.ImportTransactionUnitsResponse.errors:type_name -> sharelib.ImportError
	43, // 40: mtechnavi.api.blueprint.ExportTransactionUnitsRequest.file_format:type_name -> sharelib.FileFormat
	43, // 41: mtechnavi.api.blueprint.ImportBlueprintsRequest.file_format:type_name -> sharelib.FileFormat
	44, // 42: mtechnavi.api.blueprint.ImportBlueprintsResponse.summary:type_name -> sharelib.ImportSummary
	45, // 43: mtechnavi.api.blueprint.ImportBlueprintsResponse.errors:type_name -> sharelib.ImportError
	43, // 44: mtechnavi.api.blueprint.ExportBlueprintsRequest.file_format:type_name -> sharelib.FileFormat
	43, // 45: mtechnavi.api.blueprint.ListTransactionUnitFormatsResponse.items:type_name -> sharelib.FileFormat
	43, // 46: mtechnavi.api.blueprint.ListBlueprintFormatsResponse.items:type_name -> sharelib.FileFormat
	46, // 47: mtechnavi.api.blueprint.LinkAssetToBlueprintRequest.list_assets_request:type_name -> mtechnavi.api.assetinventory.ListAssetsRequest
	43, // 48: mtechnavi.api.blueprint.LinkAssetToBlueprintRequest.file_format:type_name -> sharelib.FileFormat
	44, // 49: mtechnavi.api.blueprint.LinkAssetToBlueprintResponse.summary:type_name -> sharelib.ImportSummary
	45, // 50: mtechnavi.api.blueprint.LinkAssetToBlueprintResponse.errors:type_name -> sharelib.ImportError
	10, // 51: mtechnavi.api.blueprint.TransactionUnitService.CreateTransactionUnit:input_type -> mtechnavi.api.blueprint.CreateTransactionUnitRequest
	11, // 52: mtechnavi.api.blueprint.TransactionUnitService.ListTransactionUnits:input_type -> mtechnavi.api.blueprint.ListTransactionUnitsRequest
	13, // 53: mtechnavi.api.blueprint.TransactionUnitService.GetTransactionUnit:input_type -> mtechnavi.api.blueprint.GetTransactionUnitRequest
	14, // 54: mtechnavi.api.blueprint.TransactionUnitService.UpdateTransactionUnit:input_type -> mtechnavi.api.blueprint.UpdateTransactionUnitRequest
	15, // 55: mtechnavi.api.blueprint.TransactionUnitService.DeleteTransactionUnit:input_type -> mtechnavi.api.blueprint.DeleteTransactionUnitRequest
	22, // 56: mtechnavi.api.blueprint.TransactionUnitService.ImportTransactionUnits:input_type -> mtechnavi.api.blueprint.ImportTransactionUnitsRequest
	24, // 57: mtechnavi.api.blueprint.TransactionUnitService.ExportTransactionUnits:input_type -> mtechnavi.api.blueprint.ExportTransactionUnitsRequest
	30, // 58: mtechnavi.api.blueprint.TransactionUnitService.ListTransactionUnitFormats:input_type -> mtechnavi.api.blueprint.ListTransactionUnitFormatsRequest
	16, // 59: mtechnavi.api.blueprint.BlueprintService.CreateBlueprint:input_type -> mtechnavi.api.blueprint.CreateBlueprintRequest
	17, // 60: mtechnavi.api.blueprint.BlueprintService.ListBlueprints:input_type -> mtechnavi.api.blueprint.ListBlueprintsRequest
	19, // 61: mtechnavi.api.blueprint.BlueprintService.GetBlueprint:input_type -> mtechnavi.api.blueprint.GetBlueprintRequest
	20, // 62: mtechnavi.api.blueprint.BlueprintService.UpdateBlueprint:input_type -> mtechnavi.api.blueprint.UpdateBlueprintRequest
	21, // 63: mtechnavi.api.blueprint.BlueprintService.DeleteBlueprint:input_type -> mtechnavi.api.blueprint.DeleteBlueprintRequest
	26, // 64: mtechnavi.api.blueprint.BlueprintService.ImportBlueprints:input_type -> mtechnavi.api.blueprint.ImportBlueprintsRequest
	28, // 65: mtechnavi.api.blueprint.BlueprintService.ExportBlueprints:input_type -> mtechnavi.api.blueprint.ExportBlueprintsRequest
	32, // 66: mtechnavi.api.blueprint.BlueprintService.ListBlueprintFormats:input_type -> mtechnavi.api.blueprint.ListBlueprintFormatsRequest
	34, // 67: mtechnavi.api.blueprint.BlueprintService.LinkAssetToBlueprint:input_type -> mtechnavi.api.blueprint.LinkAssetToBlueprintRequest
	0,  // 68: mtechnavi.api.blueprint.TransactionUnitService.CreateTransactionUnit:output_type -> mtechnavi.api.blueprint.TransactionUnit
	12, // 69: mtechnavi.api.blueprint.TransactionUnitService.ListTransactionUnits:output_type -> mtechnavi.api.blueprint.ListTransactionUnitsResponse
	0,  // 70: mtechnavi.api.blueprint.TransactionUnitService.GetTransactionUnit:output_type -> mtechnavi.api.blueprint.TransactionUnit
	0,  // 71: mtechnavi.api.blueprint.TransactionUnitService.UpdateTransactionUnit:output_type -> mtechnavi.api.blueprint.TransactionUnit
	47, // 72: mtechnavi.api.blueprint.TransactionUnitService.DeleteTransactionUnit:output_type -> google.protobuf.Empty
	23, // 73: mtechnavi.api.blueprint.TransactionUnitService.ImportTransactionUnits:output_type -> mtechnavi.api.blueprint.ImportTransactionUnitsResponse
	25, // 74: mtechnavi.api.blueprint.TransactionUnitService.ExportTransactionUnits:output_type -> mtechnavi.api.blueprint.ExportTransactionUnitsResponse
	31, // 75: mtechnavi.api.blueprint.TransactionUnitService.ListTransactionUnitFormats:output_type -> mtechnavi.api.blueprint.ListTransactionUnitFormatsResponse
	3,  // 76: mtechnavi.api.blueprint.BlueprintService.CreateBlueprint:output_type -> mtechnavi.api.blueprint.Blueprint
	18, // 77: mtechnavi.api.blueprint.BlueprintService.ListBlueprints:output_type -> mtechnavi.api.blueprint.ListBlueprintsResponse
	3,  // 78: mtechnavi.api.blueprint.BlueprintService.GetBlueprint:output_type -> mtechnavi.api.blueprint.Blueprint
	3,  // 79: mtechnavi.api.blueprint.BlueprintService.UpdateBlueprint:output_type -> mtechnavi.api.blueprint.Blueprint
	47, // 80: mtechnavi.api.blueprint.BlueprintService.DeleteBlueprint:output_type -> google.protobuf.Empty
	27, // 81: mtechnavi.api.blueprint.BlueprintService.ImportBlueprints:output_type -> mtechnavi.api.blueprint.ImportBlueprintsResponse
	29, // 82: mtechnavi.api.blueprint.BlueprintService.ExportBlueprints:output_type -> mtechnavi.api.blueprint.ExportBlueprintsResponse
	33, // 83: mtechnavi.api.blueprint.BlueprintService.ListBlueprintFormats:output_type -> mtechnavi.api.blueprint.ListBlueprintFormatsResponse
	35, // 84: mtechnavi.api.blueprint.BlueprintService.LinkAssetToBlueprint:output_type -> mtechnavi.api.blueprint.LinkAssetToBlueprintResponse
	68, // [68:85] is the sub-list for method output_type
	51, // [51:68] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_blueprint_proto_init() }
func file_blueprint_proto_init() {
	if File_blueprint_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blueprint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueprintReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blueprint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueprintStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartDrawingProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssemblyDrawingProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueprintFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevisionProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransactionUnitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransactionUnitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransactionUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTransactionUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBlueprintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlueprintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlueprintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlueprintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlueprintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBlueprintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportTransactionUnitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportTransactionUnitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportTransactionUnitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportTransactionUnitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportBlueprintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportBlueprintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportBlueprintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportBlueprintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransactionUnitFormatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransactionUnitFormatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlueprintFormatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlueprintFormatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkAssetToBlueprintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blueprint_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkAssetToBlueprintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blueprint_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Blueprint_PartDrawingProperties)(nil),
		(*Blueprint_AssemblyDrawingProperties)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blueprint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_blueprint_proto_goTypes,
		DependencyIndexes: file_blueprint_proto_depIdxs,
		MessageInfos:      file_blueprint_proto_msgTypes,
	}.Build()
	File_blueprint_proto = out.File
	file_blueprint_proto_rawDesc = nil
	file_blueprint_proto_goTypes = nil
	file_blueprint_proto_depIdxs = nil
}
