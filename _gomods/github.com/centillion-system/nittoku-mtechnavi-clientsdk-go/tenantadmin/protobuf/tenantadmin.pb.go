// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: tenantadmin.proto

package protobuf

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	protobuf "mtechnavi/idp/protobuf"
	protobuf1 "mtechnavi/sharelib/protobuf"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Implementation Note::
	// mtechnavi.api.idp.Userのuser_idと同一
	UserAttributeId string `protobuf:"bytes,1,opt,name=user_attribute_id,json=userAttributeId,proto3" json:"user_attribute_id,omitempty"`
	// outputonly ユーザー
	User *protobuf.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// 補足情報
	Remarks string `protobuf:"bytes,3,opt,name=remarks,proto3" json:"remarks,omitempty"`
	// outputonly アカウントステータス
	Status *UserAttribute_UserStatus `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// readonly 最終更新日時
	UserAttributeUpdatedAt int64 `protobuf:"varint,8,opt,name=user_attribute_updated_at,json=userAttributeUpdatedAt,proto3" json:"user_attribute_updated_at,omitempty"`
	// readonly 最終更新ユーザー
	UserAttributeUpdatedBy *protobuf1.EmbeddedUser `protobuf:"bytes,9,opt,name=user_attribute_updated_by,json=userAttributeUpdatedBy,proto3" json:"user_attribute_updated_by,omitempty"`
	DeletedAt              int64                   `protobuf:"varint,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt              int64                   `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              int64                   `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UserAttribute) Reset() {
	*x = UserAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttribute) ProtoMessage() {}

func (x *UserAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttribute.ProtoReflect.Descriptor instead.
func (*UserAttribute) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{0}
}

func (x *UserAttribute) GetUserAttributeId() string {
	if x != nil {
		return x.UserAttributeId
	}
	return ""
}

func (x *UserAttribute) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserAttribute) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *UserAttribute) GetStatus() *UserAttribute_UserStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UserAttribute) GetUserAttributeUpdatedAt() int64 {
	if x != nil {
		return x.UserAttributeUpdatedAt
	}
	return 0
}

func (x *UserAttribute) GetUserAttributeUpdatedBy() *protobuf1.EmbeddedUser {
	if x != nil {
		return x.UserAttributeUpdatedBy
	}
	return nil
}

func (x *UserAttribute) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *UserAttribute) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserAttribute) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type UserGroupAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Implementation Note::
	// mtechnavi.api.idp.UserGroupのuser_group_idと同一
	UserGroupAttributeId string `protobuf:"bytes,1,opt,name=user_group_attribute_id,json=userGroupAttributeId,proto3" json:"user_group_attribute_id,omitempty"`
	// outputonly ユーザーグループ
	UserGroup *protobuf.UserGroup `protobuf:"bytes,2,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	// グループ詳細
	Remarks string `protobuf:"bytes,3,opt,name=remarks,proto3" json:"remarks,omitempty"`
	// readonly システムグループ
	//
	// Implementation Note::
	//
	//	Create時にuser_group_idで判定する
	//	tenantが作成される時に作られる以下の２レコードは true (システム)
	//	  特権管理者グループ
	//	  全社グループ:
	//	それ以外の場合は false (ユーザー) となる
	SystemGroup bool `protobuf:"varint,4,opt,name=system_group,json=systemGroup,proto3" json:"system_group,omitempty"`
	// outputony メンバー数
	UserSummary *UserGroupAttribute_UserSummary `protobuf:"bytes,5,opt,name=user_summary,json=userSummary,proto3" json:"user_summary,omitempty"`
	// outputony 表示可能画面
	ViewIds []string `protobuf:"bytes,6,rep,name=view_ids,json=viewIds,proto3" json:"view_ids,omitempty"`
	// outputony メニュー画面 (表示可能プリセット)
	PresetIds []string `protobuf:"bytes,7,rep,name=preset_ids,json=presetIds,proto3" json:"preset_ids,omitempty"`
	DeletedAt int64    `protobuf:"varint,8,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt int64    `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64    `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UserGroupAttribute) Reset() {
	*x = UserGroupAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupAttribute) ProtoMessage() {}

func (x *UserGroupAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupAttribute.ProtoReflect.Descriptor instead.
func (*UserGroupAttribute) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{1}
}

func (x *UserGroupAttribute) GetUserGroupAttributeId() string {
	if x != nil {
		return x.UserGroupAttributeId
	}
	return ""
}

func (x *UserGroupAttribute) GetUserGroup() *protobuf.UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return nil
}

func (x *UserGroupAttribute) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *UserGroupAttribute) GetSystemGroup() bool {
	if x != nil {
		return x.SystemGroup
	}
	return false
}

func (x *UserGroupAttribute) GetUserSummary() *UserGroupAttribute_UserSummary {
	if x != nil {
		return x.UserSummary
	}
	return nil
}

func (x *UserGroupAttribute) GetViewIds() []string {
	if x != nil {
		return x.ViewIds
	}
	return nil
}

func (x *UserGroupAttribute) GetPresetIds() []string {
	if x != nil {
		return x.PresetIds
	}
	return nil
}

func (x *UserGroupAttribute) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *UserGroupAttribute) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserGroupAttribute) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type RoleAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Implementation Note::
	// role_nameと同一の粒度
	RoleAttributeId string `protobuf:"bytes,1,opt,name=role_attribute_id,json=roleAttributeId,proto3" json:"role_attribute_id,omitempty"`
	// ロール
	RoleName string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	// 説明
	Remarks   string `protobuf:"bytes,3,opt,name=remarks,proto3" json:"remarks,omitempty"`
	DeletedAt int64  `protobuf:"varint,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RoleAttribute) Reset() {
	*x = RoleAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttribute) ProtoMessage() {}

func (x *RoleAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttribute.ProtoReflect.Descriptor instead.
func (*RoleAttribute) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{2}
}

func (x *RoleAttribute) GetRoleAttributeId() string {
	if x != nil {
		return x.RoleAttributeId
	}
	return ""
}

func (x *RoleAttribute) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleAttribute) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *RoleAttribute) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *RoleAttribute) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RoleAttribute) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAttribute *UserAttribute `protobuf:"bytes,1,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *CreateUserAttributeRequest) Reset() {
	*x = CreateUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserAttributeRequest) ProtoMessage() {}

func (x *CreateUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*CreateUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserAttributeRequest) GetUserAttribute() *UserAttribute {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

// required user
type CreateUserAndUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required email
	// required display_name
	User          *protobuf.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserAttribute *UserAttribute `protobuf:"bytes,2,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *CreateUserAndUserAttributeRequest) Reset() {
	*x = CreateUserAndUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserAndUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserAndUserAttributeRequest) ProtoMessage() {}

func (x *CreateUserAndUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserAndUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*CreateUserAndUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserAndUserAttributeRequest) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateUserAndUserAttributeRequest) GetUserAttribute() *UserAttribute {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

type ListUserAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserAttributesRequest) Reset() {
	*x = ListUserAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserAttributesRequest) ProtoMessage() {}

func (x *ListUserAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserAttributesRequest.ProtoReflect.Descriptor instead.
func (*ListUserAttributesRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{5}
}

type ListUserAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*UserAttribute `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUserAttributesResponse) Reset() {
	*x = ListUserAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserAttributesResponse) ProtoMessage() {}

func (x *ListUserAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserAttributesResponse.ProtoReflect.Descriptor instead.
func (*ListUserAttributesResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{6}
}

func (x *ListUserAttributesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserAttributesResponse) GetItems() []*UserAttribute {
	if x != nil {
		return x.Items
	}
	return nil
}

// required user_attribute_id
type GetUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAttributeId string `protobuf:"bytes,1,opt,name=user_attribute_id,json=userAttributeId,proto3" json:"user_attribute_id,omitempty"`
}

func (x *GetUserAttributeRequest) Reset() {
	*x = GetUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAttributeRequest) ProtoMessage() {}

func (x *GetUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserAttributeRequest) GetUserAttributeId() string {
	if x != nil {
		return x.UserAttributeId
	}
	return ""
}

type UpdateUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAttribute *UserAttribute `protobuf:"bytes,1,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *UpdateUserAttributeRequest) Reset() {
	*x = UpdateUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAttributeRequest) ProtoMessage() {}

func (x *UpdateUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserAttributeRequest) GetUserAttribute() *UserAttribute {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

// required user
// Implementation Note:
//
//	IDチェック
//	ユーザー(グループ)IDと属性IDの整合性チェック
type UpdateUserAndUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required user_id
	// required updated_at
	// required email
	// required display_name
	User          *protobuf.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserAttribute *UserAttribute `protobuf:"bytes,2,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *UpdateUserAndUserAttributeRequest) Reset() {
	*x = UpdateUserAndUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAndUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAndUserAttributeRequest) ProtoMessage() {}

func (x *UpdateUserAndUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAndUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserAndUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserAndUserAttributeRequest) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateUserAndUserAttributeRequest) GetUserAttribute() *UserAttribute {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

type DeleteUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAttribute *UserAttribute `protobuf:"bytes,1,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *DeleteUserAttributeRequest) Reset() {
	*x = DeleteUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserAttributeRequest) ProtoMessage() {}

func (x *DeleteUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteUserAttributeRequest) GetUserAttribute() *UserAttribute {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

// required user
type DeleteUserAndUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required user_id
	// required updated_at
	// required email
	// required display_name
	User          *protobuf.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserAttribute *UserAttribute `protobuf:"bytes,2,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *DeleteUserAndUserAttributeRequest) Reset() {
	*x = DeleteUserAndUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserAndUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserAndUserAttributeRequest) ProtoMessage() {}

func (x *DeleteUserAndUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserAndUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserAndUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteUserAndUserAttributeRequest) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *DeleteUserAndUserAttributeRequest) GetUserAttribute() *UserAttribute {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

type DisableUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *protobuf.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *DisableUserRequest) Reset() {
	*x = DisableUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableUserRequest) ProtoMessage() {}

func (x *DisableUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableUserRequest.ProtoReflect.Descriptor instead.
func (*DisableUserRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{12}
}

func (x *DisableUserRequest) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

type DisableUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *protobuf.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *DisableUserResponse) Reset() {
	*x = DisableUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableUserResponse) ProtoMessage() {}

func (x *DisableUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableUserResponse.ProtoReflect.Descriptor instead.
func (*DisableUserResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{13}
}

func (x *DisableUserResponse) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

type EnableUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *protobuf.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *EnableUserRequest) Reset() {
	*x = EnableUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableUserRequest) ProtoMessage() {}

func (x *EnableUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableUserRequest.ProtoReflect.Descriptor instead.
func (*EnableUserRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{14}
}

func (x *EnableUserRequest) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

type EnableUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *protobuf.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *EnableUserResponse) Reset() {
	*x = EnableUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableUserResponse) ProtoMessage() {}

func (x *EnableUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableUserResponse.ProtoReflect.Descriptor instead.
func (*EnableUserResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{15}
}

func (x *EnableUserResponse) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

// required url
// required file_format
type ImportUserAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取込ファイルアップデート時の書き込みURL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf1.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
	// 処理（検査/取込）
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// エラーファイル出力
	// trueの場合、エラー内容をCSVで出力する
	ExportError bool `protobuf:"varint,4,opt,name=export_error,json=exportError,proto3" json:"export_error,omitempty"`
}

func (x *ImportUserAttributesRequest) Reset() {
	*x = ImportUserAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUserAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUserAttributesRequest) ProtoMessage() {}

func (x *ImportUserAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUserAttributesRequest.ProtoReflect.Descriptor instead.
func (*ImportUserAttributesRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{16}
}

func (x *ImportUserAttributesRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImportUserAttributesRequest) GetFileFormat() *protobuf1.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

func (x *ImportUserAttributesRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *ImportUserAttributesRequest) GetExportError() bool {
	if x != nil {
		return x.ExportError
	}
	return false
}

type ImportUserAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 処理まとめ
	Summary *protobuf1.ImportSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// エラー内容
	Errors []*protobuf1.ImportError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// エラーファイル
	AssetId string `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ImportUserAttributesResponse) Reset() {
	*x = ImportUserAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUserAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUserAttributesResponse) ProtoMessage() {}

func (x *ImportUserAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUserAttributesResponse.ProtoReflect.Descriptor instead.
func (*ImportUserAttributesResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{17}
}

func (x *ImportUserAttributesResponse) GetSummary() *protobuf1.ImportSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *ImportUserAttributesResponse) GetErrors() []*protobuf1.ImportError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ImportUserAttributesResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

// required file_format
type ExportUserAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf1.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
}

func (x *ExportUserAttributesRequest) Reset() {
	*x = ExportUserAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserAttributesRequest) ProtoMessage() {}

func (x *ExportUserAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserAttributesRequest.ProtoReflect.Descriptor instead.
func (*ExportUserAttributesRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{18}
}

func (x *ExportUserAttributesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExportUserAttributesRequest) GetFileFormat() *protobuf1.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

type ExportUserAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ExportUserAttributesResponse) Reset() {
	*x = ExportUserAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserAttributesResponse) ProtoMessage() {}

func (x *ExportUserAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserAttributesResponse.ProtoReflect.Descriptor instead.
func (*ExportUserAttributesResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{19}
}

func (x *ExportUserAttributesResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ListUserAttributeFormatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserAttributeFormatsRequest) Reset() {
	*x = ListUserAttributeFormatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserAttributeFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserAttributeFormatsRequest) ProtoMessage() {}

func (x *ListUserAttributeFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserAttributeFormatsRequest.ProtoReflect.Descriptor instead.
func (*ListUserAttributeFormatsRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{20}
}

type ListUserAttributeFormatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// ファイルフォーマット
	Items []*protobuf1.FileFormat `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUserAttributeFormatsResponse) Reset() {
	*x = ListUserAttributeFormatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserAttributeFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserAttributeFormatsResponse) ProtoMessage() {}

func (x *ListUserAttributeFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserAttributeFormatsResponse.ProtoReflect.Descriptor instead.
func (*ListUserAttributeFormatsResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{21}
}

func (x *ListUserAttributeFormatsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserAttributeFormatsResponse) GetItems() []*protobuf1.FileFormat {
	if x != nil {
		return x.Items
	}
	return nil
}

type SendEmailUserCreatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *protobuf.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *SendEmailUserCreatedRequest) Reset() {
	*x = SendEmailUserCreatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailUserCreatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailUserCreatedRequest) ProtoMessage() {}

func (x *SendEmailUserCreatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailUserCreatedRequest.ProtoReflect.Descriptor instead.
func (*SendEmailUserCreatedRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{22}
}

func (x *SendEmailUserCreatedRequest) GetUser() *protobuf.User {
	if x != nil {
		return x.User
	}
	return nil
}

type SendEmailUserCreatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendEmailUserCreatedResponse) Reset() {
	*x = SendEmailUserCreatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailUserCreatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailUserCreatedResponse) ProtoMessage() {}

func (x *SendEmailUserCreatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailUserCreatedResponse.ProtoReflect.Descriptor instead.
func (*SendEmailUserCreatedResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{23}
}

type CreateUserGroupAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroupAttribute *UserGroupAttribute `protobuf:"bytes,1,opt,name=user_group_attribute,json=userGroupAttribute,proto3" json:"user_group_attribute,omitempty"`
}

func (x *CreateUserGroupAttributeRequest) Reset() {
	*x = CreateUserGroupAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserGroupAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserGroupAttributeRequest) ProtoMessage() {}

func (x *CreateUserGroupAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserGroupAttributeRequest.ProtoReflect.Descriptor instead.
func (*CreateUserGroupAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{24}
}

func (x *CreateUserGroupAttributeRequest) GetUserGroupAttribute() *UserGroupAttribute {
	if x != nil {
		return x.UserGroupAttribute
	}
	return nil
}

type CreateUserGroupAndUserGroupAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroup          *protobuf.UserGroup `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	UserGroupAttribute *UserGroupAttribute `protobuf:"bytes,2,opt,name=user_group_attribute,json=userGroupAttribute,proto3" json:"user_group_attribute,omitempty"`
}

func (x *CreateUserGroupAndUserGroupAttributeRequest) Reset() {
	*x = CreateUserGroupAndUserGroupAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserGroupAndUserGroupAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserGroupAndUserGroupAttributeRequest) ProtoMessage() {}

func (x *CreateUserGroupAndUserGroupAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserGroupAndUserGroupAttributeRequest.ProtoReflect.Descriptor instead.
func (*CreateUserGroupAndUserGroupAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{25}
}

func (x *CreateUserGroupAndUserGroupAttributeRequest) GetUserGroup() *protobuf.UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return nil
}

func (x *CreateUserGroupAndUserGroupAttributeRequest) GetUserGroupAttribute() *UserGroupAttribute {
	if x != nil {
		return x.UserGroupAttribute
	}
	return nil
}

type ListUserGroupAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserGroupAttributesRequest) Reset() {
	*x = ListUserGroupAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupAttributesRequest) ProtoMessage() {}

func (x *ListUserGroupAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupAttributesRequest.ProtoReflect.Descriptor instead.
func (*ListUserGroupAttributesRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{26}
}

type ListUserGroupAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*UserGroupAttribute `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUserGroupAttributesResponse) Reset() {
	*x = ListUserGroupAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupAttributesResponse) ProtoMessage() {}

func (x *ListUserGroupAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupAttributesResponse.ProtoReflect.Descriptor instead.
func (*ListUserGroupAttributesResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{27}
}

func (x *ListUserGroupAttributesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserGroupAttributesResponse) GetItems() []*UserGroupAttribute {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetUserGroupAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroupAttributeId string `protobuf:"bytes,1,opt,name=user_group_attribute_id,json=userGroupAttributeId,proto3" json:"user_group_attribute_id,omitempty"`
}

func (x *GetUserGroupAttributeRequest) Reset() {
	*x = GetUserGroupAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGroupAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroupAttributeRequest) ProtoMessage() {}

func (x *GetUserGroupAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroupAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetUserGroupAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserGroupAttributeRequest) GetUserGroupAttributeId() string {
	if x != nil {
		return x.UserGroupAttributeId
	}
	return ""
}

type UpdateUserGroupAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroupAttribute *UserGroupAttribute `protobuf:"bytes,1,opt,name=user_group_attribute,json=userGroupAttribute,proto3" json:"user_group_attribute,omitempty"`
}

func (x *UpdateUserGroupAttributeRequest) Reset() {
	*x = UpdateUserGroupAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserGroupAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserGroupAttributeRequest) ProtoMessage() {}

func (x *UpdateUserGroupAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserGroupAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserGroupAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateUserGroupAttributeRequest) GetUserGroupAttribute() *UserGroupAttribute {
	if x != nil {
		return x.UserGroupAttribute
	}
	return nil
}

type UpdateUserGroupAndUserGroupAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroup          *protobuf.UserGroup `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	UserGroupAttribute *UserGroupAttribute `protobuf:"bytes,2,opt,name=user_group_attribute,json=userGroupAttribute,proto3" json:"user_group_attribute,omitempty"`
}

func (x *UpdateUserGroupAndUserGroupAttributeRequest) Reset() {
	*x = UpdateUserGroupAndUserGroupAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserGroupAndUserGroupAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserGroupAndUserGroupAttributeRequest) ProtoMessage() {}

func (x *UpdateUserGroupAndUserGroupAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserGroupAndUserGroupAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserGroupAndUserGroupAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateUserGroupAndUserGroupAttributeRequest) GetUserGroup() *protobuf.UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return nil
}

func (x *UpdateUserGroupAndUserGroupAttributeRequest) GetUserGroupAttribute() *UserGroupAttribute {
	if x != nil {
		return x.UserGroupAttribute
	}
	return nil
}

type DeleteUserGroupAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroupAttribute *UserGroupAttribute `protobuf:"bytes,1,opt,name=user_group_attribute,json=userGroupAttribute,proto3" json:"user_group_attribute,omitempty"`
}

func (x *DeleteUserGroupAttributeRequest) Reset() {
	*x = DeleteUserGroupAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserGroupAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserGroupAttributeRequest) ProtoMessage() {}

func (x *DeleteUserGroupAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserGroupAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserGroupAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteUserGroupAttributeRequest) GetUserGroupAttribute() *UserGroupAttribute {
	if x != nil {
		return x.UserGroupAttribute
	}
	return nil
}

type DeleteUserGroupAndUserGroupAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroup          *protobuf.UserGroup `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	UserGroupAttribute *UserGroupAttribute `protobuf:"bytes,2,opt,name=user_group_attribute,json=userGroupAttribute,proto3" json:"user_group_attribute,omitempty"`
}

func (x *DeleteUserGroupAndUserGroupAttributeRequest) Reset() {
	*x = DeleteUserGroupAndUserGroupAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserGroupAndUserGroupAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserGroupAndUserGroupAttributeRequest) ProtoMessage() {}

func (x *DeleteUserGroupAndUserGroupAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserGroupAndUserGroupAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserGroupAndUserGroupAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteUserGroupAndUserGroupAttributeRequest) GetUserGroup() *protobuf.UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return nil
}

func (x *DeleteUserGroupAndUserGroupAttributeRequest) GetUserGroupAttribute() *UserGroupAttribute {
	if x != nil {
		return x.UserGroupAttribute
	}
	return nil
}

type ImportUserBelongsUserGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取込ファイルアップデート時の書き込みURL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf1.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
	// 処理（検査/取込）
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// エラーファイル出力
	// trueの場合、エラー内容をCSVで出力する
	ExportError bool `protobuf:"varint,4,opt,name=export_error,json=exportError,proto3" json:"export_error,omitempty"`
}

func (x *ImportUserBelongsUserGroupsRequest) Reset() {
	*x = ImportUserBelongsUserGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUserBelongsUserGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUserBelongsUserGroupsRequest) ProtoMessage() {}

func (x *ImportUserBelongsUserGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUserBelongsUserGroupsRequest.ProtoReflect.Descriptor instead.
func (*ImportUserBelongsUserGroupsRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{33}
}

func (x *ImportUserBelongsUserGroupsRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImportUserBelongsUserGroupsRequest) GetFileFormat() *protobuf1.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

func (x *ImportUserBelongsUserGroupsRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *ImportUserBelongsUserGroupsRequest) GetExportError() bool {
	if x != nil {
		return x.ExportError
	}
	return false
}

type ImportUserBelongsUserGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 処理まとめ
	Summary *protobuf1.ImportSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// エラー内容
	Errors []*protobuf1.ImportError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// エラーファイル
	AssetId string `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ImportUserBelongsUserGroupsResponse) Reset() {
	*x = ImportUserBelongsUserGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUserBelongsUserGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUserBelongsUserGroupsResponse) ProtoMessage() {}

func (x *ImportUserBelongsUserGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUserBelongsUserGroupsResponse.ProtoReflect.Descriptor instead.
func (*ImportUserBelongsUserGroupsResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{34}
}

func (x *ImportUserBelongsUserGroupsResponse) GetSummary() *protobuf1.ImportSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *ImportUserBelongsUserGroupsResponse) GetErrors() []*protobuf1.ImportError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ImportUserBelongsUserGroupsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ExportUserBelongsUserGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_group_ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf1.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
}

func (x *ExportUserBelongsUserGroupsRequest) Reset() {
	*x = ExportUserBelongsUserGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserBelongsUserGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserBelongsUserGroupsRequest) ProtoMessage() {}

func (x *ExportUserBelongsUserGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserBelongsUserGroupsRequest.ProtoReflect.Descriptor instead.
func (*ExportUserBelongsUserGroupsRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{35}
}

func (x *ExportUserBelongsUserGroupsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExportUserBelongsUserGroupsRequest) GetFileFormat() *protobuf1.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

type ExportUserBelongsUserGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ExportUserBelongsUserGroupsResponse) Reset() {
	*x = ExportUserBelongsUserGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserBelongsUserGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserBelongsUserGroupsResponse) ProtoMessage() {}

func (x *ExportUserBelongsUserGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserBelongsUserGroupsResponse.ProtoReflect.Descriptor instead.
func (*ExportUserBelongsUserGroupsResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{36}
}

func (x *ExportUserBelongsUserGroupsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ListUserBelongsUserGroupFormatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserBelongsUserGroupFormatsRequest) Reset() {
	*x = ListUserBelongsUserGroupFormatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserBelongsUserGroupFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserBelongsUserGroupFormatsRequest) ProtoMessage() {}

func (x *ListUserBelongsUserGroupFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserBelongsUserGroupFormatsRequest.ProtoReflect.Descriptor instead.
func (*ListUserBelongsUserGroupFormatsRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{37}
}

type ListUserBelongsUserGroupFormatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// ファイルフォーマット
	Items []*protobuf1.FileFormat `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUserBelongsUserGroupFormatsResponse) Reset() {
	*x = ListUserBelongsUserGroupFormatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserBelongsUserGroupFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserBelongsUserGroupFormatsResponse) ProtoMessage() {}

func (x *ListUserBelongsUserGroupFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserBelongsUserGroupFormatsResponse.ProtoReflect.Descriptor instead.
func (*ListUserBelongsUserGroupFormatsResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{38}
}

func (x *ListUserBelongsUserGroupFormatsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserBelongsUserGroupFormatsResponse) GetItems() []*protobuf1.FileFormat {
	if x != nil {
		return x.Items
	}
	return nil
}

type ExportAttachedRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_group_ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf1.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
}

func (x *ExportAttachedRolesRequest) Reset() {
	*x = ExportAttachedRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportAttachedRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportAttachedRolesRequest) ProtoMessage() {}

func (x *ExportAttachedRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportAttachedRolesRequest.ProtoReflect.Descriptor instead.
func (*ExportAttachedRolesRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{39}
}

func (x *ExportAttachedRolesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExportAttachedRolesRequest) GetFileFormat() *protobuf1.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

type ExportAttachedRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ExportAttachedRolesResponse) Reset() {
	*x = ExportAttachedRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportAttachedRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportAttachedRolesResponse) ProtoMessage() {}

func (x *ExportAttachedRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportAttachedRolesResponse.ProtoReflect.Descriptor instead.
func (*ExportAttachedRolesResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{40}
}

func (x *ExportAttachedRolesResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ListUserGroupAttachedRolesFormatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserGroupAttachedRolesFormatsRequest) Reset() {
	*x = ListUserGroupAttachedRolesFormatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupAttachedRolesFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupAttachedRolesFormatsRequest) ProtoMessage() {}

func (x *ListUserGroupAttachedRolesFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupAttachedRolesFormatsRequest.ProtoReflect.Descriptor instead.
func (*ListUserGroupAttachedRolesFormatsRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{41}
}

type ListUserGroupAttachedRolesFormatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// ファイルフォーマット
	Items []*protobuf1.FileFormat `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUserGroupAttachedRolesFormatsResponse) Reset() {
	*x = ListUserGroupAttachedRolesFormatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupAttachedRolesFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupAttachedRolesFormatsResponse) ProtoMessage() {}

func (x *ListUserGroupAttachedRolesFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupAttachedRolesFormatsResponse.ProtoReflect.Descriptor instead.
func (*ListUserGroupAttachedRolesFormatsResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{42}
}

func (x *ListUserGroupAttachedRolesFormatsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserGroupAttachedRolesFormatsResponse) GetItems() []*protobuf1.FileFormat {
	if x != nil {
		return x.Items
	}
	return nil
}

type ExportAllowedMenuItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_group_ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf1.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
}

func (x *ExportAllowedMenuItemsRequest) Reset() {
	*x = ExportAllowedMenuItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportAllowedMenuItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportAllowedMenuItemsRequest) ProtoMessage() {}

func (x *ExportAllowedMenuItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportAllowedMenuItemsRequest.ProtoReflect.Descriptor instead.
func (*ExportAllowedMenuItemsRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{43}
}

func (x *ExportAllowedMenuItemsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExportAllowedMenuItemsRequest) GetFileFormat() *protobuf1.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

type ExportAllowedMenuItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ExportAllowedMenuItemsResponse) Reset() {
	*x = ExportAllowedMenuItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportAllowedMenuItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportAllowedMenuItemsResponse) ProtoMessage() {}

func (x *ExportAllowedMenuItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportAllowedMenuItemsResponse.ProtoReflect.Descriptor instead.
func (*ExportAllowedMenuItemsResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{44}
}

func (x *ExportAllowedMenuItemsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ListUserGroupAllowedMenuItemFormatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserGroupAllowedMenuItemFormatsRequest) Reset() {
	*x = ListUserGroupAllowedMenuItemFormatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupAllowedMenuItemFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupAllowedMenuItemFormatsRequest) ProtoMessage() {}

func (x *ListUserGroupAllowedMenuItemFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupAllowedMenuItemFormatsRequest.ProtoReflect.Descriptor instead.
func (*ListUserGroupAllowedMenuItemFormatsRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{45}
}

type ListUserGroupAllowedMenuItemFormatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// ファイルフォーマット
	Items []*protobuf1.FileFormat `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUserGroupAllowedMenuItemFormatsResponse) Reset() {
	*x = ListUserGroupAllowedMenuItemFormatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupAllowedMenuItemFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupAllowedMenuItemFormatsResponse) ProtoMessage() {}

func (x *ListUserGroupAllowedMenuItemFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupAllowedMenuItemFormatsResponse.ProtoReflect.Descriptor instead.
func (*ListUserGroupAllowedMenuItemFormatsResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{46}
}

func (x *ListUserGroupAllowedMenuItemFormatsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserGroupAllowedMenuItemFormatsResponse) GetItems() []*protobuf1.FileFormat {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateRoleAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleAttribute *RoleAttribute `protobuf:"bytes,1,opt,name=role_attribute,json=roleAttribute,proto3" json:"role_attribute,omitempty"`
}

func (x *CreateRoleAttributeRequest) Reset() {
	*x = CreateRoleAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleAttributeRequest) ProtoMessage() {}

func (x *CreateRoleAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleAttributeRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{47}
}

func (x *CreateRoleAttributeRequest) GetRoleAttribute() *RoleAttribute {
	if x != nil {
		return x.RoleAttribute
	}
	return nil
}

type ListRoleAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRoleAttributesRequest) Reset() {
	*x = ListRoleAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleAttributesRequest) ProtoMessage() {}

func (x *ListRoleAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleAttributesRequest.ProtoReflect.Descriptor instead.
func (*ListRoleAttributesRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{48}
}

type ListRoleAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*RoleAttribute `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRoleAttributesResponse) Reset() {
	*x = ListRoleAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleAttributesResponse) ProtoMessage() {}

func (x *ListRoleAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleAttributesResponse.ProtoReflect.Descriptor instead.
func (*ListRoleAttributesResponse) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{49}
}

func (x *ListRoleAttributesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRoleAttributesResponse) GetItems() []*RoleAttribute {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetRoleAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleAttributeId string `protobuf:"bytes,1,opt,name=role_attribute_id,json=roleAttributeId,proto3" json:"role_attribute_id,omitempty"`
}

func (x *GetRoleAttributeRequest) Reset() {
	*x = GetRoleAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleAttributeRequest) ProtoMessage() {}

func (x *GetRoleAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetRoleAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{50}
}

func (x *GetRoleAttributeRequest) GetRoleAttributeId() string {
	if x != nil {
		return x.RoleAttributeId
	}
	return ""
}

type UpdateRoleAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleAttribute *RoleAttribute `protobuf:"bytes,1,opt,name=role_attribute,json=roleAttribute,proto3" json:"role_attribute,omitempty"`
}

func (x *UpdateRoleAttributeRequest) Reset() {
	*x = UpdateRoleAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleAttributeRequest) ProtoMessage() {}

func (x *UpdateRoleAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateRoleAttributeRequest) GetRoleAttribute() *RoleAttribute {
	if x != nil {
		return x.RoleAttribute
	}
	return nil
}

type DeleteRoleAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleAttribute *RoleAttribute `protobuf:"bytes,1,opt,name=role_attribute,json=roleAttribute,proto3" json:"role_attribute,omitempty"`
}

func (x *DeleteRoleAttributeRequest) Reset() {
	*x = DeleteRoleAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleAttributeRequest) ProtoMessage() {}

func (x *DeleteRoleAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleAttributeRequest) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteRoleAttributeRequest) GetRoleAttribute() *RoleAttribute {
	if x != nil {
		return x.RoleAttribute
	}
	return nil
}

// アカウントステータス
type UserAttribute_UserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ステータス
	// 状態（category）と状態の詳細（detail）の組み合わせを専用に表現したもの
	//
	// 名称マスタにおける種別 A0010022 (アカウントステータス) を参照
	Status *protobuf1.NameOption `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 状態
	// 名称マスタにおける種別 A0010023 (アカウントステータス（状態）) を参照
	Category *protobuf1.NameOption `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	// 状態の詳細
	// 名称マスタにおける種別 A0010024 (アカウントステータス（状態の詳細）) を参照
	Detail *protobuf1.NameOption `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *UserAttribute_UserStatus) Reset() {
	*x = UserAttribute_UserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttribute_UserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttribute_UserStatus) ProtoMessage() {}

func (x *UserAttribute_UserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttribute_UserStatus.ProtoReflect.Descriptor instead.
func (*UserAttribute_UserStatus) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UserAttribute_UserStatus) GetStatus() *protobuf1.NameOption {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UserAttribute_UserStatus) GetCategory() *protobuf1.NameOption {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *UserAttribute_UserStatus) GetDetail() *protobuf1.NameOption {
	if x != nil {
		return x.Detail
	}
	return nil
}

type UserGroupAttribute_UserSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *UserGroupAttribute_UserSummary) Reset() {
	*x = UserGroupAttribute_UserSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantadmin_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupAttribute_UserSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupAttribute_UserSummary) ProtoMessage() {}

func (x *UserGroupAttribute_UserSummary) ProtoReflect() protoreflect.Message {
	mi := &file_tenantadmin_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupAttribute_UserSummary.ProtoReflect.Descriptor instead.
func (*UserGroupAttribute_UserSummary) Descriptor() ([]byte, []int) {
	return file_tenantadmin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UserGroupAttribute_UserSummary) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_tenantadmin_proto protoreflect.FileDescriptor

var file_tenantadmin_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6e, 0x61, 0x6d,
	0x65, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x04, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x51, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x16, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x1a, 0x9a, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xdf,
	0x03, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x5c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x23, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xcf, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x6d, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x22, 0xab, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x4f,
	0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22,
	0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x21, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0d,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x41, 0x0a,
	0x12, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x42, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x11, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x12, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xa2, 0x01, 0x0a, 0x1b, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9b,
	0x01, 0x0a, 0x1c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1b,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a,
	0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x39, 0x0a, 0x1c, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x21, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x64, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x2b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x43, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x82,
	0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x12, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x5f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x12, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x22, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x35, 0x0a,
	0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xa2, 0x01, 0x0a, 0x23, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x22, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a,
	0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x40, 0x0a, 0x23, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x6b, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f,
	0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x65, 0x0a,
	0x1a, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a,
	0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x38, 0x0a, 0x1b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x2a,
	0x0a, 0x28, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x29, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x68, 0x0a, 0x1d, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x22, 0x3b, 0x0a, 0x1e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x2c, 0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f,
	0x0a, 0x2b, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x6d, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a,
	0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x1b,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x32, 0xfb, 0x23, 0x0a, 0x12, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x3c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x34, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x32, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x76, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x64, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x72, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6c, 0x0a, 0x0b, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a,
	0x14, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x12, 0x3a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a,
	0x14, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x36, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x3a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x9d,
	0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x46, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x90,
	0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x39, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x3a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x24, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x46, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x6e, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x3a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x81, 0x01, 0x0a, 0x1f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x46,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x9c,
	0x01, 0x0a, 0x1b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c,
	0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x3d,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01,
	0x0a, 0x1b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f,
	0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x3d, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa8, 0x01, 0x0a,
	0x1f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x12, 0x41, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xae,
	0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x73, 0x12, 0x43, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8d, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x38, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0xb4, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x45, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x35, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x81,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x70, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x76, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x64, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x42, 0x20, 0x5a, 0x1e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tenantadmin_proto_rawDescOnce sync.Once
	file_tenantadmin_proto_rawDescData = file_tenantadmin_proto_rawDesc
)

func file_tenantadmin_proto_rawDescGZIP() []byte {
	file_tenantadmin_proto_rawDescOnce.Do(func() {
		file_tenantadmin_proto_rawDescData = protoimpl.X.CompressGZIP(file_tenantadmin_proto_rawDescData)
	})
	return file_tenantadmin_proto_rawDescData
}

var file_tenantadmin_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_tenantadmin_proto_goTypes = []interface{}{
	(*UserAttribute)(nil),                               // 0: mtechnavi.api.tenantadmin.UserAttribute
	(*UserGroupAttribute)(nil),                          // 1: mtechnavi.api.tenantadmin.UserGroupAttribute
	(*RoleAttribute)(nil),                               // 2: mtechnavi.api.tenantadmin.RoleAttribute
	(*CreateUserAttributeRequest)(nil),                  // 3: mtechnavi.api.tenantadmin.CreateUserAttributeRequest
	(*CreateUserAndUserAttributeRequest)(nil),           // 4: mtechnavi.api.tenantadmin.CreateUserAndUserAttributeRequest
	(*ListUserAttributesRequest)(nil),                   // 5: mtechnavi.api.tenantadmin.ListUserAttributesRequest
	(*ListUserAttributesResponse)(nil),                  // 6: mtechnavi.api.tenantadmin.ListUserAttributesResponse
	(*GetUserAttributeRequest)(nil),                     // 7: mtechnavi.api.tenantadmin.GetUserAttributeRequest
	(*UpdateUserAttributeRequest)(nil),                  // 8: mtechnavi.api.tenantadmin.UpdateUserAttributeRequest
	(*UpdateUserAndUserAttributeRequest)(nil),           // 9: mtechnavi.api.tenantadmin.UpdateUserAndUserAttributeRequest
	(*DeleteUserAttributeRequest)(nil),                  // 10: mtechnavi.api.tenantadmin.DeleteUserAttributeRequest
	(*DeleteUserAndUserAttributeRequest)(nil),           // 11: mtechnavi.api.tenantadmin.DeleteUserAndUserAttributeRequest
	(*DisableUserRequest)(nil),                          // 12: mtechnavi.api.tenantadmin.DisableUserRequest
	(*DisableUserResponse)(nil),                         // 13: mtechnavi.api.tenantadmin.DisableUserResponse
	(*EnableUserRequest)(nil),                           // 14: mtechnavi.api.tenantadmin.EnableUserRequest
	(*EnableUserResponse)(nil),                          // 15: mtechnavi.api.tenantadmin.EnableUserResponse
	(*ImportUserAttributesRequest)(nil),                 // 16: mtechnavi.api.tenantadmin.ImportUserAttributesRequest
	(*ImportUserAttributesResponse)(nil),                // 17: mtechnavi.api.tenantadmin.ImportUserAttributesResponse
	(*ExportUserAttributesRequest)(nil),                 // 18: mtechnavi.api.tenantadmin.ExportUserAttributesRequest
	(*ExportUserAttributesResponse)(nil),                // 19: mtechnavi.api.tenantadmin.ExportUserAttributesResponse
	(*ListUserAttributeFormatsRequest)(nil),             // 20: mtechnavi.api.tenantadmin.ListUserAttributeFormatsRequest
	(*ListUserAttributeFormatsResponse)(nil),            // 21: mtechnavi.api.tenantadmin.ListUserAttributeFormatsResponse
	(*SendEmailUserCreatedRequest)(nil),                 // 22: mtechnavi.api.tenantadmin.SendEmailUserCreatedRequest
	(*SendEmailUserCreatedResponse)(nil),                // 23: mtechnavi.api.tenantadmin.SendEmailUserCreatedResponse
	(*CreateUserGroupAttributeRequest)(nil),             // 24: mtechnavi.api.tenantadmin.CreateUserGroupAttributeRequest
	(*CreateUserGroupAndUserGroupAttributeRequest)(nil), // 25: mtechnavi.api.tenantadmin.CreateUserGroupAndUserGroupAttributeRequest
	(*ListUserGroupAttributesRequest)(nil),              // 26: mtechnavi.api.tenantadmin.ListUserGroupAttributesRequest
	(*ListUserGroupAttributesResponse)(nil),             // 27: mtechnavi.api.tenantadmin.ListUserGroupAttributesResponse
	(*GetUserGroupAttributeRequest)(nil),                // 28: mtechnavi.api.tenantadmin.GetUserGroupAttributeRequest
	(*UpdateUserGroupAttributeRequest)(nil),             // 29: mtechnavi.api.tenantadmin.UpdateUserGroupAttributeRequest
	(*UpdateUserGroupAndUserGroupAttributeRequest)(nil), // 30: mtechnavi.api.tenantadmin.UpdateUserGroupAndUserGroupAttributeRequest
	(*DeleteUserGroupAttributeRequest)(nil),             // 31: mtechnavi.api.tenantadmin.DeleteUserGroupAttributeRequest
	(*DeleteUserGroupAndUserGroupAttributeRequest)(nil), // 32: mtechnavi.api.tenantadmin.DeleteUserGroupAndUserGroupAttributeRequest
	(*ImportUserBelongsUserGroupsRequest)(nil),          // 33: mtechnavi.api.tenantadmin.ImportUserBelongsUserGroupsRequest
	(*ImportUserBelongsUserGroupsResponse)(nil),         // 34: mtechnavi.api.tenantadmin.ImportUserBelongsUserGroupsResponse
	(*ExportUserBelongsUserGroupsRequest)(nil),          // 35: mtechnavi.api.tenantadmin.ExportUserBelongsUserGroupsRequest
	(*ExportUserBelongsUserGroupsResponse)(nil),         // 36: mtechnavi.api.tenantadmin.ExportUserBelongsUserGroupsResponse
	(*ListUserBelongsUserGroupFormatsRequest)(nil),      // 37: mtechnavi.api.tenantadmin.ListUserBelongsUserGroupFormatsRequest
	(*ListUserBelongsUserGroupFormatsResponse)(nil),     // 38: mtechnavi.api.tenantadmin.ListUserBelongsUserGroupFormatsResponse
	(*ExportAttachedRolesRequest)(nil),                  // 39: mtechnavi.api.tenantadmin.ExportAttachedRolesRequest
	(*ExportAttachedRolesResponse)(nil),                 // 40: mtechnavi.api.tenantadmin.ExportAttachedRolesResponse
	(*ListUserGroupAttachedRolesFormatsRequest)(nil),    // 41: mtechnavi.api.tenantadmin.ListUserGroupAttachedRolesFormatsRequest
	(*ListUserGroupAttachedRolesFormatsResponse)(nil),   // 42: mtechnavi.api.tenantadmin.ListUserGroupAttachedRolesFormatsResponse
	(*ExportAllowedMenuItemsRequest)(nil),               // 43: mtechnavi.api.tenantadmin.ExportAllowedMenuItemsRequest
	(*ExportAllowedMenuItemsResponse)(nil),              // 44: mtechnavi.api.tenantadmin.ExportAllowedMenuItemsResponse
	(*ListUserGroupAllowedMenuItemFormatsRequest)(nil),  // 45: mtechnavi.api.tenantadmin.ListUserGroupAllowedMenuItemFormatsRequest
	(*ListUserGroupAllowedMenuItemFormatsResponse)(nil), // 46: mtechnavi.api.tenantadmin.ListUserGroupAllowedMenuItemFormatsResponse
	(*CreateRoleAttributeRequest)(nil),                  // 47: mtechnavi.api.tenantadmin.CreateRoleAttributeRequest
	(*ListRoleAttributesRequest)(nil),                   // 48: mtechnavi.api.tenantadmin.ListRoleAttributesRequest
	(*ListRoleAttributesResponse)(nil),                  // 49: mtechnavi.api.tenantadmin.ListRoleAttributesResponse
	(*GetRoleAttributeRequest)(nil),                     // 50: mtechnavi.api.tenantadmin.GetRoleAttributeRequest
	(*UpdateRoleAttributeRequest)(nil),                  // 51: mtechnavi.api.tenantadmin.UpdateRoleAttributeRequest
	(*DeleteRoleAttributeRequest)(nil),                  // 52: mtechnavi.api.tenantadmin.DeleteRoleAttributeRequest
	(*UserAttribute_UserStatus)(nil),                    // 53: mtechnavi.api.tenantadmin.UserAttribute.UserStatus
	(*UserGroupAttribute_UserSummary)(nil),              // 54: mtechnavi.api.tenantadmin.UserGroupAttribute.UserSummary
	(*protobuf.User)(nil),                               // 55: mtechnavi.api.idp.User
	(*protobuf1.EmbeddedUser)(nil),                      // 56: sharelib.EmbeddedUser
	(*protobuf.UserGroup)(nil),                          // 57: mtechnavi.api.idp.UserGroup
	(*protobuf1.FileFormat)(nil),                        // 58: sharelib.FileFormat
	(*protobuf1.ImportSummary)(nil),                     // 59: sharelib.ImportSummary
	(*protobuf1.ImportError)(nil),                       // 60: sharelib.ImportError
	(*protobuf1.NameOption)(nil),                        // 61: sharelib.NameOption
	(*emptypb.Empty)(nil),                               // 62: google.protobuf.Empty
}
var file_tenantadmin_proto_depIdxs = []int32{
	55, // 0: mtechnavi.api.tenantadmin.UserAttribute.user:type_name -> mtechnavi.api.idp.User
	53, // 1: mtechnavi.api.tenantadmin.UserAttribute.status:type_name -> mtechnavi.api.tenantadmin.UserAttribute.UserStatus
	56, // 2: mtechnavi.api.tenantadmin.UserAttribute.user_attribute_updated_by:type_name -> sharelib.EmbeddedUser
	57, // 3: mtechnavi.api.tenantadmin.UserGroupAttribute.user_group:type_name -> mtechnavi.api.idp.UserGroup
	54, // 4: mtechnavi.api.tenantadmin.UserGroupAttribute.user_summary:type_name -> mtechnavi.api.tenantadmin.UserGroupAttribute.UserSummary
	0,  // 5: mtechnavi.api.tenantadmin.CreateUserAttributeRequest.user_attribute:type_name -> mtechnavi.api.tenantadmin.UserAttribute
	55, // 6: mtechnavi.api.tenantadmin.CreateUserAndUserAttributeRequest.user:type_name -> mtechnavi.api.idp.User
	0,  // 7: mtechnavi.api.tenantadmin.CreateUserAndUserAttributeRequest.user_attribute:type_name -> mtechnavi.api.tenantadmin.UserAttribute
	0,  // 8: mtechnavi.api.tenantadmin.ListUserAttributesResponse.items:type_name -> mtechnavi.api.tenantadmin.UserAttribute
	0,  // 9: mtechnavi.api.tenantadmin.UpdateUserAttributeRequest.user_attribute:type_name -> mtechnavi.api.tenantadmin.UserAttribute
	55, // 10: mtechnavi.api.tenantadmin.UpdateUserAndUserAttributeRequest.user:type_name -> mtechnavi.api.idp.User
	0,  // 11: mtechnavi.api.tenantadmin.UpdateUserAndUserAttributeRequest.user_attribute:type_name -> mtechnavi.api.tenantadmin.UserAttribute
	0,  // 12: mtechnavi.api.tenantadmin.DeleteUserAttributeRequest.user_attribute:type_name -> mtechnavi.api.tenantadmin.UserAttribute
	55, // 13: mtechnavi.api.tenantadmin.DeleteUserAndUserAttributeRequest.user:type_name -> mtechnavi.api.idp.User
	0,  // 14: mtechnavi.api.tenantadmin.DeleteUserAndUserAttributeRequest.user_attribute:type_name -> mtechnavi.api.tenantadmin.UserAttribute
	55, // 15: mtechnavi.api.tenantadmin.DisableUserRequest.user:type_name -> mtechnavi.api.idp.User
	55, // 16: mtechnavi.api.tenantadmin.DisableUserResponse.user:type_name -> mtechnavi.api.idp.User
	55, // 17: mtechnavi.api.tenantadmin.EnableUserRequest.user:type_name -> mtechnavi.api.idp.User
	55, // 18: mtechnavi.api.tenantadmin.EnableUserResponse.user:type_name -> mtechnavi.api.idp.User
	58, // 19: mtechnavi.api.tenantadmin.ImportUserAttributesRequest.file_format:type_name -> sharelib.FileFormat
	59, // 20: mtechnavi.api.tenantadmin.ImportUserAttributesResponse.summary:type_name -> sharelib.ImportSummary
	60, // 21: mtechnavi.api.tenantadmin.ImportUserAttributesResponse.errors:type_name -> sharelib.ImportError
	58, // 22: mtechnavi.api.tenantadmin.ExportUserAttributesRequest.file_format:type_name -> sharelib.FileFormat
	58, // 23: mtechnavi.api.tenantadmin.ListUserAttributeFormatsResponse.items:type_name -> sharelib.FileFormat
	55, // 24: mtechnavi.api.tenantadmin.SendEmailUserCreatedRequest.user:type_name -> mtechnavi.api.idp.User
	1,  // 25: mtechnavi.api.tenantadmin.CreateUserGroupAttributeRequest.user_group_attribute:type_name -> mtechnavi.api.tenantadmin.UserGroupAttribute
	57, // 26: mtechnavi.api.tenantadmin.CreateUserGroupAndUserGroupAttributeRequest.user_group:type_name -> mtechnavi.api.idp.UserGroup
	1,  // 27: mtechnavi.api.tenantadmin.CreateUserGroupAndUserGroupAttributeRequest.user_group_attribute:type_name -> mtechnavi.api.tenantadmin.UserGroupAttribute
	1,  // 28: mtechnavi.api.tenantadmin.ListUserGroupAttributesResponse.items:type_name -> mtechnavi.api.tenantadmin.UserGroupAttribute
	1,  // 29: mtechnavi.api.tenantadmin.UpdateUserGroupAttributeRequest.user_group_attribute:type_name -> mtechnavi.api.tenantadmin.UserGroupAttribute
	57, // 30: mtechnavi.api.tenantadmin.UpdateUserGroupAndUserGroupAttributeRequest.user_group:type_name -> mtechnavi.api.idp.UserGroup
	1,  // 31: mtechnavi.api.tenantadmin.UpdateUserGroupAndUserGroupAttributeRequest.user_group_attribute:type_name -> mtechnavi.api.tenantadmin.UserGroupAttribute
	1,  // 32: mtechnavi.api.tenantadmin.DeleteUserGroupAttributeRequest.user_group_attribute:type_name -> mtechnavi.api.tenantadmin.UserGroupAttribute
	57, // 33: mtechnavi.api.tenantadmin.DeleteUserGroupAndUserGroupAttributeRequest.user_group:type_name -> mtechnavi.api.idp.UserGroup
	1,  // 34: mtechnavi.api.tenantadmin.DeleteUserGroupAndUserGroupAttributeRequest.user_group_attribute:type_name -> mtechnavi.api.tenantadmin.UserGroupAttribute
	58, // 35: mtechnavi.api.tenantadmin.ImportUserBelongsUserGroupsRequest.file_format:type_name -> sharelib.FileFormat
	59, // 36: mtechnavi.api.tenantadmin.ImportUserBelongsUserGroupsResponse.summary:type_name -> sharelib.ImportSummary
	60, // 37: mtechnavi.api.tenantadmin.ImportUserBelongsUserGroupsResponse.errors:type_name -> sharelib.ImportError
	58, // 38: mtechnavi.api.tenantadmin.ExportUserBelongsUserGroupsRequest.file_format:type_name -> sharelib.FileFormat
	58, // 39: mtechnavi.api.tenantadmin.ListUserBelongsUserGroupFormatsResponse.items:type_name -> sharelib.FileFormat
	58, // 40: mtechnavi.api.tenantadmin.ExportAttachedRolesRequest.file_format:type_name -> sharelib.FileFormat
	58, // 41: mtechnavi.api.tenantadmin.ListUserGroupAttachedRolesFormatsResponse.items:type_name -> sharelib.FileFormat
	58, // 42: mtechnavi.api.tenantadmin.ExportAllowedMenuItemsRequest.file_format:type_name -> sharelib.FileFormat
	58, // 43: mtechnavi.api.tenantadmin.ListUserGroupAllowedMenuItemFormatsResponse.items:type_name -> sharelib.FileFormat
	2,  // 44: mtechnavi.api.tenantadmin.CreateRoleAttributeRequest.role_attribute:type_name -> mtechnavi.api.tenantadmin.RoleAttribute
	2,  // 45: mtechnavi.api.tenantadmin.ListRoleAttributesResponse.items:type_name -> mtechnavi.api.tenantadmin.RoleAttribute
	2,  // 46: mtechnavi.api.tenantadmin.UpdateRoleAttributeRequest.role_attribute:type_name -> mtechnavi.api.tenantadmin.RoleAttribute
	2,  // 47: mtechnavi.api.tenantadmin.DeleteRoleAttributeRequest.role_attribute:type_name -> mtechnavi.api.tenantadmin.RoleAttribute
	61, // 48: mtechnavi.api.tenantadmin.UserAttribute.UserStatus.status:type_name -> sharelib.NameOption
	61, // 49: mtechnavi.api.tenantadmin.UserAttribute.UserStatus.category:type_name -> sharelib.NameOption
	61, // 50: mtechnavi.api.tenantadmin.UserAttribute.UserStatus.detail:type_name -> sharelib.NameOption
	3,  // 51: mtechnavi.api.tenantadmin.TenantAdminService.CreateUserAttribute:input_type -> mtechnavi.api.tenantadmin.CreateUserAttributeRequest
	4,  // 52: mtechnavi.api.tenantadmin.TenantAdminService.CreateUserAndUserAttribute:input_type -> mtechnavi.api.tenantadmin.CreateUserAndUserAttributeRequest
	5,  // 53: mtechnavi.api.tenantadmin.TenantAdminService.ListUserAttributes:input_type -> mtechnavi.api.tenantadmin.ListUserAttributesRequest
	7,  // 54: mtechnavi.api.tenantadmin.TenantAdminService.GetUserAttribute:input_type -> mtechnavi.api.tenantadmin.GetUserAttributeRequest
	8,  // 55: mtechnavi.api.tenantadmin.TenantAdminService.UpdateUserAttribute:input_type -> mtechnavi.api.tenantadmin.UpdateUserAttributeRequest
	9,  // 56: mtechnavi.api.tenantadmin.TenantAdminService.UpdateUserAndUserAttribute:input_type -> mtechnavi.api.tenantadmin.UpdateUserAndUserAttributeRequest
	10, // 57: mtechnavi.api.tenantadmin.TenantAdminService.DeleteUserAttribute:input_type -> mtechnavi.api.tenantadmin.DeleteUserAttributeRequest
	11, // 58: mtechnavi.api.tenantadmin.TenantAdminService.DeleteUserAndUserAttribute:input_type -> mtechnavi.api.tenantadmin.DeleteUserAndUserAttributeRequest
	12, // 59: mtechnavi.api.tenantadmin.TenantAdminService.DisableUser:input_type -> mtechnavi.api.tenantadmin.DisableUserRequest
	14, // 60: mtechnavi.api.tenantadmin.TenantAdminService.EnableUser:input_type -> mtechnavi.api.tenantadmin.EnableUserRequest
	16, // 61: mtechnavi.api.tenantadmin.TenantAdminService.ImportUserAttributes:input_type -> mtechnavi.api.tenantadmin.ImportUserAttributesRequest
	18, // 62: mtechnavi.api.tenantadmin.TenantAdminService.ExportUserAttributes:input_type -> mtechnavi.api.tenantadmin.ExportUserAttributesRequest
	20, // 63: mtechnavi.api.tenantadmin.TenantAdminService.ListUserAttributeFormats:input_type -> mtechnavi.api.tenantadmin.ListUserAttributeFormatsRequest
	22, // 64: mtechnavi.api.tenantadmin.TenantAdminService.SendEmailUserCreated:input_type -> mtechnavi.api.tenantadmin.SendEmailUserCreatedRequest
	24, // 65: mtechnavi.api.tenantadmin.TenantAdminService.CreateUserGroupAttribute:input_type -> mtechnavi.api.tenantadmin.CreateUserGroupAttributeRequest
	25, // 66: mtechnavi.api.tenantadmin.TenantAdminService.CreateUserGroupAndUserGroupAttribute:input_type -> mtechnavi.api.tenantadmin.CreateUserGroupAndUserGroupAttributeRequest
	26, // 67: mtechnavi.api.tenantadmin.TenantAdminService.ListUserGroupAttributes:input_type -> mtechnavi.api.tenantadmin.ListUserGroupAttributesRequest
	28, // 68: mtechnavi.api.tenantadmin.TenantAdminService.GetUserGroupAttribute:input_type -> mtechnavi.api.tenantadmin.GetUserGroupAttributeRequest
	29, // 69: mtechnavi.api.tenantadmin.TenantAdminService.UpdateUserGroupAttribute:input_type -> mtechnavi.api.tenantadmin.UpdateUserGroupAttributeRequest
	30, // 70: mtechnavi.api.tenantadmin.TenantAdminService.UpdateUserGroupAndUserGroupAttribute:input_type -> mtechnavi.api.tenantadmin.UpdateUserGroupAndUserGroupAttributeRequest
	31, // 71: mtechnavi.api.tenantadmin.TenantAdminService.DeleteUserGroupAttribute:input_type -> mtechnavi.api.tenantadmin.DeleteUserGroupAttributeRequest
	32, // 72: mtechnavi.api.tenantadmin.TenantAdminService.DeleteUserAndUserGroupAttribute:input_type -> mtechnavi.api.tenantadmin.DeleteUserGroupAndUserGroupAttributeRequest
	33, // 73: mtechnavi.api.tenantadmin.TenantAdminService.ImportUserBelongsUserGroups:input_type -> mtechnavi.api.tenantadmin.ImportUserBelongsUserGroupsRequest
	35, // 74: mtechnavi.api.tenantadmin.TenantAdminService.ExportUserBelongsUserGroups:input_type -> mtechnavi.api.tenantadmin.ExportUserBelongsUserGroupsRequest
	37, // 75: mtechnavi.api.tenantadmin.TenantAdminService.ListUserBelongsUserGroupFormats:input_type -> mtechnavi.api.tenantadmin.ListUserBelongsUserGroupFormatsRequest
	39, // 76: mtechnavi.api.tenantadmin.TenantAdminService.ExportAttachedRoles:input_type -> mtechnavi.api.tenantadmin.ExportAttachedRolesRequest
	41, // 77: mtechnavi.api.tenantadmin.TenantAdminService.ListUserGroupAttachedRolesFormats:input_type -> mtechnavi.api.tenantadmin.ListUserGroupAttachedRolesFormatsRequest
	43, // 78: mtechnavi.api.tenantadmin.TenantAdminService.ExportAllowedMenuItems:input_type -> mtechnavi.api.tenantadmin.ExportAllowedMenuItemsRequest
	45, // 79: mtechnavi.api.tenantadmin.TenantAdminService.ListUserGroupAllowedMenuItemFormats:input_type -> mtechnavi.api.tenantadmin.ListUserGroupAllowedMenuItemFormatsRequest
	47, // 80: mtechnavi.api.tenantadmin.TenantAdminService.CreateRoleAttribute:input_type -> mtechnavi.api.tenantadmin.CreateRoleAttributeRequest
	48, // 81: mtechnavi.api.tenantadmin.TenantAdminService.ListRoleAttributes:input_type -> mtechnavi.api.tenantadmin.ListRoleAttributesRequest
	50, // 82: mtechnavi.api.tenantadmin.TenantAdminService.GetRoleAttribute:input_type -> mtechnavi.api.tenantadmin.GetRoleAttributeRequest
	51, // 83: mtechnavi.api.tenantadmin.TenantAdminService.UpdateRoleAttribute:input_type -> mtechnavi.api.tenantadmin.UpdateRoleAttributeRequest
	52, // 84: mtechnavi.api.tenantadmin.TenantAdminService.DeleteRoleAttribute:input_type -> mtechnavi.api.tenantadmin.DeleteRoleAttributeRequest
	0,  // 85: mtechnavi.api.tenantadmin.TenantAdminService.CreateUserAttribute:output_type -> mtechnavi.api.tenantadmin.UserAttribute
	0,  // 86: mtechnavi.api.tenantadmin.TenantAdminService.CreateUserAndUserAttribute:output_type -> mtechnavi.api.tenantadmin.UserAttribute
	6,  // 87: mtechnavi.api.tenantadmin.TenantAdminService.ListUserAttributes:output_type -> mtechnavi.api.tenantadmin.ListUserAttributesResponse
	0,  // 88: mtechnavi.api.tenantadmin.TenantAdminService.GetUserAttribute:output_type -> mtechnavi.api.tenantadmin.UserAttribute
	0,  // 89: mtechnavi.api.tenantadmin.TenantAdminService.UpdateUserAttribute:output_type -> mtechnavi.api.tenantadmin.UserAttribute
	0,  // 90: mtechnavi.api.tenantadmin.TenantAdminService.UpdateUserAndUserAttribute:output_type -> mtechnavi.api.tenantadmin.UserAttribute
	62, // 91: mtechnavi.api.tenantadmin.TenantAdminService.DeleteUserAttribute:output_type -> google.protobuf.Empty
	62, // 92: mtechnavi.api.tenantadmin.TenantAdminService.DeleteUserAndUserAttribute:output_type -> google.protobuf.Empty
	13, // 93: mtechnavi.api.tenantadmin.TenantAdminService.DisableUser:output_type -> mtechnavi.api.tenantadmin.DisableUserResponse
	15, // 94: mtechnavi.api.tenantadmin.TenantAdminService.EnableUser:output_type -> mtechnavi.api.tenantadmin.EnableUserResponse
	17, // 95: mtechnavi.api.tenantadmin.TenantAdminService.ImportUserAttributes:output_type -> mtechnavi.api.tenantadmin.ImportUserAttributesResponse
	19, // 96: mtechnavi.api.tenantadmin.TenantAdminService.ExportUserAttributes:output_type -> mtechnavi.api.tenantadmin.ExportUserAttributesResponse
	21, // 97: mtechnavi.api.tenantadmin.TenantAdminService.ListUserAttributeFormats:output_type -> mtechnavi.api.tenantadmin.ListUserAttributeFormatsResponse
	23, // 98: mtechnavi.api.tenantadmin.TenantAdminService.SendEmailUserCreated:output_type -> mtechnavi.api.tenantadmin.SendEmailUserCreatedResponse
	1,  // 99: mtechnavi.api.tenantadmin.TenantAdminService.CreateUserGroupAttribute:output_type -> mtechnavi.api.tenantadmin.UserGroupAttribute
	1,  // 100: mtechnavi.api.tenantadmin.TenantAdminService.CreateUserGroupAndUserGroupAttribute:output_type -> mtechnavi.api.tenantadmin.UserGroupAttribute
	27, // 101: mtechnavi.api.tenantadmin.TenantAdminService.ListUserGroupAttributes:output_type -> mtechnavi.api.tenantadmin.ListUserGroupAttributesResponse
	1,  // 102: mtechnavi.api.tenantadmin.TenantAdminService.GetUserGroupAttribute:output_type -> mtechnavi.api.tenantadmin.UserGroupAttribute
	1,  // 103: mtechnavi.api.tenantadmin.TenantAdminService.UpdateUserGroupAttribute:output_type -> mtechnavi.api.tenantadmin.UserGroupAttribute
	1,  // 104: mtechnavi.api.tenantadmin.TenantAdminService.UpdateUserGroupAndUserGroupAttribute:output_type -> mtechnavi.api.tenantadmin.UserGroupAttribute
	62, // 105: mtechnavi.api.tenantadmin.TenantAdminService.DeleteUserGroupAttribute:output_type -> google.protobuf.Empty
	62, // 106: mtechnavi.api.tenantadmin.TenantAdminService.DeleteUserAndUserGroupAttribute:output_type -> google.protobuf.Empty
	34, // 107: mtechnavi.api.tenantadmin.TenantAdminService.ImportUserBelongsUserGroups:output_type -> mtechnavi.api.tenantadmin.ImportUserBelongsUserGroupsResponse
	36, // 108: mtechnavi.api.tenantadmin.TenantAdminService.ExportUserBelongsUserGroups:output_type -> mtechnavi.api.tenantadmin.ExportUserBelongsUserGroupsResponse
	38, // 109: mtechnavi.api.tenantadmin.TenantAdminService.ListUserBelongsUserGroupFormats:output_type -> mtechnavi.api.tenantadmin.ListUserBelongsUserGroupFormatsResponse
	40, // 110: mtechnavi.api.tenantadmin.TenantAdminService.ExportAttachedRoles:output_type -> mtechnavi.api.tenantadmin.ExportAttachedRolesResponse
	42, // 111: mtechnavi.api.tenantadmin.TenantAdminService.ListUserGroupAttachedRolesFormats:output_type -> mtechnavi.api.tenantadmin.ListUserGroupAttachedRolesFormatsResponse
	44, // 112: mtechnavi.api.tenantadmin.TenantAdminService.ExportAllowedMenuItems:output_type -> mtechnavi.api.tenantadmin.ExportAllowedMenuItemsResponse
	46, // 113: mtechnavi.api.tenantadmin.TenantAdminService.ListUserGroupAllowedMenuItemFormats:output_type -> mtechnavi.api.tenantadmin.ListUserGroupAllowedMenuItemFormatsResponse
	2,  // 114: mtechnavi.api.tenantadmin.TenantAdminService.CreateRoleAttribute:output_type -> mtechnavi.api.tenantadmin.RoleAttribute
	49, // 115: mtechnavi.api.tenantadmin.TenantAdminService.ListRoleAttributes:output_type -> mtechnavi.api.tenantadmin.ListRoleAttributesResponse
	2,  // 116: mtechnavi.api.tenantadmin.TenantAdminService.GetRoleAttribute:output_type -> mtechnavi.api.tenantadmin.RoleAttribute
	2,  // 117: mtechnavi.api.tenantadmin.TenantAdminService.UpdateRoleAttribute:output_type -> mtechnavi.api.tenantadmin.RoleAttribute
	62, // 118: mtechnavi.api.tenantadmin.TenantAdminService.DeleteRoleAttribute:output_type -> google.protobuf.Empty
	85, // [85:119] is the sub-list for method output_type
	51, // [51:85] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_tenantadmin_proto_init() }
func file_tenantadmin_proto_init() {
	if File_tenantadmin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tenantadmin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserAndUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAndUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserAndUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUserAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUserAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserAttributeFormatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserAttributeFormatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailUserCreatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailUserCreatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserGroupAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserGroupAndUserGroupAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGroupAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserGroupAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserGroupAndUserGroupAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserGroupAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserGroupAndUserGroupAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUserBelongsUserGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUserBelongsUserGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserBelongsUserGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserBelongsUserGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserBelongsUserGroupFormatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserBelongsUserGroupFormatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportAttachedRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportAttachedRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupAttachedRolesFormatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupAttachedRolesFormatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportAllowedMenuItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportAllowedMenuItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupAllowedMenuItemFormatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupAllowedMenuItemFormatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttribute_UserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenantadmin_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupAttribute_UserSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tenantadmin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tenantadmin_proto_goTypes,
		DependencyIndexes: file_tenantadmin_proto_depIdxs,
		MessageInfos:      file_tenantadmin_proto_msgTypes,
	}.Build()
	File_tenantadmin_proto = out.File
	file_tenantadmin_proto_rawDesc = nil
	file_tenantadmin_proto_goTypes = nil
	file_tenantadmin_proto_depIdxs = nil
}
