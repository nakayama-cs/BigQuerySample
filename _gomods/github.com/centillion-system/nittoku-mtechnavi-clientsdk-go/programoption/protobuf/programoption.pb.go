// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: programoption.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	protobuf "mtechnavi/sharelib/protobuf"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MaintenanceMode int32

const (
	MaintenanceMode_Complete    MaintenanceMode = 0
	MaintenanceMode_Incremental MaintenanceMode = 1
)

// Enum value maps for MaintenanceMode.
var (
	MaintenanceMode_name = map[int32]string{
		0: "Complete",
		1: "Incremental",
	}
	MaintenanceMode_value = map[string]int32{
		"Complete":    0,
		"Incremental": 1,
	}
)

func (x MaintenanceMode) Enum() *MaintenanceMode {
	p := new(MaintenanceMode)
	*p = x
	return p
}

func (x MaintenanceMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaintenanceMode) Descriptor() protoreflect.EnumDescriptor {
	return file_programoption_proto_enumTypes[0].Descriptor()
}

func (MaintenanceMode) Type() protoreflect.EnumType {
	return &file_programoption_proto_enumTypes[0]
}

func (x MaintenanceMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaintenanceMode.Descriptor instead.
func (MaintenanceMode) EnumDescriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{0}
}

// Implementation Note:
// システムが用意する名称マスタについては、GCS上にオブジェクト群として用意する。
// テナント作成時に、GCSからDataproxyに対して投入する想定。
type ProgramOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramOptionId string `protobuf:"bytes,1,opt,name=program_option_id,json=programOptionId,proto3" json:"program_option_id,omitempty"`
	// 種別
	CategoryName string `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	// 種別名
	Category *ProgramOption_DisplayNameLang `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	// コード値
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// 名称値
	DisplayNameLang map[string]string `protobuf:"bytes,5,rep,name=display_name_lang,json=displayNameLang,proto3" json:"display_name_lang,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// システムコード値
	SystemName string `protobuf:"bytes,6,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`
	// システム名称値
	System *ProgramOption_DisplayNameLang `protobuf:"bytes,7,opt,name=system,proto3" json:"system,omitempty"`
	// 並び順
	Order int32 `protobuf:"varint,8,opt,name=order,proto3" json:"order,omitempty"`
	// readonly ユーザー編集可
	UserEditable bool `protobuf:"varint,12,opt,name=user_editable,json=userEditable,proto3" json:"user_editable,omitempty"`
	// readonly ユーザー編集済
	UserEdited bool `protobuf:"varint,13,opt,name=user_edited,json=userEdited,proto3" json:"user_edited,omitempty"`
	// 共有項目xxx_atのscopeはidと同様
	DeletedAt int64 `protobuf:"varint,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt int64 `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64 `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ProgramOption) Reset() {
	*x = ProgramOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramOption) ProtoMessage() {}

func (x *ProgramOption) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramOption.ProtoReflect.Descriptor instead.
func (*ProgramOption) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{0}
}

func (x *ProgramOption) GetProgramOptionId() string {
	if x != nil {
		return x.ProgramOptionId
	}
	return ""
}

func (x *ProgramOption) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ProgramOption) GetCategory() *ProgramOption_DisplayNameLang {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ProgramOption) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProgramOption) GetDisplayNameLang() map[string]string {
	if x != nil {
		return x.DisplayNameLang
	}
	return nil
}

func (x *ProgramOption) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *ProgramOption) GetSystem() *ProgramOption_DisplayNameLang {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *ProgramOption) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProgramOption) GetUserEditable() bool {
	if x != nil {
		return x.UserEditable
	}
	return false
}

func (x *ProgramOption) GetUserEdited() bool {
	if x != nil {
		return x.UserEdited
	}
	return false
}

func (x *ProgramOption) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ProgramOption) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProgramOption) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateProgramOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramOption *ProgramOption `protobuf:"bytes,1,opt,name=program_option,json=programOption,proto3" json:"program_option,omitempty"`
}

func (x *CreateProgramOptionRequest) Reset() {
	*x = CreateProgramOptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProgramOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProgramOptionRequest) ProtoMessage() {}

func (x *CreateProgramOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProgramOptionRequest.ProtoReflect.Descriptor instead.
func (*CreateProgramOptionRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProgramOptionRequest) GetProgramOption() *ProgramOption {
	if x != nil {
		return x.ProgramOption
	}
	return nil
}

type ListProgramOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProgramOptionsRequest) Reset() {
	*x = ListProgramOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProgramOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProgramOptionsRequest) ProtoMessage() {}

func (x *ListProgramOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProgramOptionsRequest.ProtoReflect.Descriptor instead.
func (*ListProgramOptionsRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{2}
}

type ListProgramOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*ProgramOption `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListProgramOptionsResponse) Reset() {
	*x = ListProgramOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProgramOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProgramOptionsResponse) ProtoMessage() {}

func (x *ListProgramOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProgramOptionsResponse.ProtoReflect.Descriptor instead.
func (*ListProgramOptionsResponse) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{3}
}

func (x *ListProgramOptionsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProgramOptionsResponse) GetItems() []*ProgramOption {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetProgramOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramOptionId string `protobuf:"bytes,1,opt,name=program_option_id,json=programOptionId,proto3" json:"program_option_id,omitempty"`
}

func (x *GetProgramOptionRequest) Reset() {
	*x = GetProgramOptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramOptionRequest) ProtoMessage() {}

func (x *GetProgramOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramOptionRequest.ProtoReflect.Descriptor instead.
func (*GetProgramOptionRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{4}
}

func (x *GetProgramOptionRequest) GetProgramOptionId() string {
	if x != nil {
		return x.ProgramOptionId
	}
	return ""
}

type UpdateProgramOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramOption *ProgramOption `protobuf:"bytes,1,opt,name=program_option,json=programOption,proto3" json:"program_option,omitempty"`
}

func (x *UpdateProgramOptionRequest) Reset() {
	*x = UpdateProgramOptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProgramOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProgramOptionRequest) ProtoMessage() {}

func (x *UpdateProgramOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProgramOptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateProgramOptionRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateProgramOptionRequest) GetProgramOption() *ProgramOption {
	if x != nil {
		return x.ProgramOption
	}
	return nil
}

type DeleteProgramOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramOption *ProgramOption `protobuf:"bytes,1,opt,name=program_option,json=programOption,proto3" json:"program_option,omitempty"`
}

func (x *DeleteProgramOptionRequest) Reset() {
	*x = DeleteProgramOptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProgramOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProgramOptionRequest) ProtoMessage() {}

func (x *DeleteProgramOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProgramOptionRequest.ProtoReflect.Descriptor instead.
func (*DeleteProgramOptionRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProgramOptionRequest) GetProgramOption() *ProgramOption {
	if x != nil {
		return x.ProgramOption
	}
	return nil
}

type ImportProgramOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取込ファイルアップデート時の書き込みURL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
	// 処理（検査/取込）
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// エラーファイル出力
	// trueの場合、エラー内容をCSVで出力する
	ExportError bool `protobuf:"varint,4,opt,name=export_error,json=exportError,proto3" json:"export_error,omitempty"`
}

func (x *ImportProgramOptionsRequest) Reset() {
	*x = ImportProgramOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportProgramOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportProgramOptionsRequest) ProtoMessage() {}

func (x *ImportProgramOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportProgramOptionsRequest.ProtoReflect.Descriptor instead.
func (*ImportProgramOptionsRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{7}
}

func (x *ImportProgramOptionsRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImportProgramOptionsRequest) GetFileFormat() *protobuf.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

func (x *ImportProgramOptionsRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *ImportProgramOptionsRequest) GetExportError() bool {
	if x != nil {
		return x.ExportError
	}
	return false
}

type ImportProgramOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 処理まとめ
	Summary *protobuf.ImportSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// エラー内容
	Errors []*protobuf.ImportError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// エラーファイル
	AssetId string `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ImportProgramOptionsResponse) Reset() {
	*x = ImportProgramOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportProgramOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportProgramOptionsResponse) ProtoMessage() {}

func (x *ImportProgramOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportProgramOptionsResponse.ProtoReflect.Descriptor instead.
func (*ImportProgramOptionsResponse) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{8}
}

func (x *ImportProgramOptionsResponse) GetSummary() *protobuf.ImportSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *ImportProgramOptionsResponse) GetErrors() []*protobuf.ImportError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ImportProgramOptionsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ExportProgramOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// transaction_unit_ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// ファイルフォーマット
	FileFormat *protobuf.FileFormat `protobuf:"bytes,2,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`
}

func (x *ExportProgramOptionsRequest) Reset() {
	*x = ExportProgramOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportProgramOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportProgramOptionsRequest) ProtoMessage() {}

func (x *ExportProgramOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportProgramOptionsRequest.ProtoReflect.Descriptor instead.
func (*ExportProgramOptionsRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{9}
}

func (x *ExportProgramOptionsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExportProgramOptionsRequest) GetFileFormat() *protobuf.FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return nil
}

type ExportProgramOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ExportProgramOptionsResponse) Reset() {
	*x = ExportProgramOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportProgramOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportProgramOptionsResponse) ProtoMessage() {}

func (x *ExportProgramOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportProgramOptionsResponse.ProtoReflect.Descriptor instead.
func (*ExportProgramOptionsResponse) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{10}
}

func (x *ExportProgramOptionsResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ListProgramOptionFormatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProgramOptionFormatsRequest) Reset() {
	*x = ListProgramOptionFormatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProgramOptionFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProgramOptionFormatsRequest) ProtoMessage() {}

func (x *ListProgramOptionFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProgramOptionFormatsRequest.ProtoReflect.Descriptor instead.
func (*ListProgramOptionFormatsRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{11}
}

type ListProgramOptionFormatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// ファイルフォーマット
	Items []*protobuf.FileFormat `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListProgramOptionFormatsResponse) Reset() {
	*x = ListProgramOptionFormatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProgramOptionFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProgramOptionFormatsResponse) ProtoMessage() {}

func (x *ListProgramOptionFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProgramOptionFormatsResponse.ProtoReflect.Descriptor instead.
func (*ListProgramOptionFormatsResponse) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{12}
}

func (x *ListProgramOptionFormatsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProgramOptionFormatsResponse) GetItems() []*protobuf.FileFormat {
	if x != nil {
		return x.Items
	}
	return nil
}

type MaintenanceProgramOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramOptions []*ProgramOption `protobuf:"bytes,1,rep,name=program_options,json=programOptions,proto3" json:"program_options,omitempty"`
	Mode           MaintenanceMode  `protobuf:"varint,2,opt,name=mode,proto3,enum=mtechnavi.api.programoption.MaintenanceMode" json:"mode,omitempty"`
}

func (x *MaintenanceProgramOptionsRequest) Reset() {
	*x = MaintenanceProgramOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceProgramOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceProgramOptionsRequest) ProtoMessage() {}

func (x *MaintenanceProgramOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceProgramOptionsRequest.ProtoReflect.Descriptor instead.
func (*MaintenanceProgramOptionsRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{13}
}

func (x *MaintenanceProgramOptionsRequest) GetProgramOptions() []*ProgramOption {
	if x != nil {
		return x.ProgramOptions
	}
	return nil
}

func (x *MaintenanceProgramOptionsRequest) GetMode() MaintenanceMode {
	if x != nil {
		return x.Mode
	}
	return MaintenanceMode_Complete
}

type MaintenanceProgramOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MaintenanceProgramOptionsResponse) Reset() {
	*x = MaintenanceProgramOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceProgramOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceProgramOptionsResponse) ProtoMessage() {}

func (x *MaintenanceProgramOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceProgramOptionsResponse.ProtoReflect.Descriptor instead.
func (*MaintenanceProgramOptionsResponse) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{14}
}

type ProvisionProgramOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProvisionProgramOptionsRequest) Reset() {
	*x = ProvisionProgramOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionProgramOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionProgramOptionsRequest) ProtoMessage() {}

func (x *ProvisionProgramOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionProgramOptionsRequest.ProtoReflect.Descriptor instead.
func (*ProvisionProgramOptionsRequest) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{15}
}

type ProvisionProgramOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProvisionProgramOptionsResponse) Reset() {
	*x = ProvisionProgramOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionProgramOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionProgramOptionsResponse) ProtoMessage() {}

func (x *ProvisionProgramOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionProgramOptionsResponse.ProtoReflect.Descriptor instead.
func (*ProvisionProgramOptionsResponse) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{16}
}

// 名称
// Note:命名規約遵守のため型を用意してネストしている
type ProgramOption_DisplayNameLang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayNameLang map[string]string `protobuf:"bytes,1,rep,name=display_name_lang,json=displayNameLang,proto3" json:"display_name_lang,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProgramOption_DisplayNameLang) Reset() {
	*x = ProgramOption_DisplayNameLang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_programoption_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramOption_DisplayNameLang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramOption_DisplayNameLang) ProtoMessage() {}

func (x *ProgramOption_DisplayNameLang) ProtoReflect() protoreflect.Message {
	mi := &file_programoption_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramOption_DisplayNameLang.ProtoReflect.Descriptor instead.
func (*ProgramOption_DisplayNameLang) Descriptor() ([]byte, []int) {
	return file_programoption_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ProgramOption_DisplayNameLang) GetDisplayNameLang() map[string]string {
	if x != nil {
		return x.DisplayNameLang
	}
	return nil
}

var File_programoption_proto protoreflect.FileDescriptor

var file_programoption_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x07,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x56, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x6b, 0x0a, 0x11,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c,
	0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x64, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xd2, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x7b, 0x0a, 0x11, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61,
	0x6e, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61,
	0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x1a, 0x42, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x6f, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x74,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x01,
	0x0a, 0x1b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x1c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69,
	0x62, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x66, 0x0a, 0x1b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69,
	0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x39, 0x0a, 0x1c, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb9, 0x01, 0x0a,
	0x20, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x53, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x0a,
	0x1e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x21, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2a, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x10, 0x01, 0x32, 0xe4, 0x0a, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7a, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x36, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x74, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x8b, 0x01, 0x0a, 0x14,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39,
	0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x14, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x38, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x73, 0x12, 0x3c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0xa0, 0x01, 0x0a, 0x1f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x3d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3b, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x22, 0x5a, 0x20, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_programoption_proto_rawDescOnce sync.Once
	file_programoption_proto_rawDescData = file_programoption_proto_rawDesc
)

func file_programoption_proto_rawDescGZIP() []byte {
	file_programoption_proto_rawDescOnce.Do(func() {
		file_programoption_proto_rawDescData = protoimpl.X.CompressGZIP(file_programoption_proto_rawDescData)
	})
	return file_programoption_proto_rawDescData
}

var file_programoption_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_programoption_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_programoption_proto_goTypes = []interface{}{
	(MaintenanceMode)(0),                      // 0: mtechnavi.api.programoption.MaintenanceMode
	(*ProgramOption)(nil),                     // 1: mtechnavi.api.programoption.ProgramOption
	(*CreateProgramOptionRequest)(nil),        // 2: mtechnavi.api.programoption.CreateProgramOptionRequest
	(*ListProgramOptionsRequest)(nil),         // 3: mtechnavi.api.programoption.ListProgramOptionsRequest
	(*ListProgramOptionsResponse)(nil),        // 4: mtechnavi.api.programoption.ListProgramOptionsResponse
	(*GetProgramOptionRequest)(nil),           // 5: mtechnavi.api.programoption.GetProgramOptionRequest
	(*UpdateProgramOptionRequest)(nil),        // 6: mtechnavi.api.programoption.UpdateProgramOptionRequest
	(*DeleteProgramOptionRequest)(nil),        // 7: mtechnavi.api.programoption.DeleteProgramOptionRequest
	(*ImportProgramOptionsRequest)(nil),       // 8: mtechnavi.api.programoption.ImportProgramOptionsRequest
	(*ImportProgramOptionsResponse)(nil),      // 9: mtechnavi.api.programoption.ImportProgramOptionsResponse
	(*ExportProgramOptionsRequest)(nil),       // 10: mtechnavi.api.programoption.ExportProgramOptionsRequest
	(*ExportProgramOptionsResponse)(nil),      // 11: mtechnavi.api.programoption.ExportProgramOptionsResponse
	(*ListProgramOptionFormatsRequest)(nil),   // 12: mtechnavi.api.programoption.ListProgramOptionFormatsRequest
	(*ListProgramOptionFormatsResponse)(nil),  // 13: mtechnavi.api.programoption.ListProgramOptionFormatsResponse
	(*MaintenanceProgramOptionsRequest)(nil),  // 14: mtechnavi.api.programoption.MaintenanceProgramOptionsRequest
	(*MaintenanceProgramOptionsResponse)(nil), // 15: mtechnavi.api.programoption.MaintenanceProgramOptionsResponse
	(*ProvisionProgramOptionsRequest)(nil),    // 16: mtechnavi.api.programoption.ProvisionProgramOptionsRequest
	(*ProvisionProgramOptionsResponse)(nil),   // 17: mtechnavi.api.programoption.ProvisionProgramOptionsResponse
	(*ProgramOption_DisplayNameLang)(nil),     // 18: mtechnavi.api.programoption.ProgramOption.DisplayNameLang
	nil,                                       // 19: mtechnavi.api.programoption.ProgramOption.DisplayNameLangEntry
	nil,                                       // 20: mtechnavi.api.programoption.ProgramOption.DisplayNameLang.DisplayNameLangEntry
	(*protobuf.FileFormat)(nil),               // 21: sharelib.FileFormat
	(*protobuf.ImportSummary)(nil),            // 22: sharelib.ImportSummary
	(*protobuf.ImportError)(nil),              // 23: sharelib.ImportError
	(*emptypb.Empty)(nil),                     // 24: google.protobuf.Empty
}
var file_programoption_proto_depIdxs = []int32{
	18, // 0: mtechnavi.api.programoption.ProgramOption.category:type_name -> mtechnavi.api.programoption.ProgramOption.DisplayNameLang
	19, // 1: mtechnavi.api.programoption.ProgramOption.display_name_lang:type_name -> mtechnavi.api.programoption.ProgramOption.DisplayNameLangEntry
	18, // 2: mtechnavi.api.programoption.ProgramOption.system:type_name -> mtechnavi.api.programoption.ProgramOption.DisplayNameLang
	1,  // 3: mtechnavi.api.programoption.CreateProgramOptionRequest.program_option:type_name -> mtechnavi.api.programoption.ProgramOption
	1,  // 4: mtechnavi.api.programoption.ListProgramOptionsResponse.items:type_name -> mtechnavi.api.programoption.ProgramOption
	1,  // 5: mtechnavi.api.programoption.UpdateProgramOptionRequest.program_option:type_name -> mtechnavi.api.programoption.ProgramOption
	1,  // 6: mtechnavi.api.programoption.DeleteProgramOptionRequest.program_option:type_name -> mtechnavi.api.programoption.ProgramOption
	21, // 7: mtechnavi.api.programoption.ImportProgramOptionsRequest.file_format:type_name -> sharelib.FileFormat
	22, // 8: mtechnavi.api.programoption.ImportProgramOptionsResponse.summary:type_name -> sharelib.ImportSummary
	23, // 9: mtechnavi.api.programoption.ImportProgramOptionsResponse.errors:type_name -> sharelib.ImportError
	21, // 10: mtechnavi.api.programoption.ExportProgramOptionsRequest.file_format:type_name -> sharelib.FileFormat
	21, // 11: mtechnavi.api.programoption.ListProgramOptionFormatsResponse.items:type_name -> sharelib.FileFormat
	1,  // 12: mtechnavi.api.programoption.MaintenanceProgramOptionsRequest.program_options:type_name -> mtechnavi.api.programoption.ProgramOption
	0,  // 13: mtechnavi.api.programoption.MaintenanceProgramOptionsRequest.mode:type_name -> mtechnavi.api.programoption.MaintenanceMode
	20, // 14: mtechnavi.api.programoption.ProgramOption.DisplayNameLang.display_name_lang:type_name -> mtechnavi.api.programoption.ProgramOption.DisplayNameLang.DisplayNameLangEntry
	2,  // 15: mtechnavi.api.programoption.ProgramOptionService.CreateProgramOption:input_type -> mtechnavi.api.programoption.CreateProgramOptionRequest
	3,  // 16: mtechnavi.api.programoption.ProgramOptionService.ListProgramOptions:input_type -> mtechnavi.api.programoption.ListProgramOptionsRequest
	5,  // 17: mtechnavi.api.programoption.ProgramOptionService.GetProgramOption:input_type -> mtechnavi.api.programoption.GetProgramOptionRequest
	6,  // 18: mtechnavi.api.programoption.ProgramOptionService.UpdateProgramOption:input_type -> mtechnavi.api.programoption.UpdateProgramOptionRequest
	7,  // 19: mtechnavi.api.programoption.ProgramOptionService.DeleteProgramOption:input_type -> mtechnavi.api.programoption.DeleteProgramOptionRequest
	8,  // 20: mtechnavi.api.programoption.ProgramOptionService.ImportProgramOptions:input_type -> mtechnavi.api.programoption.ImportProgramOptionsRequest
	10, // 21: mtechnavi.api.programoption.ProgramOptionService.ExportProgramOptions:input_type -> mtechnavi.api.programoption.ExportProgramOptionsRequest
	12, // 22: mtechnavi.api.programoption.ProgramOptionService.ListProgramOptionFormats:input_type -> mtechnavi.api.programoption.ListProgramOptionFormatsRequest
	14, // 23: mtechnavi.api.programoption.ProgramOptionService.MaintenanceProgramOptionFormats:input_type -> mtechnavi.api.programoption.MaintenanceProgramOptionsRequest
	16, // 24: mtechnavi.api.programoption.ProgramOptionService.ProvisionProgramOptions:input_type -> mtechnavi.api.programoption.ProvisionProgramOptionsRequest
	1,  // 25: mtechnavi.api.programoption.ProgramOptionService.CreateProgramOption:output_type -> mtechnavi.api.programoption.ProgramOption
	4,  // 26: mtechnavi.api.programoption.ProgramOptionService.ListProgramOptions:output_type -> mtechnavi.api.programoption.ListProgramOptionsResponse
	1,  // 27: mtechnavi.api.programoption.ProgramOptionService.GetProgramOption:output_type -> mtechnavi.api.programoption.ProgramOption
	1,  // 28: mtechnavi.api.programoption.ProgramOptionService.UpdateProgramOption:output_type -> mtechnavi.api.programoption.ProgramOption
	24, // 29: mtechnavi.api.programoption.ProgramOptionService.DeleteProgramOption:output_type -> google.protobuf.Empty
	9,  // 30: mtechnavi.api.programoption.ProgramOptionService.ImportProgramOptions:output_type -> mtechnavi.api.programoption.ImportProgramOptionsResponse
	11, // 31: mtechnavi.api.programoption.ProgramOptionService.ExportProgramOptions:output_type -> mtechnavi.api.programoption.ExportProgramOptionsResponse
	13, // 32: mtechnavi.api.programoption.ProgramOptionService.ListProgramOptionFormats:output_type -> mtechnavi.api.programoption.ListProgramOptionFormatsResponse
	15, // 33: mtechnavi.api.programoption.ProgramOptionService.MaintenanceProgramOptionFormats:output_type -> mtechnavi.api.programoption.MaintenanceProgramOptionsResponse
	17, // 34: mtechnavi.api.programoption.ProgramOptionService.ProvisionProgramOptions:output_type -> mtechnavi.api.programoption.ProvisionProgramOptionsResponse
	25, // [25:35] is the sub-list for method output_type
	15, // [15:25] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_programoption_proto_init() }
func file_programoption_proto_init() {
	if File_programoption_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_programoption_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProgramOptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProgramOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProgramOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramOptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProgramOptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProgramOptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportProgramOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportProgramOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportProgramOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportProgramOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProgramOptionFormatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProgramOptionFormatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceProgramOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceProgramOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionProgramOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionProgramOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_programoption_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramOption_DisplayNameLang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_programoption_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_programoption_proto_goTypes,
		DependencyIndexes: file_programoption_proto_depIdxs,
		EnumInfos:         file_programoption_proto_enumTypes,
		MessageInfos:      file_programoption_proto_msgTypes,
	}.Build()
	File_programoption_proto = out.File
	file_programoption_proto_rawDesc = nil
	file_programoption_proto_goTypes = nil
	file_programoption_proto_depIdxs = nil
}
