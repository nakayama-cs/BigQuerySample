// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: tenantprovision_batch.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	protobuf "mtechnavi/idp/protobuf"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskCreateTenentRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// テナント申請ID
	TenantRequestId string `protobuf:"bytes,9,opt,name=tenant_request_id,json=tenantRequestId,proto3" json:"tenant_request_id,omitempty"`
	// 招待テナント情報
	// Implementation Note::
	// tenant_code/domain/display_nameを設定
	Tenant *protobuf.Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// 招待テナント管理者情報
	// Implementation Note::
	// email/display_nameを設定
	TenantAdmin *protobuf.User `protobuf:"bytes,2,opt,name=tenant_admin,json=tenantAdmin,proto3" json:"tenant_admin,omitempty"`
	// テナントに組み込むライセンスの種類
	LicenseLabels []string `protobuf:"bytes,3,rep,name=license_labels,json=licenseLabels,proto3" json:"license_labels,omitempty"`
	// 招待日時
	InvitedAt int64 `protobuf:"varint,4,opt,name=invited_at,json=invitedAt,proto3" json:"invited_at,omitempty"`
	// 招待元テナントID
	InviteBy string `protobuf:"bytes,5,opt,name=invite_by,json=inviteBy,proto3" json:"invite_by,omitempty"`
	// 招待元取引先管理ID
	BusinessUnitManagementId string `protobuf:"bytes,6,opt,name=business_unit_management_id,json=businessUnitManagementId,proto3" json:"business_unit_management_id,omitempty"`
	// 招待個別メッセージ
	IndividualMessage string `protobuf:"bytes,7,opt,name=individual_message,json=individualMessage,proto3" json:"individual_message,omitempty"`
	// 招待問い合わせ先メッセージ
	ContactInformationMessage string `protobuf:"bytes,8,opt,name=contact_information_message,json=contactInformationMessage,proto3" json:"contact_information_message,omitempty"`
}

func (x *TaskCreateTenentRequestRequest) Reset() {
	*x = TaskCreateTenentRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenantprovision_batch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCreateTenentRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCreateTenentRequestRequest) ProtoMessage() {}

func (x *TaskCreateTenentRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenantprovision_batch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCreateTenentRequestRequest.ProtoReflect.Descriptor instead.
func (*TaskCreateTenentRequestRequest) Descriptor() ([]byte, []int) {
	return file_tenantprovision_batch_proto_rawDescGZIP(), []int{0}
}

func (x *TaskCreateTenentRequestRequest) GetTenantRequestId() string {
	if x != nil {
		return x.TenantRequestId
	}
	return ""
}

func (x *TaskCreateTenentRequestRequest) GetTenant() *protobuf.Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *TaskCreateTenentRequestRequest) GetTenantAdmin() *protobuf.User {
	if x != nil {
		return x.TenantAdmin
	}
	return nil
}

func (x *TaskCreateTenentRequestRequest) GetLicenseLabels() []string {
	if x != nil {
		return x.LicenseLabels
	}
	return nil
}

func (x *TaskCreateTenentRequestRequest) GetInvitedAt() int64 {
	if x != nil {
		return x.InvitedAt
	}
	return 0
}

func (x *TaskCreateTenentRequestRequest) GetInviteBy() string {
	if x != nil {
		return x.InviteBy
	}
	return ""
}

func (x *TaskCreateTenentRequestRequest) GetBusinessUnitManagementId() string {
	if x != nil {
		return x.BusinessUnitManagementId
	}
	return ""
}

func (x *TaskCreateTenentRequestRequest) GetIndividualMessage() string {
	if x != nil {
		return x.IndividualMessage
	}
	return ""
}

func (x *TaskCreateTenentRequestRequest) GetContactInformationMessage() string {
	if x != nil {
		return x.ContactInformationMessage
	}
	return ""
}

var File_tenantprovision_batch_proto protoreflect.FileDescriptor

var file_tenantprovision_batch_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x0e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x03, 0x0a, 0x1e, 0x54, 0x61,
	0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x64, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42, 0x79, 0x12, 0x3d, 0x0a, 0x1b, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x18, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x64,
	0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x8f, 0x01, 0x0a, 0x1b, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x70, 0x0a, 0x17, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x24, 0x5a, 0x22, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tenantprovision_batch_proto_rawDescOnce sync.Once
	file_tenantprovision_batch_proto_rawDescData = file_tenantprovision_batch_proto_rawDesc
)

func file_tenantprovision_batch_proto_rawDescGZIP() []byte {
	file_tenantprovision_batch_proto_rawDescOnce.Do(func() {
		file_tenantprovision_batch_proto_rawDescData = protoimpl.X.CompressGZIP(file_tenantprovision_batch_proto_rawDescData)
	})
	return file_tenantprovision_batch_proto_rawDescData
}

var file_tenantprovision_batch_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tenantprovision_batch_proto_goTypes = []interface{}{
	(*TaskCreateTenentRequestRequest)(nil), // 0: mtechnavi.api.tenantprovision.TaskCreateTenentRequestRequest
	(*protobuf.Tenant)(nil),                // 1: mtechnavi.api.idp.Tenant
	(*protobuf.User)(nil),                  // 2: mtechnavi.api.idp.User
	(*emptypb.Empty)(nil),                  // 3: google.protobuf.Empty
}
var file_tenantprovision_batch_proto_depIdxs = []int32{
	1, // 0: mtechnavi.api.tenantprovision.TaskCreateTenentRequestRequest.tenant:type_name -> mtechnavi.api.idp.Tenant
	2, // 1: mtechnavi.api.tenantprovision.TaskCreateTenentRequestRequest.tenant_admin:type_name -> mtechnavi.api.idp.User
	0, // 2: mtechnavi.api.tenantprovision.tenantprovisionBatchService.TaskCreateTenentRequest:input_type -> mtechnavi.api.tenantprovision.TaskCreateTenentRequestRequest
	3, // 3: mtechnavi.api.tenantprovision.tenantprovisionBatchService.TaskCreateTenentRequest:output_type -> google.protobuf.Empty
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tenantprovision_batch_proto_init() }
func file_tenantprovision_batch_proto_init() {
	if File_tenantprovision_batch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tenantprovision_batch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCreateTenentRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tenantprovision_batch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tenantprovision_batch_proto_goTypes,
		DependencyIndexes: file_tenantprovision_batch_proto_depIdxs,
		MessageInfos:      file_tenantprovision_batch_proto_msgTypes,
	}.Build()
	File_tenantprovision_batch_proto = out.File
	file_tenantprovision_batch_proto_rawDesc = nil
	file_tenantprovision_batch_proto_goTypes = nil
	file_tenantprovision_batch_proto_depIdxs = nil
}
