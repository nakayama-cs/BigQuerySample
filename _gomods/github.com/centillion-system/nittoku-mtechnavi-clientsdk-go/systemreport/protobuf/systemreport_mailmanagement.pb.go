// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: systemreport_mailmanagement.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protobuf "mtechnavi/sharelib/protobuf"
	_ "mtechnavi/sharelib/protobuf/mtn"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 日次メール管理データ
type DailyMailManagement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 日次メール管理ID
	DailyMailManagementId string `protobuf:"bytes,1,opt,name=daily_mail_management_id,json=dailyMailManagementId,proto3" json:"daily_mail_management_id,omitempty"`
	// 処理グループID
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// アカウントID
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 通知内容
	NotificationSettings []*protobuf.NotificationSetting `protobuf:"bytes,4,rep,name=notification_settings,json=notificationSettings,proto3" json:"notification_settings,omitempty"`
	CreatedAt            int64                           `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int64                           `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt            int64                           `protobuf:"varint,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *DailyMailManagement) Reset() {
	*x = DailyMailManagement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systemreport_mailmanagement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyMailManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyMailManagement) ProtoMessage() {}

func (x *DailyMailManagement) ProtoReflect() protoreflect.Message {
	mi := &file_systemreport_mailmanagement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyMailManagement.ProtoReflect.Descriptor instead.
func (*DailyMailManagement) Descriptor() ([]byte, []int) {
	return file_systemreport_mailmanagement_proto_rawDescGZIP(), []int{0}
}

func (x *DailyMailManagement) GetDailyMailManagementId() string {
	if x != nil {
		return x.DailyMailManagementId
	}
	return ""
}

func (x *DailyMailManagement) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DailyMailManagement) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DailyMailManagement) GetNotificationSettings() []*protobuf.NotificationSetting {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

func (x *DailyMailManagement) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DailyMailManagement) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *DailyMailManagement) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// 単発メール管理データ
type OneOffMailManagement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 単発メール管理ID
	OneOffMailManagementId string `protobuf:"bytes,1,opt,name=one_off_mail_management_id,json=oneOffMailManagementId,proto3" json:"one_off_mail_management_id,omitempty"`
	// アカウントID
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt int64  `protobuf:"varint,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *OneOffMailManagement) Reset() {
	*x = OneOffMailManagement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systemreport_mailmanagement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOffMailManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOffMailManagement) ProtoMessage() {}

func (x *OneOffMailManagement) ProtoReflect() protoreflect.Message {
	mi := &file_systemreport_mailmanagement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOffMailManagement.ProtoReflect.Descriptor instead.
func (*OneOffMailManagement) Descriptor() ([]byte, []int) {
	return file_systemreport_mailmanagement_proto_rawDescGZIP(), []int{1}
}

func (x *OneOffMailManagement) GetOneOffMailManagementId() string {
	if x != nil {
		return x.OneOffMailManagementId
	}
	return ""
}

func (x *OneOffMailManagement) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OneOffMailManagement) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OneOffMailManagement) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *OneOffMailManagement) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

var File_systemreport_mailmanagement_proto protoreflect.FileDescriptor

var file_systemreport_mailmanagement_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d,
	0x61, 0x69, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a,
	0x0f, 0x6d, 0x74, 0x6e, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x02, 0x0a, 0x13,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x61, 0x69, 0x6c,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xd2, 0xb8, 0x02, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xd2, 0xb8, 0x02, 0x0b,
	0x0a, 0x09, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x14, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x4d,
	0x61, 0x69, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a,
	0x1a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xd2, 0xb8, 0x02, 0x0b,
	0x0a, 0x09, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x42, 0x21, 0x5a, 0x1f, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_systemreport_mailmanagement_proto_rawDescOnce sync.Once
	file_systemreport_mailmanagement_proto_rawDescData = file_systemreport_mailmanagement_proto_rawDesc
)

func file_systemreport_mailmanagement_proto_rawDescGZIP() []byte {
	file_systemreport_mailmanagement_proto_rawDescOnce.Do(func() {
		file_systemreport_mailmanagement_proto_rawDescData = protoimpl.X.CompressGZIP(file_systemreport_mailmanagement_proto_rawDescData)
	})
	return file_systemreport_mailmanagement_proto_rawDescData
}

var file_systemreport_mailmanagement_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_systemreport_mailmanagement_proto_goTypes = []interface{}{
	(*DailyMailManagement)(nil),          // 0: mtechnavi.api.systemreport.DailyMailManagement
	(*OneOffMailManagement)(nil),         // 1: mtechnavi.api.systemreport.OneOffMailManagement
	(*protobuf.NotificationSetting)(nil), // 2: sharelib.NotificationSetting
}
var file_systemreport_mailmanagement_proto_depIdxs = []int32{
	2, // 0: mtechnavi.api.systemreport.DailyMailManagement.notification_settings:type_name -> sharelib.NotificationSetting
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_systemreport_mailmanagement_proto_init() }
func file_systemreport_mailmanagement_proto_init() {
	if File_systemreport_mailmanagement_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_systemreport_mailmanagement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyMailManagement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systemreport_mailmanagement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOffMailManagement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_systemreport_mailmanagement_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_systemreport_mailmanagement_proto_goTypes,
		DependencyIndexes: file_systemreport_mailmanagement_proto_depIdxs,
		MessageInfos:      file_systemreport_mailmanagement_proto_msgTypes,
	}.Build()
	File_systemreport_mailmanagement_proto = out.File
	file_systemreport_mailmanagement_proto_rawDesc = nil
	file_systemreport_mailmanagement_proto_goTypes = nil
	file_systemreport_mailmanagement_proto_depIdxs = nil
}
