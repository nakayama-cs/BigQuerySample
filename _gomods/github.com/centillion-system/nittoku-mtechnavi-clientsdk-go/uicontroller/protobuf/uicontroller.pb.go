// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: uicontroller.proto

package protobuf

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PresetMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// プリセットメニューID
	PresetMenuId string `protobuf:"bytes,1,opt,name=preset_menu_id,json=presetMenuId,proto3" json:"preset_menu_id,omitempty"`
	// 親プリセットメニューID
	ParentPresetMenuId string `protobuf:"bytes,2,opt,name=parent_preset_menu_id,json=parentPresetMenuId,proto3" json:"parent_preset_menu_id,omitempty"`
	// Types that are assignable to Value:
	//
	//	*PresetMenu_Container
	//	*PresetMenu_Item
	Value isPresetMenu_Value `protobuf_oneof:"value"`
	// 削除日
	DeletedAt int64 `protobuf:"varint,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// 作成日
	CreatedAt int64 `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日
	UpdatedAt int64 `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PresetMenu) Reset() {
	*x = PresetMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetMenu) ProtoMessage() {}

func (x *PresetMenu) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetMenu.ProtoReflect.Descriptor instead.
func (*PresetMenu) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{0}
}

func (x *PresetMenu) GetPresetMenuId() string {
	if x != nil {
		return x.PresetMenuId
	}
	return ""
}

func (x *PresetMenu) GetParentPresetMenuId() string {
	if x != nil {
		return x.ParentPresetMenuId
	}
	return ""
}

func (m *PresetMenu) GetValue() isPresetMenu_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *PresetMenu) GetContainer() *PresetMenuContainer {
	if x, ok := x.GetValue().(*PresetMenu_Container); ok {
		return x.Container
	}
	return nil
}

func (x *PresetMenu) GetItem() *PresetMenuItem {
	if x, ok := x.GetValue().(*PresetMenu_Item); ok {
		return x.Item
	}
	return nil
}

func (x *PresetMenu) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *PresetMenu) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PresetMenu) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type isPresetMenu_Value interface {
	isPresetMenu_Value()
}

type PresetMenu_Container struct {
	// プリセットメニューフォルダ
	Container *PresetMenuContainer `protobuf:"bytes,3,opt,name=container,proto3,oneof"`
}

type PresetMenu_Item struct {
	// プリセットメニュー
	Item *PresetMenuItem `protobuf:"bytes,4,opt,name=item,proto3,oneof"`
}

func (*PresetMenu_Container) isPresetMenu_Value() {}

func (*PresetMenu_Item) isPresetMenu_Value() {}

type PresetMenuContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// プリセットメニューフォルダ表示名
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// 子プリセットメニューID
	// （フォルダ配下に存在するプリセットメニューのID）
	ChildrenPresetMenuIds []string `protobuf:"bytes,2,rep,name=children_preset_menu_ids,json=childrenPresetMenuIds,proto3" json:"children_preset_menu_ids,omitempty"`
}

func (x *PresetMenuContainer) Reset() {
	*x = PresetMenuContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetMenuContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetMenuContainer) ProtoMessage() {}

func (x *PresetMenuContainer) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetMenuContainer.ProtoReflect.Descriptor instead.
func (*PresetMenuContainer) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{1}
}

func (x *PresetMenuContainer) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PresetMenuContainer) GetChildrenPresetMenuIds() []string {
	if x != nil {
		return x.ChildrenPresetMenuIds
	}
	return nil
}

type PresetMenuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// プリセットID
	PresetId string `protobuf:"bytes,1,opt,name=preset_id,json=presetId,proto3" json:"preset_id,omitempty"`
}

func (x *PresetMenuItem) Reset() {
	*x = PresetMenuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetMenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetMenuItem) ProtoMessage() {}

func (x *PresetMenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetMenuItem.ProtoReflect.Descriptor instead.
func (*PresetMenuItem) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{2}
}

func (x *PresetMenuItem) GetPresetId() string {
	if x != nil {
		return x.PresetId
	}
	return ""
}

type Preset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// プリセットID
	PresetId string `protobuf:"bytes,1,opt,name=preset_id,json=presetId,proto3" json:"preset_id,omitempty"`
	// プリセット表示名
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// ベース画面ID
	ViewId string `protobuf:"bytes,3,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	// プリセット使用可能ユーザグループコード
	UserGroupCodes []string `protobuf:"bytes,4,rep,name=user_group_codes,json=userGroupCodes,proto3" json:"user_group_codes,omitempty"`
	// プリセットデータ
	InternalData []byte `protobuf:"bytes,5,opt,name=internal_data,json=internalData,proto3" json:"internal_data,omitempty"`
	// 削除日
	DeletedAt int64 `protobuf:"varint,6,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// 作成日
	CreatedAt int64 `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日
	UpdatedAt int64 `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Preset) Reset() {
	*x = Preset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Preset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Preset) ProtoMessage() {}

func (x *Preset) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Preset.ProtoReflect.Descriptor instead.
func (*Preset) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{3}
}

func (x *Preset) GetPresetId() string {
	if x != nil {
		return x.PresetId
	}
	return ""
}

func (x *Preset) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Preset) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *Preset) GetUserGroupCodes() []string {
	if x != nil {
		return x.UserGroupCodes
	}
	return nil
}

func (x *Preset) GetInternalData() []byte {
	if x != nil {
		return x.InternalData
	}
	return nil
}

func (x *Preset) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *Preset) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Preset) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreatePresetMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 作成するプリセットメニュー
	PresetMenu *PresetMenu `protobuf:"bytes,1,opt,name=preset_menu,json=presetMenu,proto3" json:"preset_menu,omitempty"`
}

func (x *CreatePresetMenuRequest) Reset() {
	*x = CreatePresetMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePresetMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePresetMenuRequest) ProtoMessage() {}

func (x *CreatePresetMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePresetMenuRequest.ProtoReflect.Descriptor instead.
func (*CreatePresetMenuRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePresetMenuRequest) GetPresetMenu() *PresetMenu {
	if x != nil {
		return x.PresetMenu
	}
	return nil
}

type ListPresetMenusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPresetMenusRequest) Reset() {
	*x = ListPresetMenusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPresetMenusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPresetMenusRequest) ProtoMessage() {}

func (x *ListPresetMenusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPresetMenusRequest.ProtoReflect.Descriptor instead.
func (*ListPresetMenusRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{5}
}

type ListPresetMenusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取得したプリセットメニュー数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 取得したプリセットメニューデータ
	Items []*PresetMenu `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListPresetMenusResponse) Reset() {
	*x = ListPresetMenusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPresetMenusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPresetMenusResponse) ProtoMessage() {}

func (x *ListPresetMenusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPresetMenusResponse.ProtoReflect.Descriptor instead.
func (*ListPresetMenusResponse) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{6}
}

func (x *ListPresetMenusResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPresetMenusResponse) GetItems() []*PresetMenu {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetPresetMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取得するプリセットメニューID
	PresetMenuId string `protobuf:"bytes,1,opt,name=preset_menu_id,json=presetMenuId,proto3" json:"preset_menu_id,omitempty"`
}

func (x *GetPresetMenuRequest) Reset() {
	*x = GetPresetMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPresetMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresetMenuRequest) ProtoMessage() {}

func (x *GetPresetMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresetMenuRequest.ProtoReflect.Descriptor instead.
func (*GetPresetMenuRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{7}
}

func (x *GetPresetMenuRequest) GetPresetMenuId() string {
	if x != nil {
		return x.PresetMenuId
	}
	return ""
}

type UpdatePresetMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 更新するプリセットメニューデータ
	PresetMenu *PresetMenu `protobuf:"bytes,1,opt,name=preset_menu,json=presetMenu,proto3" json:"preset_menu,omitempty"`
}

func (x *UpdatePresetMenuRequest) Reset() {
	*x = UpdatePresetMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePresetMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePresetMenuRequest) ProtoMessage() {}

func (x *UpdatePresetMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePresetMenuRequest.ProtoReflect.Descriptor instead.
func (*UpdatePresetMenuRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePresetMenuRequest) GetPresetMenu() *PresetMenu {
	if x != nil {
		return x.PresetMenu
	}
	return nil
}

type DeletePresetMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 削除するプリセットメニューデータ
	PresetMenu *PresetMenu `protobuf:"bytes,1,opt,name=preset_menu,json=presetMenu,proto3" json:"preset_menu,omitempty"`
}

func (x *DeletePresetMenuRequest) Reset() {
	*x = DeletePresetMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePresetMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePresetMenuRequest) ProtoMessage() {}

func (x *DeletePresetMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePresetMenuRequest.ProtoReflect.Descriptor instead.
func (*DeletePresetMenuRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePresetMenuRequest) GetPresetMenu() *PresetMenu {
	if x != nil {
		return x.PresetMenu
	}
	return nil
}

type CreatePresetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 作成するプリセットデータ
	Preset *Preset `protobuf:"bytes,1,opt,name=preset,proto3" json:"preset,omitempty"`
}

func (x *CreatePresetRequest) Reset() {
	*x = CreatePresetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePresetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePresetRequest) ProtoMessage() {}

func (x *CreatePresetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePresetRequest.ProtoReflect.Descriptor instead.
func (*CreatePresetRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePresetRequest) GetPreset() *Preset {
	if x != nil {
		return x.Preset
	}
	return nil
}

type ListPresetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPresetsRequest) Reset() {
	*x = ListPresetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPresetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPresetsRequest) ProtoMessage() {}

func (x *ListPresetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPresetsRequest.ProtoReflect.Descriptor instead.
func (*ListPresetsRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{11}
}

type ListPresetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取得したプリセットデータ数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 取得したプリセットデータ
	Items []*Preset `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListPresetsResponse) Reset() {
	*x = ListPresetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPresetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPresetsResponse) ProtoMessage() {}

func (x *ListPresetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPresetsResponse.ProtoReflect.Descriptor instead.
func (*ListPresetsResponse) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{12}
}

func (x *ListPresetsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPresetsResponse) GetItems() []*Preset {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetPresetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取得するプリセットID
	PresetId string `protobuf:"bytes,1,opt,name=preset_id,json=presetId,proto3" json:"preset_id,omitempty"`
}

func (x *GetPresetRequest) Reset() {
	*x = GetPresetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPresetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresetRequest) ProtoMessage() {}

func (x *GetPresetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresetRequest.ProtoReflect.Descriptor instead.
func (*GetPresetRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{13}
}

func (x *GetPresetRequest) GetPresetId() string {
	if x != nil {
		return x.PresetId
	}
	return ""
}

type UpdatePresetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 更新するプリセットデータ
	Preset *Preset `protobuf:"bytes,1,opt,name=preset,proto3" json:"preset,omitempty"`
}

func (x *UpdatePresetRequest) Reset() {
	*x = UpdatePresetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePresetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePresetRequest) ProtoMessage() {}

func (x *UpdatePresetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePresetRequest.ProtoReflect.Descriptor instead.
func (*UpdatePresetRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePresetRequest) GetPreset() *Preset {
	if x != nil {
		return x.Preset
	}
	return nil
}

type DeletePresetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 削除するプリセットデータ
	Preset *Preset `protobuf:"bytes,1,opt,name=preset,proto3" json:"preset,omitempty"`
}

func (x *DeletePresetRequest) Reset() {
	*x = DeletePresetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uicontroller_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePresetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePresetRequest) ProtoMessage() {}

func (x *DeletePresetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uicontroller_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePresetRequest.ProtoReflect.Descriptor instead.
func (*DeletePresetRequest) Descriptor() ([]byte, []int) {
	return file_uicontroller_proto_rawDescGZIP(), []int{15}
}

func (x *DeletePresetRequest) GetPreset() *Preset {
	if x != nil {
		return x.Preset
	}
	return nil
}

var File_uicontroller_proto protoreflect.FileDescriptor

var file_uicontroller_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x02, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x4f,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x40, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x7a, 0x0a, 0x13,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x18, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x15, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x6c, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0b, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x22, 0x18,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x51, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x22, 0x6c, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51,
	0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e,
	0x75, 0x22, 0x5b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x14,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x5b, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x32, 0xaa, 0x08, 0x0a, 0x0c, 0x55, 0x69, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x33, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x7a, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x32, 0x2e, 0x6d, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x30, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e,
	0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12,
	0x6f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x33, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x12, 0x5f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x33, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x63, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x12, 0x2f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x6e, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x63, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2f, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x57, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2f, 0x2e, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x69, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x21, 0x5a, 0x1f, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2f, 0x75, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uicontroller_proto_rawDescOnce sync.Once
	file_uicontroller_proto_rawDescData = file_uicontroller_proto_rawDesc
)

func file_uicontroller_proto_rawDescGZIP() []byte {
	file_uicontroller_proto_rawDescOnce.Do(func() {
		file_uicontroller_proto_rawDescData = protoimpl.X.CompressGZIP(file_uicontroller_proto_rawDescData)
	})
	return file_uicontroller_proto_rawDescData
}

var file_uicontroller_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_uicontroller_proto_goTypes = []interface{}{
	(*PresetMenu)(nil),              // 0: mtechnavi.api.uicontroller.PresetMenu
	(*PresetMenuContainer)(nil),     // 1: mtechnavi.api.uicontroller.PresetMenuContainer
	(*PresetMenuItem)(nil),          // 2: mtechnavi.api.uicontroller.PresetMenuItem
	(*Preset)(nil),                  // 3: mtechnavi.api.uicontroller.Preset
	(*CreatePresetMenuRequest)(nil), // 4: mtechnavi.api.uicontroller.CreatePresetMenuRequest
	(*ListPresetMenusRequest)(nil),  // 5: mtechnavi.api.uicontroller.ListPresetMenusRequest
	(*ListPresetMenusResponse)(nil), // 6: mtechnavi.api.uicontroller.ListPresetMenusResponse
	(*GetPresetMenuRequest)(nil),    // 7: mtechnavi.api.uicontroller.GetPresetMenuRequest
	(*UpdatePresetMenuRequest)(nil), // 8: mtechnavi.api.uicontroller.UpdatePresetMenuRequest
	(*DeletePresetMenuRequest)(nil), // 9: mtechnavi.api.uicontroller.DeletePresetMenuRequest
	(*CreatePresetRequest)(nil),     // 10: mtechnavi.api.uicontroller.CreatePresetRequest
	(*ListPresetsRequest)(nil),      // 11: mtechnavi.api.uicontroller.ListPresetsRequest
	(*ListPresetsResponse)(nil),     // 12: mtechnavi.api.uicontroller.ListPresetsResponse
	(*GetPresetRequest)(nil),        // 13: mtechnavi.api.uicontroller.GetPresetRequest
	(*UpdatePresetRequest)(nil),     // 14: mtechnavi.api.uicontroller.UpdatePresetRequest
	(*DeletePresetRequest)(nil),     // 15: mtechnavi.api.uicontroller.DeletePresetRequest
	(*emptypb.Empty)(nil),           // 16: google.protobuf.Empty
}
var file_uicontroller_proto_depIdxs = []int32{
	1,  // 0: mtechnavi.api.uicontroller.PresetMenu.container:type_name -> mtechnavi.api.uicontroller.PresetMenuContainer
	2,  // 1: mtechnavi.api.uicontroller.PresetMenu.item:type_name -> mtechnavi.api.uicontroller.PresetMenuItem
	0,  // 2: mtechnavi.api.uicontroller.CreatePresetMenuRequest.preset_menu:type_name -> mtechnavi.api.uicontroller.PresetMenu
	0,  // 3: mtechnavi.api.uicontroller.ListPresetMenusResponse.items:type_name -> mtechnavi.api.uicontroller.PresetMenu
	0,  // 4: mtechnavi.api.uicontroller.UpdatePresetMenuRequest.preset_menu:type_name -> mtechnavi.api.uicontroller.PresetMenu
	0,  // 5: mtechnavi.api.uicontroller.DeletePresetMenuRequest.preset_menu:type_name -> mtechnavi.api.uicontroller.PresetMenu
	3,  // 6: mtechnavi.api.uicontroller.CreatePresetRequest.preset:type_name -> mtechnavi.api.uicontroller.Preset
	3,  // 7: mtechnavi.api.uicontroller.ListPresetsResponse.items:type_name -> mtechnavi.api.uicontroller.Preset
	3,  // 8: mtechnavi.api.uicontroller.UpdatePresetRequest.preset:type_name -> mtechnavi.api.uicontroller.Preset
	3,  // 9: mtechnavi.api.uicontroller.DeletePresetRequest.preset:type_name -> mtechnavi.api.uicontroller.Preset
	4,  // 10: mtechnavi.api.uicontroller.UiController.CreatePresetMenu:input_type -> mtechnavi.api.uicontroller.CreatePresetMenuRequest
	5,  // 11: mtechnavi.api.uicontroller.UiController.ListPresetMenus:input_type -> mtechnavi.api.uicontroller.ListPresetMenusRequest
	7,  // 12: mtechnavi.api.uicontroller.UiController.GetPresetMenu:input_type -> mtechnavi.api.uicontroller.GetPresetMenuRequest
	8,  // 13: mtechnavi.api.uicontroller.UiController.UpdatePresetMenu:input_type -> mtechnavi.api.uicontroller.UpdatePresetMenuRequest
	9,  // 14: mtechnavi.api.uicontroller.UiController.DeletePresetMenu:input_type -> mtechnavi.api.uicontroller.DeletePresetMenuRequest
	10, // 15: mtechnavi.api.uicontroller.UiController.CreatePreset:input_type -> mtechnavi.api.uicontroller.CreatePresetRequest
	11, // 16: mtechnavi.api.uicontroller.UiController.ListPresets:input_type -> mtechnavi.api.uicontroller.ListPresetsRequest
	13, // 17: mtechnavi.api.uicontroller.UiController.GetPreset:input_type -> mtechnavi.api.uicontroller.GetPresetRequest
	14, // 18: mtechnavi.api.uicontroller.UiController.UpdatePreset:input_type -> mtechnavi.api.uicontroller.UpdatePresetRequest
	15, // 19: mtechnavi.api.uicontroller.UiController.DeletePreset:input_type -> mtechnavi.api.uicontroller.DeletePresetRequest
	0,  // 20: mtechnavi.api.uicontroller.UiController.CreatePresetMenu:output_type -> mtechnavi.api.uicontroller.PresetMenu
	6,  // 21: mtechnavi.api.uicontroller.UiController.ListPresetMenus:output_type -> mtechnavi.api.uicontroller.ListPresetMenusResponse
	0,  // 22: mtechnavi.api.uicontroller.UiController.GetPresetMenu:output_type -> mtechnavi.api.uicontroller.PresetMenu
	0,  // 23: mtechnavi.api.uicontroller.UiController.UpdatePresetMenu:output_type -> mtechnavi.api.uicontroller.PresetMenu
	16, // 24: mtechnavi.api.uicontroller.UiController.DeletePresetMenu:output_type -> google.protobuf.Empty
	3,  // 25: mtechnavi.api.uicontroller.UiController.CreatePreset:output_type -> mtechnavi.api.uicontroller.Preset
	12, // 26: mtechnavi.api.uicontroller.UiController.ListPresets:output_type -> mtechnavi.api.uicontroller.ListPresetsResponse
	3,  // 27: mtechnavi.api.uicontroller.UiController.GetPreset:output_type -> mtechnavi.api.uicontroller.Preset
	3,  // 28: mtechnavi.api.uicontroller.UiController.UpdatePreset:output_type -> mtechnavi.api.uicontroller.Preset
	16, // 29: mtechnavi.api.uicontroller.UiController.DeletePreset:output_type -> google.protobuf.Empty
	20, // [20:30] is the sub-list for method output_type
	10, // [10:20] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_uicontroller_proto_init() }
func file_uicontroller_proto_init() {
	if File_uicontroller_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uicontroller_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresetMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresetMenuContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresetMenuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Preset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePresetMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPresetMenusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPresetMenusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPresetMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePresetMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePresetMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePresetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPresetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPresetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPresetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePresetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uicontroller_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePresetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_uicontroller_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PresetMenu_Container)(nil),
		(*PresetMenu_Item)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uicontroller_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uicontroller_proto_goTypes,
		DependencyIndexes: file_uicontroller_proto_depIdxs,
		MessageInfos:      file_uicontroller_proto_msgTypes,
	}.Build()
	File_uicontroller_proto = out.File
	file_uicontroller_proto_rawDesc = nil
	file_uicontroller_proto_goTypes = nil
	file_uicontroller_proto_depIdxs = nil
}
