// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: worktaskcatalog.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protobuf "mtechnavi/sharelib/protobuf"
	_ "mtechnavi/sharelib/protobuf/mtn"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 指図案件カタログマスタ
type WorkTaskCatalog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指図案件カタログID
	WorkTaskCatalogId string `protobuf:"bytes,1,opt,name=work_task_catalog_id,json=workTaskCatalogId,proto3" json:"work_task_catalog_id,omitempty"`
	// readonly 指図案件カタログコード
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// 指図案件カタログ名
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// 指図案件カタログ分類
	Category *protobuf.NameOption `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// 作業依頼内容
	Contents string `protobuf:"bytes,5,opt,name=contents,proto3" json:"contents,omitempty"`
	// 承認必要
	Approval bool `protobuf:"varint,6,opt,name=approval,proto3" json:"approval,omitempty"`
	// 管理部門
	ManagementOrganization *protobuf.ComponentUnitReference `protobuf:"bytes,7,opt,name=management_organization,json=managementOrganization,proto3" json:"management_organization,omitempty"`
	// 作業部門
	WorkOrganization *protobuf.ComponentUnitReference `protobuf:"bytes,8,opt,name=work_organization,json=workOrganization,proto3" json:"work_organization,omitempty"`
	// 共通ファイルリスト
	CommonAttachments []*protobuf.Attachment `protobuf:"bytes,9,rep,name=common_attachments,json=commonAttachments,proto3" json:"common_attachments,omitempty"`
	// readonly 最終更新日時
	WorkTaskCatalogCatalogUpdatedAt int64 `protobuf:"varint,10,opt,name=work_task_catalog_catalog_updated_at,json=workTaskCatalogCatalogUpdatedAt,proto3" json:"work_task_catalog_catalog_updated_at,omitempty"`
	// readonly 最終更新ユーザー
	WorkTaskCatalogCatalogUpdatedBy *protobuf.EmbeddedUser `protobuf:"bytes,11,opt,name=work_task_catalog_catalog_updated_by,json=workTaskCatalogCatalogUpdatedBy,proto3" json:"work_task_catalog_catalog_updated_by,omitempty"`
	// created_at
	CreatedAt int64 `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// updated_at
	UpdatedAt int64 `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// deleted_at
	DeletedAt int64 `protobuf:"varint,14,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *WorkTaskCatalog) Reset() {
	*x = WorkTaskCatalog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktaskcatalog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkTaskCatalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkTaskCatalog) ProtoMessage() {}

func (x *WorkTaskCatalog) ProtoReflect() protoreflect.Message {
	mi := &file_worktaskcatalog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkTaskCatalog.ProtoReflect.Descriptor instead.
func (*WorkTaskCatalog) Descriptor() ([]byte, []int) {
	return file_worktaskcatalog_proto_rawDescGZIP(), []int{0}
}

func (x *WorkTaskCatalog) GetWorkTaskCatalogId() string {
	if x != nil {
		return x.WorkTaskCatalogId
	}
	return ""
}

func (x *WorkTaskCatalog) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WorkTaskCatalog) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *WorkTaskCatalog) GetCategory() *protobuf.NameOption {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *WorkTaskCatalog) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *WorkTaskCatalog) GetApproval() bool {
	if x != nil {
		return x.Approval
	}
	return false
}

func (x *WorkTaskCatalog) GetManagementOrganization() *protobuf.ComponentUnitReference {
	if x != nil {
		return x.ManagementOrganization
	}
	return nil
}

func (x *WorkTaskCatalog) GetWorkOrganization() *protobuf.ComponentUnitReference {
	if x != nil {
		return x.WorkOrganization
	}
	return nil
}

func (x *WorkTaskCatalog) GetCommonAttachments() []*protobuf.Attachment {
	if x != nil {
		return x.CommonAttachments
	}
	return nil
}

func (x *WorkTaskCatalog) GetWorkTaskCatalogCatalogUpdatedAt() int64 {
	if x != nil {
		return x.WorkTaskCatalogCatalogUpdatedAt
	}
	return 0
}

func (x *WorkTaskCatalog) GetWorkTaskCatalogCatalogUpdatedBy() *protobuf.EmbeddedUser {
	if x != nil {
		return x.WorkTaskCatalogCatalogUpdatedBy
	}
	return nil
}

func (x *WorkTaskCatalog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WorkTaskCatalog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WorkTaskCatalog) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

var File_worktaskcatalog_proto protoreflect.FileDescriptor

var file_worktaskcatalog_proto_rawDesc = []byte{
	0x0a, 0x15, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x61, 0x73, 0x6b, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61,
	0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x61, 0x73, 0x6b, 0x1a,
	0x0f, 0x6d, 0x74, 0x6e, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x05, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x61,
	0x73, 0x6b, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x61, 0x73,
	0x6b, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xd2, 0xb8, 0x02, 0x08, 0x0a, 0x06,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x59, 0x0a, 0x17, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x16, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x24, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x65, 0x0a, 0x24, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62,
	0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x1f, 0x77,
	0x6f, 0x72, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x6d,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x61, 0x73,
	0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_worktaskcatalog_proto_rawDescOnce sync.Once
	file_worktaskcatalog_proto_rawDescData = file_worktaskcatalog_proto_rawDesc
)

func file_worktaskcatalog_proto_rawDescGZIP() []byte {
	file_worktaskcatalog_proto_rawDescOnce.Do(func() {
		file_worktaskcatalog_proto_rawDescData = protoimpl.X.CompressGZIP(file_worktaskcatalog_proto_rawDescData)
	})
	return file_worktaskcatalog_proto_rawDescData
}

var file_worktaskcatalog_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_worktaskcatalog_proto_goTypes = []interface{}{
	(*WorkTaskCatalog)(nil),                 // 0: mtechnavi.api.worktask.WorkTaskCatalog
	(*protobuf.NameOption)(nil),             // 1: sharelib.NameOption
	(*protobuf.ComponentUnitReference)(nil), // 2: sharelib.ComponentUnitReference
	(*protobuf.Attachment)(nil),             // 3: sharelib.Attachment
	(*protobuf.EmbeddedUser)(nil),           // 4: sharelib.EmbeddedUser
}
var file_worktaskcatalog_proto_depIdxs = []int32{
	1, // 0: mtechnavi.api.worktask.WorkTaskCatalog.category:type_name -> sharelib.NameOption
	2, // 1: mtechnavi.api.worktask.WorkTaskCatalog.management_organization:type_name -> sharelib.ComponentUnitReference
	2, // 2: mtechnavi.api.worktask.WorkTaskCatalog.work_organization:type_name -> sharelib.ComponentUnitReference
	3, // 3: mtechnavi.api.worktask.WorkTaskCatalog.common_attachments:type_name -> sharelib.Attachment
	4, // 4: mtechnavi.api.worktask.WorkTaskCatalog.work_task_catalog_catalog_updated_by:type_name -> sharelib.EmbeddedUser
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_worktaskcatalog_proto_init() }
func file_worktaskcatalog_proto_init() {
	if File_worktaskcatalog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_worktaskcatalog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkTaskCatalog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_worktaskcatalog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_worktaskcatalog_proto_goTypes,
		DependencyIndexes: file_worktaskcatalog_proto_depIdxs,
		MessageInfos:      file_worktaskcatalog_proto_msgTypes,
	}.Build()
	File_worktaskcatalog_proto = out.File
	file_worktaskcatalog_proto_rawDesc = nil
	file_worktaskcatalog_proto_goTypes = nil
	file_worktaskcatalog_proto_depIdxs = nil
}
