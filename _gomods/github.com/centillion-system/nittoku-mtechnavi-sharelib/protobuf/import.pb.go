// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: import.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CSVの取込フォーマットの定義を選択
	//
	// 名称マスタにおける種別を参照
	// e.g.
	//
	//	"A0000021" 管理場所取込フォーマット
	//	"A0000022" 取引先取込フォーマット
	//	"A0000023" 担当者取込フォーマット
	//	"A0000024" 項目取込フォーマット
	//	"A0000025" 図面取込フォーマット
	//	"A0000026" 見積依頼予定取込フォーマット
	Format *NameOption `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	// CSVにおけるヘッダ行の有無
	//
	// false  全行をデータとして読込する
	// true   １行目をヘッダ行として、２行目以降をデータ行として読込む
	Header bool `protobuf:"varint,2,opt,name=header,proto3" json:"header,omitempty"`
	// 列名を指定する
	HeaderColumns []*HeaderColumn `protobuf:"bytes,6,rep,name=header_columns,json=headerColumns,proto3" json:"header_columns,omitempty"`
	// CSVにおける列を区切る文字種
	//
	// システムで定義された以下のいずれかを指定する:
	//  1. "COMMA"  区切り文字として "," を利用する
	//  2. "TAB" 区切り文字として "¥t" を利用する
	CommaName string `protobuf:"bytes,3,opt,name=comma_name,json=commaName,proto3" json:"comma_name,omitempty"`
	// CSVファイルの文字コード
	//
	// システムで定義された以下のいずれかを指定する:
	//  1. "UTF_8"  "UTF-8"にエンコーディングする
	//  2. "SHIFT_JIS" "Shift-JIS"にエンコーディングする
	EncodingName string `protobuf:"bytes,4,opt,name=encoding_name,json=encodingName,proto3" json:"encoding_name,omitempty"`
	// 列のクォートを最小限にする
	//
	// false  全ての列をクォートで囲う
	// true   必要な場合のみクォートで囲う
	QuoteMinimally bool `protobuf:"varint,7,opt,name=quote_minimally,json=quoteMinimally,proto3" json:"quote_minimally,omitempty"`
	// CSVフォーマットの型
	// 例：mtechnavi.api.company.fileformat.ComponentUnitCsvFormatDefault
	TypeName string `protobuf:"bytes,5,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
}

func (x *FileFormat) Reset() {
	*x = FileFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_import_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileFormat) ProtoMessage() {}

func (x *FileFormat) ProtoReflect() protoreflect.Message {
	mi := &file_import_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileFormat.ProtoReflect.Descriptor instead.
func (*FileFormat) Descriptor() ([]byte, []int) {
	return file_import_proto_rawDescGZIP(), []int{0}
}

func (x *FileFormat) GetFormat() *NameOption {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *FileFormat) GetHeader() bool {
	if x != nil {
		return x.Header
	}
	return false
}

func (x *FileFormat) GetHeaderColumns() []*HeaderColumn {
	if x != nil {
		return x.HeaderColumns
	}
	return nil
}

func (x *FileFormat) GetCommaName() string {
	if x != nil {
		return x.CommaName
	}
	return ""
}

func (x *FileFormat) GetEncodingName() string {
	if x != nil {
		return x.EncodingName
	}
	return ""
}

func (x *FileFormat) GetQuoteMinimally() bool {
	if x != nil {
		return x.QuoteMinimally
	}
	return false
}

func (x *FileFormat) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type HeaderColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 辞書コード
	//
	// CSVフォーマットで指定されたheaderの値
	MessageName string `protobuf:"bytes,1,opt,name=message_name,json=messageName,proto3" json:"message_name,omitempty"`
	// 列名
	//
	// 辞書コードをもとに項目名に変換した値を指定
	// 変換できなかった場合は空とする
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *HeaderColumn) Reset() {
	*x = HeaderColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_import_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderColumn) ProtoMessage() {}

func (x *HeaderColumn) ProtoReflect() protoreflect.Message {
	mi := &file_import_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderColumn.ProtoReflect.Descriptor instead.
func (*HeaderColumn) Descriptor() ([]byte, []int) {
	return file_import_proto_rawDescGZIP(), []int{1}
}

func (x *HeaderColumn) GetMessageName() string {
	if x != nil {
		return x.MessageName
	}
	return ""
}

func (x *HeaderColumn) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type ImportSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 総件数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 正常件数
	Success int64 `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// エラー件数
	Error int64 `protobuf:"varint,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ImportSummary) Reset() {
	*x = ImportSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_import_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSummary) ProtoMessage() {}

func (x *ImportSummary) ProtoReflect() protoreflect.Message {
	mi := &file_import_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSummary.ProtoReflect.Descriptor instead.
func (*ImportSummary) Descriptor() ([]byte, []int) {
	return file_import_proto_rawDescGZIP(), []int{2}
}

func (x *ImportSummary) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ImportSummary) GetSuccess() int64 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *ImportSummary) GetError() int64 {
	if x != nil {
		return x.Error
	}
	return 0
}

type ImportError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 行番号
	// 行番号が特定できないエラーの場合0とする
	RowNumber int32 `protobuf:"varint,1,opt,name=row_number,json=rowNumber,proto3" json:"row_number,omitempty"`
	// 列番号
	// 列番号が特定できないエラーの場合0とする
	ColumnNumber int32 `protobuf:"varint,2,opt,name=column_number,json=columnNumber,proto3" json:"column_number,omitempty"`
	// エラー種別
	ErrorLevel ErrorLevel `protobuf:"varint,3,opt,name=error_level,json=errorLevel,proto3,enum=sharelib.ErrorLevel" json:"error_level,omitempty"`
	// システムで定義されたメッセージコード
	//
	//	コードはエラーメッセージ一覧 参照
	MessageName string `protobuf:"bytes,4,opt,name=message_name,json=messageName,proto3" json:"message_name,omitempty"`
	// メッセージパラメータ
	MessageArguments []string `protobuf:"bytes,5,rep,name=message_arguments,json=messageArguments,proto3" json:"message_arguments,omitempty"`
}

func (x *ImportError) Reset() {
	*x = ImportError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_import_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportError) ProtoMessage() {}

func (x *ImportError) ProtoReflect() protoreflect.Message {
	mi := &file_import_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportError.ProtoReflect.Descriptor instead.
func (*ImportError) Descriptor() ([]byte, []int) {
	return file_import_proto_rawDescGZIP(), []int{3}
}

func (x *ImportError) GetRowNumber() int32 {
	if x != nil {
		return x.RowNumber
	}
	return 0
}

func (x *ImportError) GetColumnNumber() int32 {
	if x != nil {
		return x.ColumnNumber
	}
	return 0
}

func (x *ImportError) GetErrorLevel() ErrorLevel {
	if x != nil {
		return x.ErrorLevel
	}
	return ErrorLevel_NONE
}

func (x *ImportError) GetMessageName() string {
	if x != nil {
		return x.MessageName
	}
	return ""
}

func (x *ImportError) GetMessageArguments() []string {
	if x != nil {
		return x.MessageArguments
	}
	return nil
}

var File_import_proto protoreflect.FileDescriptor

var file_import_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x1a, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x02, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69,
	0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0e,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x0d, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c,
	0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x0d, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xd8, 0x01, 0x0a, 0x0b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x1d, 0x5a,
	0x1b, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_import_proto_rawDescOnce sync.Once
	file_import_proto_rawDescData = file_import_proto_rawDesc
)

func file_import_proto_rawDescGZIP() []byte {
	file_import_proto_rawDescOnce.Do(func() {
		file_import_proto_rawDescData = protoimpl.X.CompressGZIP(file_import_proto_rawDescData)
	})
	return file_import_proto_rawDescData
}

var file_import_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_import_proto_goTypes = []interface{}{
	(*FileFormat)(nil),    // 0: sharelib.FileFormat
	(*HeaderColumn)(nil),  // 1: sharelib.HeaderColumn
	(*ImportSummary)(nil), // 2: sharelib.ImportSummary
	(*ImportError)(nil),   // 3: sharelib.ImportError
	(*NameOption)(nil),    // 4: sharelib.NameOption
	(ErrorLevel)(0),       // 5: sharelib.ErrorLevel
}
var file_import_proto_depIdxs = []int32{
	4, // 0: sharelib.FileFormat.format:type_name -> sharelib.NameOption
	1, // 1: sharelib.FileFormat.header_columns:type_name -> sharelib.HeaderColumn
	5, // 2: sharelib.ImportError.error_level:type_name -> sharelib.ErrorLevel
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_import_proto_init() }
func file_import_proto_init() {
	if File_import_proto != nil {
		return
	}
	file_nameoption_proto_init()
	file_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_import_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_import_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_import_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_import_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_import_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_import_proto_goTypes,
		DependencyIndexes: file_import_proto_depIdxs,
		MessageInfos:      file_import_proto_msgTypes,
	}.Build()
	File_import_proto = out.File
	file_import_proto_rawDesc = nil
	file_import_proto_goTypes = nil
	file_import_proto_depIdxs = nil
}
