// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: testdata.proto

package protobuf

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Strings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConstFoo         string `protobuf:"bytes,1,opt,name=const_foo,json=constFoo,proto3" json:"const_foo,omitempty"`
	Len_5            string `protobuf:"bytes,2,opt,name=len_5,json=len5,proto3" json:"len_5,omitempty"`
	MinLen_5         string `protobuf:"bytes,3,opt,name=min_len_5,json=minLen5,proto3" json:"min_len_5,omitempty"`
	MaxLen_5         string `protobuf:"bytes,4,opt,name=max_len_5,json=maxLen5,proto3" json:"max_len_5,omitempty"`
	Between_1_5      string `protobuf:"bytes,5,opt,name=between_1_5,json=between15,proto3" json:"between_1_5,omitempty"`
	MinBytes_5       string `protobuf:"bytes,6,opt,name=min_bytes_5,json=minBytes5,proto3" json:"min_bytes_5,omitempty"`
	MaxBytes_5       string `protobuf:"bytes,7,opt,name=max_bytes_5,json=maxBytes5,proto3" json:"max_bytes_5,omitempty"`
	BetweenBytes_1_5 string `protobuf:"bytes,8,opt,name=between_bytes_1_5,json=betweenBytes15,proto3" json:"between_bytes_1_5,omitempty"`
	Pattern          string `protobuf:"bytes,9,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Prefix           string `protobuf:"bytes,10,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix           string `protobuf:"bytes,11,opt,name=suffix,proto3" json:"suffix,omitempty"`
	Contains         string `protobuf:"bytes,12,opt,name=contains,proto3" json:"contains,omitempty"`
	NotContains      string `protobuf:"bytes,13,opt,name=not_contains,json=notContains,proto3" json:"not_contains,omitempty"`
}

func (x *Strings) Reset() {
	*x = Strings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strings) ProtoMessage() {}

func (x *Strings) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strings.ProtoReflect.Descriptor instead.
func (*Strings) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{0}
}

func (x *Strings) GetConstFoo() string {
	if x != nil {
		return x.ConstFoo
	}
	return ""
}

func (x *Strings) GetLen_5() string {
	if x != nil {
		return x.Len_5
	}
	return ""
}

func (x *Strings) GetMinLen_5() string {
	if x != nil {
		return x.MinLen_5
	}
	return ""
}

func (x *Strings) GetMaxLen_5() string {
	if x != nil {
		return x.MaxLen_5
	}
	return ""
}

func (x *Strings) GetBetween_1_5() string {
	if x != nil {
		return x.Between_1_5
	}
	return ""
}

func (x *Strings) GetMinBytes_5() string {
	if x != nil {
		return x.MinBytes_5
	}
	return ""
}

func (x *Strings) GetMaxBytes_5() string {
	if x != nil {
		return x.MaxBytes_5
	}
	return ""
}

func (x *Strings) GetBetweenBytes_1_5() string {
	if x != nil {
		return x.BetweenBytes_1_5
	}
	return ""
}

func (x *Strings) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *Strings) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Strings) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *Strings) GetContains() string {
	if x != nil {
		return x.Contains
	}
	return ""
}

func (x *Strings) GetNotContains() string {
	if x != nil {
		return x.NotContains
	}
	return ""
}

type TestingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X string `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
}

func (x *TestingRequest) Reset() {
	*x = TestingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingRequest) ProtoMessage() {}

func (x *TestingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingRequest.ProtoReflect.Descriptor instead.
func (*TestingRequest) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{1}
}

func (x *TestingRequest) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

type TestRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double_         float64  `protobuf:"fixed64,1,opt,name=double_,json=double,proto3" json:"double_,omitempty"`
	Float_          float32  `protobuf:"fixed32,3,opt,name=float_,json=float,proto3" json:"float_,omitempty"`
	Int32_          int32    `protobuf:"varint,5,opt,name=int32_,json=int32,proto3" json:"int32_,omitempty"`
	Int64_          int64    `protobuf:"varint,7,opt,name=int64_,json=int64,proto3" json:"int64_,omitempty"`
	Uint32_         uint32   `protobuf:"varint,9,opt,name=uint32_,json=uint32,proto3" json:"uint32_,omitempty"`
	Uint64_         uint64   `protobuf:"varint,11,opt,name=uint64_,json=uint64,proto3" json:"uint64_,omitempty"`
	Sint32_         int32    `protobuf:"zigzag32,13,opt,name=sint32_,json=sint32,proto3" json:"sint32_,omitempty"`
	Sint64_         int64    `protobuf:"zigzag64,15,opt,name=sint64_,json=sint64,proto3" json:"sint64_,omitempty"`
	Fixed32_        uint32   `protobuf:"fixed32,17,opt,name=fixed32_,json=fixed32,proto3" json:"fixed32_,omitempty"`
	Fixed64_        uint64   `protobuf:"fixed64,19,opt,name=fixed64_,json=fixed64,proto3" json:"fixed64_,omitempty"`
	Sfixed32_       int32    `protobuf:"fixed32,21,opt,name=sfixed32_,json=sfixed32,proto3" json:"sfixed32_,omitempty"`
	Sfixed64_       int64    `protobuf:"fixed64,23,opt,name=sfixed64_,json=sfixed64,proto3" json:"sfixed64_,omitempty"`
	Bool_           bool     `protobuf:"varint,25,opt,name=bool_,json=bool,proto3" json:"bool_,omitempty"`
	String_         string   `protobuf:"bytes,27,opt,name=string_,json=string,proto3" json:"string_,omitempty"`
	RepeatedString_ []string `protobuf:"bytes,29,rep,name=repeated_string_,json=repeatedString,proto3" json:"repeated_string_,omitempty"`
	RepeatedInt64_  []int64  `protobuf:"varint,31,rep,packed,name=repeated_int64_,json=repeatedInt64,proto3" json:"repeated_int64_,omitempty"`
	DeletedAt       int64    `protobuf:"varint,100,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt       int64    `protobuf:"varint,101,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       int64    `protobuf:"varint,102,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TestRecord) Reset() {
	*x = TestRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRecord) ProtoMessage() {}

func (x *TestRecord) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRecord.ProtoReflect.Descriptor instead.
func (*TestRecord) Descriptor() ([]byte, []int) {
	return file_testdata_proto_rawDescGZIP(), []int{2}
}

func (x *TestRecord) GetDouble_() float64 {
	if x != nil {
		return x.Double_
	}
	return 0
}

func (x *TestRecord) GetFloat_() float32 {
	if x != nil {
		return x.Float_
	}
	return 0
}

func (x *TestRecord) GetInt32_() int32 {
	if x != nil {
		return x.Int32_
	}
	return 0
}

func (x *TestRecord) GetInt64_() int64 {
	if x != nil {
		return x.Int64_
	}
	return 0
}

func (x *TestRecord) GetUint32_() uint32 {
	if x != nil {
		return x.Uint32_
	}
	return 0
}

func (x *TestRecord) GetUint64_() uint64 {
	if x != nil {
		return x.Uint64_
	}
	return 0
}

func (x *TestRecord) GetSint32_() int32 {
	if x != nil {
		return x.Sint32_
	}
	return 0
}

func (x *TestRecord) GetSint64_() int64 {
	if x != nil {
		return x.Sint64_
	}
	return 0
}

func (x *TestRecord) GetFixed32_() uint32 {
	if x != nil {
		return x.Fixed32_
	}
	return 0
}

func (x *TestRecord) GetFixed64_() uint64 {
	if x != nil {
		return x.Fixed64_
	}
	return 0
}

func (x *TestRecord) GetSfixed32_() int32 {
	if x != nil {
		return x.Sfixed32_
	}
	return 0
}

func (x *TestRecord) GetSfixed64_() int64 {
	if x != nil {
		return x.Sfixed64_
	}
	return 0
}

func (x *TestRecord) GetBool_() bool {
	if x != nil {
		return x.Bool_
	}
	return false
}

func (x *TestRecord) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *TestRecord) GetRepeatedString_() []string {
	if x != nil {
		return x.RepeatedString_
	}
	return nil
}

func (x *TestRecord) GetRepeatedInt64_() []int64 {
	if x != nil {
		return x.RepeatedInt64_
	}
	return nil
}

func (x *TestRecord) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *TestRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TestRecord) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_testdata_proto protoreflect.FileDescriptor

var file_testdata_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x29, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x04, 0x0a, 0x07, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x27, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x65, 0x6e,
	0x5f, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98,
	0x01, 0x05, 0x52, 0x04, 0x6c, 0x65, 0x6e, 0x35, 0x12, 0x23, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f,
	0x6c, 0x65, 0x6e, 0x5f, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x35, 0x12, 0x23, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x5f, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x4c, 0x65,
	0x6e, 0x35, 0x12, 0x29, 0x0a, 0x0b, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x31, 0x5f,
	0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01,
	0x18, 0x05, 0x52, 0x09, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x31, 0x35, 0x12, 0x27, 0x0a,
	0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x35, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x35, 0x12, 0x27, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x5f, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x35, 0x12,
	0x34, 0x0a, 0x11, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x5f, 0x31, 0x5f, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x31, 0x35, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f, 0x32, 0x0d, 0x72,
	0x65, 0x32, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x3a, 0x03, 0x66, 0x6f,
	0x6f, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x42, 0x03, 0x66, 0x6f, 0x6f, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x26, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x4a, 0x03, 0x66, 0x6f, 0x6f, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x72, 0x06, 0xba, 0x01, 0x03, 0x66, 0x6f, 0x6f, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x1e, 0x0a, 0x0e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x78, 0x22, 0x9b, 0x04, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x5f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06,
	0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x5f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0f, 0x52,
	0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x13, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26,
	0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x5f, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x42, 0x30, 0x5a, 0x2e, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testdata_proto_rawDescOnce sync.Once
	file_testdata_proto_rawDescData = file_testdata_proto_rawDesc
)

func file_testdata_proto_rawDescGZIP() []byte {
	file_testdata_proto_rawDescOnce.Do(func() {
		file_testdata_proto_rawDescData = protoimpl.X.CompressGZIP(file_testdata_proto_rawDescData)
	})
	return file_testdata_proto_rawDescData
}

var file_testdata_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_testdata_proto_goTypes = []interface{}{
	(*Strings)(nil),        // 0: mtechnavi.api.sharelib.validator.testdata.Strings
	(*TestingRequest)(nil), // 1: mtechnavi.api.sharelib.validator.testdata.TestingRequest
	(*TestRecord)(nil),     // 2: mtechnavi.api.sharelib.validator.testdata.TestRecord
}
var file_testdata_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_testdata_proto_init() }
func file_testdata_proto_init() {
	if File_testdata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testdata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testdata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testdata_proto_goTypes,
		DependencyIndexes: file_testdata_proto_depIdxs,
		MessageInfos:      file_testdata_proto_msgTypes,
	}.Build()
	File_testdata_proto = out.File
	file_testdata_proto_rawDesc = nil
	file_testdata_proto_goTypes = nil
	file_testdata_proto_depIdxs = nil
}
