// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: auditlog.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditCategory int32

const (
	// 認証・認可
	AuditCategory_AUTH AuditCategory = 0
	// データログ
	AuditCategory_DATA_ACCESS AuditCategory = 1
	// 操作ログ
	AuditCategory_OPERATION AuditCategory = 2
	// 内部ログ
	AuditCategory_INTERNAL AuditCategory = 3
	// イベントログ
	AuditCategory_EVENT AuditCategory = 4
)

// Enum value maps for AuditCategory.
var (
	AuditCategory_name = map[int32]string{
		0: "AUTH",
		1: "DATA_ACCESS",
		2: "OPERATION",
		3: "INTERNAL",
		4: "EVENT",
	}
	AuditCategory_value = map[string]int32{
		"AUTH":        0,
		"DATA_ACCESS": 1,
		"OPERATION":   2,
		"INTERNAL":    3,
		"EVENT":       4,
	}
)

func (x AuditCategory) Enum() *AuditCategory {
	p := new(AuditCategory)
	*p = x
	return p
}

func (x AuditCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_auditlog_proto_enumTypes[0].Descriptor()
}

func (AuditCategory) Type() protoreflect.EnumType {
	return &file_auditlog_proto_enumTypes[0]
}

func (x AuditCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditCategory.Descriptor instead.
func (AuditCategory) EnumDescriptor() ([]byte, []int) {
	return file_auditlog_proto_rawDescGZIP(), []int{0}
}

type MessageCode int32

const (
	MessageCode_UNKNOWN MessageCode = 0
	// ログイン成功
	MessageCode_AUTH_LOGIN_OK MessageCode = 1
	// ログイン失敗
	MessageCode_AUTH_LOGIN_NG MessageCode = 2
	// ログアウト
	MessageCode_AUTH_LOGOUT MessageCode = 3
	// 認可エラー発生
	MessageCode_AUTH_PERMISSION_NG MessageCode = 4
	// データアクセス
	MessageCode_DATA_ACCESSED MessageCode = 5
	// 操作
	MessageCode_OPERATED MessageCode = 6
	// メールリクエスト成功
	MessageCode_SENDGRID_REQUEST_OK MessageCode = 7
	// メールリクエスト失敗
	MessageCode_SENDGRID_REQUEST_NG MessageCode = 8
	// テナント作成イベント
	MessageCode_EVENT_TENANT_CREATED MessageCode = 9
	// レコードShareイベント
	MessageCode_EVENT_RECORD_SHARED MessageCode = 10
	// レコード作成イベント
	MessageCode_EVENT_RECORD_CREATED MessageCode = 11
	// レコード更新イベント
	MessageCode_EVENT_RECORD_UPDATED MessageCode = 12
	// レコード削除イベント
	MessageCode_EVENT_RECORD_DELETED MessageCode = 13
	// レコードUnshareイベント
	MessageCode_EVENT_RECORD_UNSHARED MessageCode = 14
)

// Enum value maps for MessageCode.
var (
	MessageCode_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "AUTH_LOGIN_OK",
		2:  "AUTH_LOGIN_NG",
		3:  "AUTH_LOGOUT",
		4:  "AUTH_PERMISSION_NG",
		5:  "DATA_ACCESSED",
		6:  "OPERATED",
		7:  "SENDGRID_REQUEST_OK",
		8:  "SENDGRID_REQUEST_NG",
		9:  "EVENT_TENANT_CREATED",
		10: "EVENT_RECORD_SHARED",
		11: "EVENT_RECORD_CREATED",
		12: "EVENT_RECORD_UPDATED",
		13: "EVENT_RECORD_DELETED",
		14: "EVENT_RECORD_UNSHARED",
	}
	MessageCode_value = map[string]int32{
		"UNKNOWN":               0,
		"AUTH_LOGIN_OK":         1,
		"AUTH_LOGIN_NG":         2,
		"AUTH_LOGOUT":           3,
		"AUTH_PERMISSION_NG":    4,
		"DATA_ACCESSED":         5,
		"OPERATED":              6,
		"SENDGRID_REQUEST_OK":   7,
		"SENDGRID_REQUEST_NG":   8,
		"EVENT_TENANT_CREATED":  9,
		"EVENT_RECORD_SHARED":   10,
		"EVENT_RECORD_CREATED":  11,
		"EVENT_RECORD_UPDATED":  12,
		"EVENT_RECORD_DELETED":  13,
		"EVENT_RECORD_UNSHARED": 14,
	}
)

func (x MessageCode) Enum() *MessageCode {
	p := new(MessageCode)
	*p = x
	return p
}

func (x MessageCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageCode) Descriptor() protoreflect.EnumDescriptor {
	return file_auditlog_proto_enumTypes[1].Descriptor()
}

func (MessageCode) Type() protoreflect.EnumType {
	return &file_auditlog_proto_enumTypes[1]
}

func (x MessageCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageCode.Descriptor instead.
func (MessageCode) EnumDescriptor() ([]byte, []int) {
	return file_auditlog_proto_rawDescGZIP(), []int{1}
}

type GenericEventParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// イベントパラメータ
	Data map[string]string `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GenericEventParameter) Reset() {
	*x = GenericEventParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditlog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericEventParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericEventParameter) ProtoMessage() {}

func (x *GenericEventParameter) ProtoReflect() protoreflect.Message {
	mi := &file_auditlog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericEventParameter.ProtoReflect.Descriptor instead.
func (*GenericEventParameter) Descriptor() ([]byte, []int) {
	return file_auditlog_proto_rawDescGZIP(), []int{0}
}

func (x *GenericEventParameter) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_auditlog_proto protoreflect.FileDescriptor

var file_auditlog_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1f, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f,
	0x67, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6d, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x61, 0x76, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c,
	0x69, 0x62, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x52, 0x0a, 0x0d, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x41,
	0x55, 0x54, 0x48, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x2a, 0xd8,
	0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41,
	0x55, 0x54, 0x48, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a,
	0x08, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x45, 0x4e, 0x44, 0x47, 0x52, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x4f, 0x4b, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x4e, 0x44, 0x47, 0x52, 0x49, 0x44,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x18, 0x0a,
	0x14, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x10, 0x0a,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45,
	0x43, 0x4f, 0x52, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x0d, 0x12, 0x19,
	0x0a, 0x15, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x55,
	0x4e, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x10, 0x0e, 0x42, 0x26, 0x5a, 0x24, 0x6d, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x61, 0x76, 0x69, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x6c, 0x69, 0x62, 0x2f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auditlog_proto_rawDescOnce sync.Once
	file_auditlog_proto_rawDescData = file_auditlog_proto_rawDesc
)

func file_auditlog_proto_rawDescGZIP() []byte {
	file_auditlog_proto_rawDescOnce.Do(func() {
		file_auditlog_proto_rawDescData = protoimpl.X.CompressGZIP(file_auditlog_proto_rawDescData)
	})
	return file_auditlog_proto_rawDescData
}

var file_auditlog_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_auditlog_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_auditlog_proto_goTypes = []interface{}{
	(AuditCategory)(0),            // 0: mtechnavi.api.sharelib.auditlog.AuditCategory
	(MessageCode)(0),              // 1: mtechnavi.api.sharelib.auditlog.MessageCode
	(*GenericEventParameter)(nil), // 2: mtechnavi.api.sharelib.auditlog.GenericEventParameter
	nil,                           // 3: mtechnavi.api.sharelib.auditlog.GenericEventParameter.DataEntry
}
var file_auditlog_proto_depIdxs = []int32{
	3, // 0: mtechnavi.api.sharelib.auditlog.GenericEventParameter.Data:type_name -> mtechnavi.api.sharelib.auditlog.GenericEventParameter.DataEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_auditlog_proto_init() }
func file_auditlog_proto_init() {
	if File_auditlog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auditlog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericEventParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auditlog_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_auditlog_proto_goTypes,
		DependencyIndexes: file_auditlog_proto_depIdxs,
		EnumInfos:         file_auditlog_proto_enumTypes,
		MessageInfos:      file_auditlog_proto_msgTypes,
	}.Build()
	File_auditlog_proto = out.File
	file_auditlog_proto_rawDesc = nil
	file_auditlog_proto_goTypes = nil
	file_auditlog_proto_depIdxs = nil
}
